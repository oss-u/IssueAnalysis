[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/155328281",
    "html_url": "https://github.com/jupyter/notebook/issues/713#issuecomment-155328281",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/713",
    "id": 155328281,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTMyODI4MQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-10T06:54:10Z",
    "updated_at": "2015-11-10T06:54:10Z",
    "author_association": "MEMBER",
    "body": "IPython does not have cache for that. Are you using IPython.Image with or without embeding option, if without then the browser a caching, and there is nothing we can do for that, \n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/155421286",
    "html_url": "https://github.com/jupyter/notebook/issues/713#issuecomment-155421286",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/713",
    "id": 155421286,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTQyMTI4Ng==",
    "user": {
      "login": "eulerreich",
      "id": 4183609,
      "node_id": "MDQ6VXNlcjQxODM2MDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4183609?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eulerreich",
      "html_url": "https://github.com/eulerreich",
      "followers_url": "https://api.github.com/users/eulerreich/followers",
      "following_url": "https://api.github.com/users/eulerreich/following{/other_user}",
      "gists_url": "https://api.github.com/users/eulerreich/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eulerreich/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eulerreich/subscriptions",
      "organizations_url": "https://api.github.com/users/eulerreich/orgs",
      "repos_url": "https://api.github.com/users/eulerreich/repos",
      "events_url": "https://api.github.com/users/eulerreich/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eulerreich/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-10T13:39:54Z",
    "updated_at": "2015-11-10T13:39:54Z",
    "author_association": "NONE",
    "body": "What do you mean by the embedding option? I just call Image(url=path) in a\ncell\nOn Nov 10, 2015 12:54 AM, \"Matthias Bussonnier\" notifications@github.com\nwrote:\n\n> IPython does not have cache for that. Are you using IPython.Image with or\n> without embeding option, if without then the browser a caching, and there\n> is nothing we can do for that,\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/jupyter/notebook/issues/713#issuecomment-155328281.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/155552757",
    "html_url": "https://github.com/jupyter/notebook/issues/713#issuecomment-155552757",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/713",
    "id": 155552757,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTU1Mjc1Nw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-10T20:14:50Z",
    "updated_at": "2015-11-10T20:14:50Z",
    "author_association": "MEMBER",
    "body": "> I just call Image(url=path)\n\nI am not supposed to know that. You just tell me that that you are using Image, \n\nKeep in mind that `Image(<a url>)` is not the same as `Image(<a filename>)` is not the same as `Image(url=<a url>)`is not the same as `Image(filename=<a filename>)` is likely not the same as half of the other similar option, where you add the keyword `embed=True|False`. \n\nSo let's look at the doc. Non relevant part removed.\n\n``` python\nIn[2]: from IPython.display import Image\nIn[3]: Image?? \nInit signature: Image(self, data=None, url=None, filename=None, format='png', embed=None, ...)\n\nCreate a PNG/JPEG image object given raw data.\n\n...\nParameters\n----------\ndata : unicode, str or bytes\n    ...\n    This always results in embedded image data.\nurl : unicode\n    A URL to download the data from. If you specify `url=`,\n    the image data will not be embedded unless you also specify `embed=True`.\nfilename : unicode\n    ...\n    Images from a file are always embedded.\nformat : unicode\n    ...\nembed : bool\n    Should the image data be embedded using a data URI (True) or be\n    loaded using an <img> tag. Set this to True if you want the image\n    to be viewable later with no internet connection in the notebook.\n\n    Default is `True`, unless the keyword argument `url` is set, then\n    default value is `False`.\n\n    ...\nwidth : int\n    ...\nheight : int\n    ...\nretina : bool\n    ...\nunconfined: bool\n    ...\nmetadata: dict\n    ...\n\nExamples\n--------\n# embedded image data, works in qtconsole and notebook\n# when passed positionally, the first arg can be any of raw image data,\n# a URL, or a filename from which to load image data.\n# The result is always embedding image data for inline images.\nImage('http://www.google.fr/images/srpr/logo3w.png')\nImage('/path/to/image.jpg')\nImage(b'RAW_PNG_DATA...')\n\n# Specifying Image(url=...) does not embed the image data,\n# it only generates `<img>` tag with a link to the source.\n# This will not work in the qtconsole or offline.\n```\n\nSo actually we have 3 exclusive kwargs, each with 2 possiblity + embed with 3 possibility (True, False, None) that's 3_2_3 = 18 call signatures that are commonly used by our users, probably a third of which don't make sens, like if you pass a `<url>` to `filename=`.\n\nIn your case, for me, It's particularly non obvious why you load a file from disk with a `url=`, I personally would assume that from disk you use `filename=`. But you probably choose to use `url=` for a good reason after reading the documentation instead of using the default argument. I don't see how you could have chosen `url=` otherwise. So let's stick with `url=`. \n\nI still have to make assumption as to all the \"just\" in the `just call Image(url=path)` is doing:\nAs far as I understand, for `url=` to work in what seem to be your case,  you are **likely** to pass a relative path, which **by chance** should correspond to a relative url (hypothesis A). Your also likely to not have changed directory in your notebook (hypothesis B), or you would get a 404. I make these 2 hypothesis because I don't want to enumerate all the other possibilities and (sub) possibilities. \n\nSo you're not setting `embed` despite passing another kwarg which is not the first. \n(Sorry if you are in an older version of IPython that document the existence of `url=` and not `embed=`). That's means it default to `None`: when using  `url=` it's equivalent to `embed=False` according the the function docstring, so you are not embedding, and you are actually passing a relative path, which is interpreted as a relative url, which by chance works because you haven't changed working directory. So when you re-exec you are hitting browser caching. So there is nothing we can do.\n\nThis conclusion only hold if (Hypothesis A) and (Hypothesis B) holds, otherwise I'm not sure what's happening. (Hypothesis A) is also unlikely if you are not on a unix-based machine because of `os.sep`, though we, and windows too do go through complex mechanisme to allow forward slashes in path names. \n\nHope that would give you enough information to determine the cause with certainty, I personally don't have sufficient knowledge of what you are doing to give a judgement with 100% certainty. \n\nThanks. \n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/155564267",
    "html_url": "https://github.com/jupyter/notebook/issues/713#issuecomment-155564267",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/713",
    "id": 155564267,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTU2NDI2Nw==",
    "user": {
      "login": "eulerreich",
      "id": 4183609,
      "node_id": "MDQ6VXNlcjQxODM2MDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4183609?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eulerreich",
      "html_url": "https://github.com/eulerreich",
      "followers_url": "https://api.github.com/users/eulerreich/followers",
      "following_url": "https://api.github.com/users/eulerreich/following{/other_user}",
      "gists_url": "https://api.github.com/users/eulerreich/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eulerreich/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eulerreich/subscriptions",
      "organizations_url": "https://api.github.com/users/eulerreich/orgs",
      "repos_url": "https://api.github.com/users/eulerreich/repos",
      "events_url": "https://api.github.com/users/eulerreich/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eulerreich/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-10T21:00:11Z",
    "updated_at": "2015-11-10T21:00:11Z",
    "author_association": "NONE",
    "body": "Sorry about not giving you enough info.\n\nI'm on Ubuntu 14.04, with Python 2 (I'm assuming the latest version; it can\nbe at most a few months old).\n\nSo Image(filename=<file>), Image(data=<file>), or Image(<file>) can't load\nthe gif. It's either \"gifs can't be embedded\" (embed=True) or the notebook\nshows a broken image (embed=False).\n\nI am passing a relative path, and have not changed directory.\n\nOn Tue, Nov 10, 2015 at 2:14 PM, Matthias Bussonnier <\nnotifications@github.com> wrote:\n\n> I just call Image(url=path)\n> \n> I am not supposed to know that. You just tell me that that you are using\n> Image,\n> \n> Keep in mind that Image(<a url>) is not the same as Image(<a filename>)\n> is not the same as Image(url=<a url>)is not the same as Image(filename=<a\n> filename>) is likely not the same as half of the other similar option,\n> where you add the keyword embed=True|False.\n> \n> So let's look at the doc. Non relevant part removed.\n> \n> In[2]: from IPython.display import Image\n> In[3]: Image??\n> Init signature: Image(self, data=None, url=None, filename=None, format='png', embed=None, ...)\n> \n> Create a PNG/JPEG image object given raw data.\n> \n> ...\n> Parameters----------\n> data : unicode, str or bytes\n>     ...\n>     This always results in embedded image data.\n> url : unicode\n>     A URL to download the data from. If you specify `url=`,\n>     the image data will not be embedded unless you also specify `embed=True`.\n> filename : unicode\n>     ...\n>     Images from a file are always embedded.format : unicode\n>     ...\n> embed : bool\n>     Should the image data be embedded using a data URI (True) or be\n>     loaded using an <img> tag. Set this to True if you want the image\n>     to be viewable later with no internet connection in the notebook.\n> \n> ```\n> Default is `True`, unless the keyword argument `url` is set, then\n> default value is `False`.\n> \n> ...\n> ```\n> \n> width : int\n>     ...\n> height : int\n>     ...\n> retina : bool\n>     ...\n> unconfined: bool\n>     ...\n> metadata: dict\n>     ...\n> \n> Examples--------# embedded image data, works in qtconsole and notebook# when passed positionally, the first arg can be any of raw image data,# a URL, or a filename from which to load image data.# The result is always embedding image data for inline images.\n> Image('http://www.google.fr/images/srpr/logo3w.png')\n> Image('/path/to/image.jpg')\n> Image(b'RAW_PNG_DATA...')\n> \n> # Specifying Image(url=...) does not embed the image data,# it only generates `<img>` tag with a link to the source.# This will not work in the qtconsole or offline.\n> \n> So actually we have 3 exclusive kwargs, each with 2 possiblity + embed\n> with 3 possibility (True, False, None) that's 3_2_3 = 18 call signatures\n> that are commonly used by our users, probably a third of which don't make\n> sens, like if you pass a <url> to filename=.\n> \n> In your case, for me, It's particularly non obvious why you load a file\n> from disk with a url=, I personally would assume that from disk you use\n> filename=. But you probably choose to use url= for a good reason after\n> reading the documentation instead of using the default argument. I don't\n> see how you could have chosen url= otherwise. So let's stick with url=.\n> \n> I still have to make assumption as to all the \"just\" in the just call\n> Image(url=path) is doing:\n> As far as I understand, for url= to work in what seem to be your case,\n> you are _likely_ to pass a relative path, which _by chance_ should\n> correspond to a relative url (hypothesis A). Your also likely to not have\n> changed directory in your notebook (hypothesis B), or you would get a 404.\n> I make these 2 hypothesis because I don't want to enumerate all the other\n> possibilities and (sub) possibilities.\n> \n> So you're not setting embed despite passing another kwarg which is not\n> the first.\n> (Sorry if you are in an older version of IPython that document the\n> existence of url= and not embed=). That's means it default to None: when\n> using url= it's equivalent to embed=False according the the function\n> docstring, so you are not embedding, and you are actually passing a\n> relative path, which is interpreted as a relative url, which by chance\n> works because you haven't changed working directory. So when you re-exec\n> you are hitting browser caching. So there is nothing we can do.\n> \n> This conclusion only hold if (Hypothesis A) and (Hypothesis B) holds,\n> otherwise I'm not sure what's happening. (Hypothesis A) is also unlikely if\n> you are not on a unix-based machine because of os.sep, though we, and\n> windows too do go through complex mechanisme to allow forward slashes in\n> path names.\n> \n> Hope that would give you enough information to determine the cause with\n> certainty, I personally don't have sufficient knowledge of what you are\n> doing to give a judgement with 100% certainty.\n> \n> Thanks.\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/jupyter/notebook/issues/713#issuecomment-155552757.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/155564850",
    "html_url": "https://github.com/jupyter/notebook/issues/713#issuecomment-155564850",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/713",
    "id": 155564850,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTU2NDg1MA==",
    "user": {
      "login": "eulerreich",
      "id": 4183609,
      "node_id": "MDQ6VXNlcjQxODM2MDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4183609?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eulerreich",
      "html_url": "https://github.com/eulerreich",
      "followers_url": "https://api.github.com/users/eulerreich/followers",
      "following_url": "https://api.github.com/users/eulerreich/following{/other_user}",
      "gists_url": "https://api.github.com/users/eulerreich/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eulerreich/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eulerreich/subscriptions",
      "organizations_url": "https://api.github.com/users/eulerreich/orgs",
      "repos_url": "https://api.github.com/users/eulerreich/repos",
      "events_url": "https://api.github.com/users/eulerreich/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eulerreich/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-10T21:02:46Z",
    "updated_at": "2015-11-10T21:02:46Z",
    "author_association": "NONE",
    "body": "Are there obstructions to embedding gifs or is it just something no one has\nneeded all that much?\n\nOn Tue, Nov 10, 2015 at 3:00 PM, Greg Yang sorcererofdm@gmail.com wrote:\n\n> Sorry about not giving you enough info.\n> \n> I'm on Ubuntu 14.04, with Python 2 (I'm assuming the latest version; it\n> can be at most a few months old).\n> \n> So Image(filename=<file>), Image(data=<file>), or Image(<file>) can't load\n> the gif. It's either \"gifs can't be embedded\" (embed=True) or the notebook\n> shows a broken image (embed=False).\n> \n> I am passing a relative path, and have not changed directory.\n> \n> On Tue, Nov 10, 2015 at 2:14 PM, Matthias Bussonnier <\n> notifications@github.com> wrote:\n> \n> > I just call Image(url=path)\n> > \n> > I am not supposed to know that. You just tell me that that you are using\n> > Image,\n> > \n> > Keep in mind that Image(<a url>) is not the same as Image(<a filename>)\n> > is not the same as Image(url=<a url>)is not the same as Image(filename=<a\n> > filename>) is likely not the same as half of the other similar option,\n> > where you add the keyword embed=True|False.\n> > \n> > So let's look at the doc. Non relevant part removed.\n> > \n> > In[2]: from IPython.display import Image\n> > In[3]: Image??\n> > Init signature: Image(self, data=None, url=None, filename=None, format='png', embed=None, ...)\n> > \n> > Create a PNG/JPEG image object given raw data.\n> > \n> > ...\n> > Parameters----------\n> > data : unicode, str or bytes\n> >     ...\n> >     This always results in embedded image data.\n> > url : unicode\n> >     A URL to download the data from. If you specify `url=`,\n> >     the image data will not be embedded unless you also specify `embed=True`.\n> > filename : unicode\n> >     ...\n> >     Images from a file are always embedded.format : unicode\n> >     ...\n> > embed : bool\n> >     Should the image data be embedded using a data URI (True) or be\n> >     loaded using an <img> tag. Set this to True if you want the image\n> >     to be viewable later with no internet connection in the notebook.\n> > \n> > ```\n> > Default is `True`, unless the keyword argument `url` is set, then\n> > default value is `False`.\n> > \n> > ...\n> > ```\n> > \n> > width : int\n> >     ...\n> > height : int\n> >     ...\n> > retina : bool\n> >     ...\n> > unconfined: bool\n> >     ...\n> > metadata: dict\n> >     ...\n> > \n> > Examples--------# embedded image data, works in qtconsole and notebook# when passed positionally, the first arg can be any of raw image data,# a URL, or a filename from which to load image data.# The result is always embedding image data for inline images.\n> > Image('http://www.google.fr/images/srpr/logo3w.png')\n> > Image('/path/to/image.jpg')\n> > Image(b'RAW_PNG_DATA...')\n> > \n> > # Specifying Image(url=...) does not embed the image data,# it only generates `<img>` tag with a link to the source.# This will not work in the qtconsole or offline.\n> > \n> > So actually we have 3 exclusive kwargs, each with 2 possiblity + embed\n> > with 3 possibility (True, False, None) that's 3_2_3 = 18 call signatures\n> > that are commonly used by our users, probably a third of which don't make\n> > sens, like if you pass a <url> to filename=.\n> > \n> > In your case, for me, It's particularly non obvious why you load a file\n> > from disk with a url=, I personally would assume that from disk you use\n> > filename=. But you probably choose to use url= for a good reason after\n> > reading the documentation instead of using the default argument. I don't\n> > see how you could have chosen url= otherwise. So let's stick with url=.\n> > \n> > I still have to make assumption as to all the \"just\" in the just call\n> > Image(url=path) is doing:\n> > As far as I understand, for url= to work in what seem to be your case,\n> > you are _likely_ to pass a relative path, which _by chance_ should\n> > correspond to a relative url (hypothesis A). Your also likely to not have\n> > changed directory in your notebook (hypothesis B), or you would get a 404.\n> > I make these 2 hypothesis because I don't want to enumerate all the other\n> > possibilities and (sub) possibilities.\n> > \n> > So you're not setting embed despite passing another kwarg which is not\n> > the first.\n> > (Sorry if you are in an older version of IPython that document the\n> > existence of url= and not embed=). That's means it default to None: when\n> > using url= it's equivalent to embed=False according the the function\n> > docstring, so you are not embedding, and you are actually passing a\n> > relative path, which is interpreted as a relative url, which by chance\n> > works because you haven't changed working directory. So when you re-exec\n> > you are hitting browser caching. So there is nothing we can do.\n> > \n> > This conclusion only hold if (Hypothesis A) and (Hypothesis B) holds,\n> > otherwise I'm not sure what's happening. (Hypothesis A) is also unlikely if\n> > you are not on a unix-based machine because of os.sep, though we, and\n> > windows too do go through complex mechanisme to allow forward slashes in\n> > path names.\n> > \n> > Hope that would give you enough information to determine the cause with\n> > certainty, I personally don't have sufficient knowledge of what you are\n> > doing to give a judgement with 100% certainty.\n> > \n> > Thanks.\n> > \n> > â€”\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/jupyter/notebook/issues/713#issuecomment-155552757.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/155600999",
    "html_url": "https://github.com/jupyter/notebook/issues/713#issuecomment-155600999",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/713",
    "id": 155600999,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTYwMDk5OQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-10T23:28:09Z",
    "updated_at": "2015-11-10T23:28:09Z",
    "author_association": "MEMBER",
    "body": "Ok, so it used to be impossible to embed GIF, indeed. There is no reason for it anymore. A traceback is generally useful to  figure out the issue localisation:\n\n```\n---------------------------------------------------------------------------\nValueError                                Traceback (most recent call last)\n<ipython-input-3-3a5539745a2d> in <module>()\n----> 1 display(Image('REIMB.gif', format='jpg'))\n\n/Users/bussonniermatthias/anaconda3/envs/35/lib/python3.5/site-packages/IPython/core/display.py in __init__(self, data, url, filename, format, embed, width, height, retina, unconfined, metadata)\n    731 \n    732         if self.embed and self.format not in self._ACCEPTABLE_EMBEDDINGS:\n--> 733             raise ValueError(\"Cannot embed the '%s' image format\" % (self.format))\n    734         self.width = width\n    735         self.height = height\n\nValueError: Cannot embed the 'gif' image format\n```\n\nOur code does indead not know how to embed gif, and it should be easy to fix. \nthe `format=` kwarg should override autodetection also, it does not, we can try to fix that. \n\nYou can workaround by renaming the file to `.png` and use `filename=`, \nor silly but the following should work (at least does for me):\n\n``` python\nwith open('yourfile.gif','rb') as f:\n    display(Image(f.read()), format='png')\n```\n\nI'll rename the issue.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/155612645",
    "html_url": "https://github.com/jupyter/notebook/issues/713#issuecomment-155612645",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/713",
    "id": 155612645,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NTYxMjY0NQ==",
    "user": {
      "login": "eulerreich",
      "id": 4183609,
      "node_id": "MDQ6VXNlcjQxODM2MDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4183609?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/eulerreich",
      "html_url": "https://github.com/eulerreich",
      "followers_url": "https://api.github.com/users/eulerreich/followers",
      "following_url": "https://api.github.com/users/eulerreich/following{/other_user}",
      "gists_url": "https://api.github.com/users/eulerreich/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/eulerreich/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/eulerreich/subscriptions",
      "organizations_url": "https://api.github.com/users/eulerreich/orgs",
      "repos_url": "https://api.github.com/users/eulerreich/repos",
      "events_url": "https://api.github.com/users/eulerreich/events{/privacy}",
      "received_events_url": "https://api.github.com/users/eulerreich/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-11T00:33:47Z",
    "updated_at": "2015-11-11T00:33:47Z",
    "author_association": "NONE",
    "body": "OK that `with open` clause worked for me. Hopefully the 'gif' format can be\nofficially supported soon.\n\nOn Tue, Nov 10, 2015 at 5:28 PM, Matthias Bussonnier <\nnotifications@github.com> wrote:\n\n> Ok, so it used to be impossible to embed GIF, indeed. There is no reason\n> for it anymore. A traceback is generally useful to figure out the issue\n> localisation:\n> \n> ---\n> \n> ValueError                                Traceback (most recent call last)\n> <ipython-input-3-3a5539745a2d> in <module>()\n> ----> 1 display(Image('REIMB.gif', format='jpg'))\n> \n> /Users/bussonniermatthias/anaconda3/envs/35/lib/python3.5/site-packages/IPython/core/display.py in **init**(self, data, url, filename, format, embed, width, height, retina, unconfined, metadata)\n>     731\n>     732         if self.embed and self.format not in self._ACCEPTABLE_EMBEDDINGS:\n> --> 733             raise ValueError(\"Cannot embed the '%s' image format\" % (self.format))\n>     734         self.width = width\n>     735         self.height = height\n> \n> ValueError: Cannot embed the 'gif' image format\n> \n> Our code does indead not know how to embed gif, and it should be easy to\n> fix.\n> the format= kwarg should override autodetection also, it does not, we can\n> try to fix that.\n> \n> You can workaround by renaming the file to .png and use filename=,\n> or silly but the following should work (at least does for me):\n> \n> with open('yourfile.gif','rb') as f:\n>     display(Image(f.read()), format='png')\n> \n> I'll rename the issue.\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/jupyter/notebook/issues/713#issuecomment-155600999.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/174126864",
    "html_url": "https://github.com/jupyter/notebook/issues/713#issuecomment-174126864",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/713",
    "id": 174126864,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3NDEyNjg2NA==",
    "user": {
      "login": "udibr",
      "id": 608789,
      "node_id": "MDQ6VXNlcjYwODc4OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/608789?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/udibr",
      "html_url": "https://github.com/udibr",
      "followers_url": "https://api.github.com/users/udibr/followers",
      "following_url": "https://api.github.com/users/udibr/following{/other_user}",
      "gists_url": "https://api.github.com/users/udibr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/udibr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/udibr/subscriptions",
      "organizations_url": "https://api.github.com/users/udibr/orgs",
      "repos_url": "https://api.github.com/users/udibr/repos",
      "events_url": "https://api.github.com/users/udibr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/udibr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-23T03:58:35Z",
    "updated_at": "2016-01-23T03:58:35Z",
    "author_association": "NONE",
    "body": "Maybe this can help. I've used url but forced the browser cache to fail by doing something like\n\n```\nImage(url='./demo.gif'+'?'+str(random.random()))\n```\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/257084430",
    "html_url": "https://github.com/jupyter/notebook/issues/713#issuecomment-257084430",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/713",
    "id": 257084430,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NzA4NDQzMA==",
    "user": {
      "login": "elmerehbi",
      "id": 3155152,
      "node_id": "MDQ6VXNlcjMxNTUxNTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3155152?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/elmerehbi",
      "html_url": "https://github.com/elmerehbi",
      "followers_url": "https://api.github.com/users/elmerehbi/followers",
      "following_url": "https://api.github.com/users/elmerehbi/following{/other_user}",
      "gists_url": "https://api.github.com/users/elmerehbi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/elmerehbi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/elmerehbi/subscriptions",
      "organizations_url": "https://api.github.com/users/elmerehbi/orgs",
      "repos_url": "https://api.github.com/users/elmerehbi/repos",
      "events_url": "https://api.github.com/users/elmerehbi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/elmerehbi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-29T10:42:24Z",
    "updated_at": "2016-10-29T10:42:24Z",
    "author_association": "NONE",
    "body": "I haven't read all comments but I just renamed the image with a .png extension and used Image('filename.png') and it works fine.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/312700707",
    "html_url": "https://github.com/jupyter/notebook/issues/713#issuecomment-312700707",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/713",
    "id": 312700707,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjcwMDcwNw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-03T17:34:45Z",
    "updated_at": "2017-07-03T17:34:45Z",
    "author_association": "MEMBER",
    "body": "What needs to change here? Should we add handling for the gif mimetype?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/318200655",
    "html_url": "https://github.com/jupyter/notebook/issues/713#issuecomment-318200655",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/713",
    "id": 318200655,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODIwMDY1NQ==",
    "user": {
      "login": "gnestor",
      "id": 512354,
      "node_id": "MDQ6VXNlcjUxMjM1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/512354?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnestor",
      "html_url": "https://github.com/gnestor",
      "followers_url": "https://api.github.com/users/gnestor/followers",
      "following_url": "https://api.github.com/users/gnestor/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnestor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnestor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnestor/subscriptions",
      "organizations_url": "https://api.github.com/users/gnestor/orgs",
      "repos_url": "https://api.github.com/users/gnestor/repos",
      "events_url": "https://api.github.com/users/gnestor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnestor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-26T22:24:42Z",
    "updated_at": "2017-07-26T22:25:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "AFAIK, this is an issue with ipython (as `Image` is coming from `IPython.display`). Let's move the discussion to https://github.com/ipython/ipython/issues/10045. \r\n\r\nI don't understand all of the details here, but it should relatively easy to support GIFs in `Image` given that both of the following work: \r\n\r\n```py\r\nImage(filename=\"../giphy.gif.png\")\r\n```\r\n\r\n```py\r\nwith open('../giphy.gif','rb') as f:\r\n    display(Image(data=f.read(), format='png'))\r\n```\r\n\r\nClosing...",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/318499730",
    "html_url": "https://github.com/jupyter/notebook/issues/713#issuecomment-318499730",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/713",
    "id": 318499730,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODQ5OTczMA==",
    "user": {
      "login": "gnestor",
      "id": 512354,
      "node_id": "MDQ6VXNlcjUxMjM1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/512354?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnestor",
      "html_url": "https://github.com/gnestor",
      "followers_url": "https://api.github.com/users/gnestor/followers",
      "following_url": "https://api.github.com/users/gnestor/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnestor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnestor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnestor/subscriptions",
      "organizations_url": "https://api.github.com/users/gnestor/orgs",
      "repos_url": "https://api.github.com/users/gnestor/repos",
      "events_url": "https://api.github.com/users/gnestor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnestor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-27T22:05:11Z",
    "updated_at": "2017-07-27T22:05:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "I take that back: The notebook needs to support the `image/gif` mimetype (https://github.com/jupyter/notebook/pull/2702) in addition to ipython supporting `format=\"gif\"` in IPython.display.Image (https://github.com/ipython/ipython/pull/10716) and ipykernel supporting `image/gif` mimetype (https://github.com/ipython/ipykernel/pull/254). ",
    "performed_via_github_app": null
  }
]
