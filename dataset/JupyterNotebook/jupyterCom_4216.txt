[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/439379588",
    "html_url": "https://github.com/jupyter/notebook/pull/4216#issuecomment-439379588",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4216",
    "id": 439379588,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTM3OTU4OA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-16T12:32:35Z",
    "updated_at": "2018-11-16T12:32:35Z",
    "author_association": "MEMBER",
    "body": "Thanks. The use case makes sense, but I think it be tidier to do it in the parent process that launches the notebook - wait for it to finish, then shut the server down. That will catch any possible way that the server might terminate.\r\n\r\nIf you want to do it from inside Python, you can use the [atexit module](https://docs.python.org/3/library/atexit.html) to call a function on exit. You can do that in your `.py` config file, or in a server extension. This will catch most ways that the server can terminate, but not e.g. if the server process segfaults or you `kill -9` it. ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/439401490",
    "html_url": "https://github.com/jupyter/notebook/pull/4216#issuecomment-439401490",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4216",
    "id": 439401490,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTQwMTQ5MA==",
    "user": {
      "login": "darkocerdic",
      "id": 998371,
      "node_id": "MDQ6VXNlcjk5ODM3MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/998371?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darkocerdic",
      "html_url": "https://github.com/darkocerdic",
      "followers_url": "https://api.github.com/users/darkocerdic/followers",
      "following_url": "https://api.github.com/users/darkocerdic/following{/other_user}",
      "gists_url": "https://api.github.com/users/darkocerdic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darkocerdic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darkocerdic/subscriptions",
      "organizations_url": "https://api.github.com/users/darkocerdic/orgs",
      "repos_url": "https://api.github.com/users/darkocerdic/repos",
      "events_url": "https://api.github.com/users/darkocerdic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darkocerdic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-16T14:00:52Z",
    "updated_at": "2018-11-16T14:00:52Z",
    "author_association": "NONE",
    "body": "@takluyver Your proposal certainly works but if I use the parent process then it will trigger a VM shutdown even if kill the notebook intentionally without wanting to power off the VM. This commit makes it explicit that it should only trigger the VM shutdown script in case of inactivity, not a manual killing of a notebook. In my work I usually start and stop a notebook server several times and having to worry about a process invoking a VM stop each time I manually stop the notebook is cumbersome.\r\n\r\nI'm aware that a notebook server might segfault and then the script would not be triggered but that is an edge case that many people would not be worried about.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/439408891",
    "html_url": "https://github.com/jupyter/notebook/pull/4216#issuecomment-439408891",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4216",
    "id": 439408891,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTQwODg5MQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-16T14:25:14Z",
    "updated_at": "2018-11-16T14:25:14Z",
    "author_association": "MEMBER",
    "body": "Maybe it would be neater to have a specific exit code for 'server terminated due to inactivity', which you could check from the thing launching the server? Or maybe something should access the activity monitoring information from outside the server so it can shutdown the entire VM, instead of just the server shutting itself down?\r\n\r\nIt's possible that Jupyterhub has already addressed something like this (@minrk?)\r\n\r\nI know it probably seems like I'm being picky, but I think a 'shutdown hook' opens a lot more questions than might be apparent at first. Like: should it run a subprocess with or without a shell, or call a Python function? What kinds of shutdown should it fire on? What happens if the shutdown hook itself never finishes? If we're going to have a time limit, how long is too long? I'm concerned that we could quickly end up with 30 new config options to do something that's better handled by the system launching the notebook.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/439419132",
    "html_url": "https://github.com/jupyter/notebook/pull/4216#issuecomment-439419132",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4216",
    "id": 439419132,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTQxOTEzMg==",
    "user": {
      "login": "darkocerdic",
      "id": 998371,
      "node_id": "MDQ6VXNlcjk5ODM3MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/998371?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darkocerdic",
      "html_url": "https://github.com/darkocerdic",
      "followers_url": "https://api.github.com/users/darkocerdic/followers",
      "following_url": "https://api.github.com/users/darkocerdic/following{/other_user}",
      "gists_url": "https://api.github.com/users/darkocerdic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darkocerdic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darkocerdic/subscriptions",
      "organizations_url": "https://api.github.com/users/darkocerdic/orgs",
      "repos_url": "https://api.github.com/users/darkocerdic/repos",
      "events_url": "https://api.github.com/users/darkocerdic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darkocerdic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-16T14:59:03Z",
    "updated_at": "2018-11-16T15:00:33Z",
    "author_association": "NONE",
    "body": "I understand that you are reluctant to add just any change some random user wants but I do think this one makes sense. The benefit of this approach is that it doesn't require adding additional infrastructure to the user setup. It only requires one-time setup to config file and from there on any notebook server behaves as expected. That is in contrast to having to come up with scripts and aliases to start the server and stop the VM after exit (even if you add a special `timeouted` exit code for the notebook server). It lowers the barrier to enabling and using this functionality. It can even be added by a sysadmin to users without interrupting their workflow and commands.\r\n\r\n> should it run a subprocess with or without a shell, or call a Python function? \r\n\r\nI propose to run an external process within a shell since that is the most likely way it would be used.\r\n\r\n> What happens if the shutdown hook itself never finishes? If we're going to have a time limit, how long is too long?\r\n\r\nThen I propose to start a detached process with:\r\n```python\r\nsubprocess.Popen(path, shell=True)\r\n```\r\ninstead of:\r\n```python\r\nsubprocess.call(path, shell=True)\r\n```\r\nThat way the notebook server shutdown will continue immediately and independently of external shutdown process.\r\n\r\n> What kinds of shutdown should it fire on?\r\n\r\nOnly on shutdown because of inactivity. That is already in this PR.\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/439424260",
    "html_url": "https://github.com/jupyter/notebook/pull/4216#issuecomment-439424260",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4216",
    "id": 439424260,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTQyNDI2MA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-16T15:14:39Z",
    "updated_at": "2018-11-16T15:14:39Z",
    "author_association": "MEMBER",
    "body": "It was clear what answers you want to those questions. But someone else might want a different set of answers to all of them. That's what I meant about getting 30 different options: someone else might want to run a process on inactivity and on manual shutdown, and wait for it to finish, and... each use case is straightforward to write the code for, but it adds up to a lot of config options.\r\n\r\nSo the attraction of doing it externally is flexibility. So long as you have the information to distinguish the cases that you're interested in, you can write code that does whatever you like when the notebook server shuts down. And lots of people already know how to write bash scripts or Python scripts to interact with this, whereas a new config option (or set of options) is something everyone will have to find out about.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/439425904",
    "html_url": "https://github.com/jupyter/notebook/pull/4216#issuecomment-439425904",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4216",
    "id": 439425904,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTQyNTkwNA==",
    "user": {
      "login": "darkocerdic",
      "id": 998371,
      "node_id": "MDQ6VXNlcjk5ODM3MQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/998371?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darkocerdic",
      "html_url": "https://github.com/darkocerdic",
      "followers_url": "https://api.github.com/users/darkocerdic/followers",
      "following_url": "https://api.github.com/users/darkocerdic/following{/other_user}",
      "gists_url": "https://api.github.com/users/darkocerdic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darkocerdic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darkocerdic/subscriptions",
      "organizations_url": "https://api.github.com/users/darkocerdic/orgs",
      "repos_url": "https://api.github.com/users/darkocerdic/repos",
      "events_url": "https://api.github.com/users/darkocerdic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darkocerdic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-16T15:19:46Z",
    "updated_at": "2018-11-16T15:19:46Z",
    "author_association": "NONE",
    "body": "Ok, I'm really sad to see that you are so against this change but I guess there is not much I can do about it. 😞 \r\n\r\nSo how do you propose I get this functionality at this moment?\r\nIs it at all possible?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/439448407",
    "html_url": "https://github.com/jupyter/notebook/pull/4216#issuecomment-439448407",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4216",
    "id": 439448407,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzOTQ0ODQwNw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-16T16:28:55Z",
    "updated_at": "2018-11-16T16:29:16Z",
    "author_association": "MEMBER",
    "body": "My opposition isn't necessarily decisive - you may have better luck convincing someone else of it. I don't quite know who to suggest, though.\r\n\r\nWhat you could do at the moment is run a separate script which periodically polls `/api/status`. That has a `last_activity` timestamp. That's the same time that the notebook server uses for its own automatic shutdown. So if you disable the notebook's own automatic shutdown, your own script can decide when the last activity was too long ago, and shutdown the VM.\r\n\r\nThe `shutdown_no_activity_timeout` option also checks for running kernels and terminals (there's another PR about the fact that you can't currently cull idle terminals). You can get the number of kernels from `/api/status` as well. For terminals you need `/api/terminals`, which will return a JSON list.\r\n\r\nThe script will need the authentication token to access the server. To get this, try `notebook.notebookapp.list_running_servers()`. For how to use it, see https://jupyter-notebook.readthedocs.io/en/stable/security.html",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/640204920",
    "html_url": "https://github.com/jupyter/notebook/pull/4216#issuecomment-640204920",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4216",
    "id": 640204920,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MDIwNDkyMA==",
    "user": {
      "login": "blink1073",
      "id": 2096628,
      "node_id": "MDQ6VXNlcjIwOTY2Mjg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2096628?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blink1073",
      "html_url": "https://github.com/blink1073",
      "followers_url": "https://api.github.com/users/blink1073/followers",
      "following_url": "https://api.github.com/users/blink1073/following{/other_user}",
      "gists_url": "https://api.github.com/users/blink1073/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blink1073/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blink1073/subscriptions",
      "organizations_url": "https://api.github.com/users/blink1073/orgs",
      "repos_url": "https://api.github.com/users/blink1073/repos",
      "events_url": "https://api.github.com/users/blink1073/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blink1073/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-07T11:45:16Z",
    "updated_at": "2020-06-07T11:45:16Z",
    "author_association": "MEMBER",
    "body": "I agree this behavior should not be baked into core.  Thanks for the proposal and the discussion, @darkocerdic!",
    "performed_via_github_app": null
  }
]
