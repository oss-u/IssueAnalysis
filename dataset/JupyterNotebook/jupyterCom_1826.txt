[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/252867170",
    "html_url": "https://github.com/jupyter/notebook/pull/1826#issuecomment-252867170",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1826",
    "id": 252867170,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1Mjg2NzE3MA==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-11T10:04:25Z",
    "updated_at": "2016-10-11T10:04:25Z",
    "author_association": "MEMBER",
    "body": "Related to ipython/ipython#9969\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/253239482",
    "html_url": "https://github.com/jupyter/notebook/pull/1826#issuecomment-253239482",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1826",
    "id": 253239482,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MzIzOTQ4Mg==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-12T15:02:29Z",
    "updated_at": "2016-10-12T15:23:50Z",
    "author_association": "MEMBER",
    "body": "cc @jasongrout @blink1073 for JupyterLab. Following  ipython/ipython#9969 and other async-output discussions, I'm increasingly convinced that this is the right approach: Leave it to the cell to dispose of callbacks, which should happen on the next execution, and otherwise leave callbacks for a given execution registered as long as the output area associated with it is on the page. This eliminates the issue of trying to guess whether output is done.\n",
    "performed_via_github_app": null
  }
]
