[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/226649356",
    "html_url": "https://github.com/jupyter/notebook/issues/1343#issuecomment-226649356",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1343",
    "id": 226649356,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNjY0OTM1Ng==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-17T00:13:45Z",
    "updated_at": "2016-06-17T00:13:45Z",
    "author_association": "MEMBER",
    "body": "I think we already went down that road on the ML a few years back, the answer was IIRC:\n\n> Yes it exists, it's called a programming language.\n\nIf you really want that, you should likely use function and control flow, then loop over the results /parameters you like. \n\nComment cells is simple `if condition`, out of order execution is calling simply writing then calling a function. \n\nIf you want to create mass reports, you can use things like https://github.com/takluyver/nbparameterise, and/or write frontends extensions that make this easier.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/231223326",
    "html_url": "https://github.com/jupyter/notebook/issues/1343#issuecomment-231223326",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1343",
    "id": 231223326,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTIyMzMyNg==",
    "user": {
      "login": "yrevar",
      "id": 605038,
      "node_id": "MDQ6VXNlcjYwNTAzOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/605038?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yrevar",
      "html_url": "https://github.com/yrevar",
      "followers_url": "https://api.github.com/users/yrevar/followers",
      "following_url": "https://api.github.com/users/yrevar/following{/other_user}",
      "gists_url": "https://api.github.com/users/yrevar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yrevar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yrevar/subscriptions",
      "organizations_url": "https://api.github.com/users/yrevar/orgs",
      "repos_url": "https://api.github.com/users/yrevar/repos",
      "events_url": "https://api.github.com/users/yrevar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yrevar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-07T22:11:27Z",
    "updated_at": "2016-07-07T22:13:34Z",
    "author_association": "NONE",
    "body": "Thanks for your suggestions @Carreau üëç \n\nI like your quote :) and I agree that one could use very basic functions and control flow to achieve similar results. However, there's a subtle difference in what is proposed as opposed to mere relying on programming language. Many good programmers use smart editors, don't they? This is exactly what I am looking for. Extracting patterns of cell executions can be done with some simple machine learning technique which, if integrated with a nicer user interface, would be a helpful feature for users who are working on a multi-purpose notebook or running various experiments within a single notebook.\n\nAn example of very basic interface would be something like this:\n\n```\nSet of exec. cells most frequently used\n1-2-3-5-7-10 - [click here to execute this sequence] [click here to name this sequence]\n1-2-3-5-7-11 - [click here to execute this sequence] [click here to name this sequence]\n1-2-4-5-7-10 - [click here to execute this sequence] [click here to name this sequence]\n1-2-4-5-7-11 - [click here to execute this sequence] [click here to name this sequence]\n```\n\nThe final implementation could be way more elegant than this. \n\nIf it's too much of an overhead or adds up more complexity, I'd also be inclined to use programming features instead because essentially it only adds up 2 more variables to the notebook. But, I think it'd be nice to see, more cleaner and way much easier to manage if this was learned automatically as we no longer need 2 `if conditions` in each of the cells that depend on it. \n\nI hope this clarifies the need further. Let me know what you think. \n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/231237907",
    "html_url": "https://github.com/jupyter/notebook/issues/1343#issuecomment-231237907",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1343",
    "id": 231237907,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMTIzNzkwNw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-07T23:33:23Z",
    "updated_at": "2016-07-07T23:33:29Z",
    "author_association": "MEMBER",
    "body": "yes, I see what you mean, the issues is that this does not scale to offline execution of notebook, \nand in case where you repeat the 1-2-4-5 pattern, then you (likely?) want to extract that into a step which you want to reuse between notebooks. Which is ... a python module.\n\nI think that there are much more basic step that we could teach people, like roughly 1/8 I would of our user don't know that Shift-Enter execute a cell, and click the \"play\" button everytime in the toolbar. \n\nI don't have statistics, but how many know they can: \n- use widgets\n- run a cell in place \n- use a widget to update a parameter\n- rename multiple variables ? \n\nAnd the machine learning trick could be pushed much further : `mylist[len(mylist)-3:len(mylist)]` is a typical things to improve. \n\n```\nmylist = f():\nfor x in things:\n   mylist.append(x)\n```\n\nIs also regularly seen. \nAll this can be experimented with with notebook extensions, but have low-chace of making it in the core directly. \n\nI would look at https://github.com/jupyter-incubator/contentmanagement that try to solve some of these issues. \n",
    "performed_via_github_app": null
  }
]
