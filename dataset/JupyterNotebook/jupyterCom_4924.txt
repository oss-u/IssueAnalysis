[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/536657875",
    "html_url": "https://github.com/jupyter/notebook/issues/4924#issuecomment-536657875",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4924",
    "id": 536657875,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNjY1Nzg3NQ==",
    "user": {
      "login": "kevin-bates",
      "id": 22599560,
      "node_id": "MDQ6VXNlcjIyNTk5NTYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/22599560?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevin-bates",
      "html_url": "https://github.com/kevin-bates",
      "followers_url": "https://api.github.com/users/kevin-bates/followers",
      "following_url": "https://api.github.com/users/kevin-bates/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevin-bates/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevin-bates/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevin-bates/subscriptions",
      "organizations_url": "https://api.github.com/users/kevin-bates/orgs",
      "repos_url": "https://api.github.com/users/kevin-bates/repos",
      "events_url": "https://api.github.com/users/kevin-bates/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevin-bates/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-30T17:10:26Z",
    "updated_at": "2019-09-30T17:10:26Z",
    "author_association": "MEMBER",
    "body": "This appears to be by design.  The `cwd` is based on the value of `path` - which will correspond to the directory relative to the \"root\" (i.e., `notebook-dir`).  So in your example, `path='notebooks'` and [`cwd` is equated to the fully qualified path relative to notebook-dir + '/notebooks'](https://github.com/jupyter/notebook/blob/master/notebook/services/kernels/kernelmanager.py#L166).  Then, during the [kernel's launch](https://github.com/jupyter/jupyter_client/blob/master/jupyter_client/launcher.py#L15-L37), `cwd` is used for the cwd of the subprocess (i.e., the kernel).\r\n\r\nI don't know what kinds of assumptions are made by the kernel and its location relative to the notebook (I suspect none).  You might try adding a configuration option to \"pin-to-notebook-dir\" such that the code I highlighted above takes that into consideration and uses the empty path ('') if the option is set.  Again, I don't know what kinds of ramifications would come into play if the notebook does not reside in the current working directory of the kernel process, but this seems like worth looking into.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/536968635",
    "html_url": "https://github.com/jupyter/notebook/issues/4924#issuecomment-536968635",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4924",
    "id": 536968635,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNjk2ODYzNQ==",
    "user": {
      "login": "artemlops",
      "id": 7501517,
      "node_id": "MDQ6VXNlcjc1MDE1MTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7501517?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/artemlops",
      "html_url": "https://github.com/artemlops",
      "followers_url": "https://api.github.com/users/artemlops/followers",
      "following_url": "https://api.github.com/users/artemlops/following{/other_user}",
      "gists_url": "https://api.github.com/users/artemlops/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/artemlops/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/artemlops/subscriptions",
      "organizations_url": "https://api.github.com/users/artemlops/orgs",
      "repos_url": "https://api.github.com/users/artemlops/repos",
      "events_url": "https://api.github.com/users/artemlops/events{/privacy}",
      "received_events_url": "https://api.github.com/users/artemlops/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-01T10:12:11Z",
    "updated_at": "2019-10-01T10:12:11Z",
    "author_association": "NONE",
    "body": "Thank you @kevin-bates for pointing out to the place where the parameter `path` that interests me is used. Now I am trying to understand how to add a configuration option to \"pin-to-notebook-dir\" as you proposed.\r\n\r\n1. I went deeper into the code of the projects `jupyter/jupyter_client` and `jupyter/notebook` and found out that server-side, parameter `path` [is set from](https://github.com/jupyter/notebook/blob/4a9cfa7518c911d1b89b201acd0083adc6fb680e/notebook/services/sessions/handlers.py#L46) the `json_body` of the client's request (I suppose, [this is relevant swagger documentation](https://github.com/jupyter/notebook/blob/4a9cfa7518c911d1b89b201acd0083adc6fb680e/notebook/services/api/api.yaml#L203-L205)). \r\n2. Also, I tracked the client-side [method that you pointed out](https://github.com/jupyter/jupyter_client/blob/dc213de1b5cc7b5c28485ae799fecfef77589a85/jupyter_client/launcher.py#L15-L37) up to the call tree, and I my track ends on [method `start_new_kernel`](https://github.com/jupyter/jupyter_client/blob/dc213de1b5cc7b5c28485ae799fecfef77589a85/jupyter_client/manager.py#L479), which is not called within this project and seems to be exposed.\r\n\r\nSo my question remains: \r\n1. Which client-side config allows to specify the option `path` when the client sends `POST` request to the server to launch a new kernel? \r\n2. Is it possible to set it to `None` in `POST` request? Is it safe?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/537049774",
    "html_url": "https://github.com/jupyter/notebook/issues/4924#issuecomment-537049774",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4924",
    "id": 537049774,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNzA0OTc3NA==",
    "user": {
      "login": "kevin-bates",
      "id": 22599560,
      "node_id": "MDQ6VXNlcjIyNTk5NTYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/22599560?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevin-bates",
      "html_url": "https://github.com/kevin-bates",
      "followers_url": "https://api.github.com/users/kevin-bates/followers",
      "following_url": "https://api.github.com/users/kevin-bates/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevin-bates/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevin-bates/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevin-bates/subscriptions",
      "organizations_url": "https://api.github.com/users/kevin-bates/orgs",
      "repos_url": "https://api.github.com/users/kevin-bates/repos",
      "events_url": "https://api.github.com/users/kevin-bates/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevin-bates/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-01T13:59:45Z",
    "updated_at": "2019-10-01T13:59:45Z",
    "author_association": "MEMBER",
    "body": "@ayushkovskiy - in the case for Notebook, the launch_kernel is called from [`start_kernel`](https://github.com/jupyter/jupyter_client/blob/dc213de1b5cc7b5c28485ae799fecfef77589a85/jupyter_client/manager.py#L211) but (eventually) from the MappingKernelManager (as noted in the previous comment), not `start_new_kernel()`.  The latter is a library method used for just starting kernels.  It does not come into play in the grand scheme of Notebook/Lab operations - where `--notebook-dir` is configured.\r\n\r\nThe origination of `path` comes from the POST (`patch` actually) request comes in the [`SessionHandler`](https://github.com/jupyter/notebook/blob/master/notebook/services/sessions/handlers.py#L135).  The [`start_kernel_for_session`](https://github.com/jupyter/notebook/blob/master/notebook/services/sessions/handlers.py#L135) then starts the process of calling `start_kernel()` method within the Kernel Manager class hierarchy.\r\n\r\nI think the primary thing to change for this would be to not adjust `cwd` within the `notebook-dir` hierarchy.  The `notebook-dir` option is probably not reflective of what it really is.  It's more of a `root-dir`[*] since notebooks can reside in sub-directories of that directory.  However, I believe the general idea is that `notebook-dir` acts as a _container_ or _sandbox_ for operations.\r\n\r\nSo, I was imagining that if this option were enabled, the behavior you'd want is to retain `cwd` as if the notebook where actually in `notebook-dir` (i.e., the \"root\").  As a result, you'd use a value of `path` as '' (the empty string) - since that's what is used for `path` when the notebook file resides in `notebook-dir`.\r\n\r\nI was thinking you'd have something like the following (again at the location mentioned in the previous comment)...\r\n```python\r\n            if path is not None:\r\n                if self.rooted_operation:\r\n                    kwargs['cwd'] = self.cwd_for_path('')\r\n                else:\r\n                    kwargs['cwd'] = self.cwd_for_path(path)\r\n```\r\nThis way, only the kernel launch is affected.  You don't want to side affect the content service that uses path to manage the actual notebook file.\r\n\r\n> Is it safe?\r\n\r\nI suspect so, but there may be something I'm missing.  You'd need to check things out relative to the functionality you desire, then others might chime in now or during the review.\r\n\r\nRegarding the parameter name, I prefer something like \"rooted operation\" over \"pin to notebook dir\", but that kind of thing can get hashed out during a review.\r\n\r\nI hope that helps.\r\n\r\n[*] In [jupyter_server](https://github.com/jupyter/jupyter_server) `notebook-dir` is actually renamed to `root-dir`.\r\n",
    "performed_via_github_app": null
  }
]
