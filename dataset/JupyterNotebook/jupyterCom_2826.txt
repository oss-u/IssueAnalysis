[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/326715683",
    "html_url": "https://github.com/jupyter/notebook/issues/2826#issuecomment-326715683",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2826",
    "id": 326715683,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjcxNTY4Mw==",
    "user": {
      "login": "mscuthbert",
      "id": 3521479,
      "node_id": "MDQ6VXNlcjM1MjE0Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3521479?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mscuthbert",
      "html_url": "https://github.com/mscuthbert",
      "followers_url": "https://api.github.com/users/mscuthbert/followers",
      "following_url": "https://api.github.com/users/mscuthbert/following{/other_user}",
      "gists_url": "https://api.github.com/users/mscuthbert/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mscuthbert/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mscuthbert/subscriptions",
      "organizations_url": "https://api.github.com/users/mscuthbert/orgs",
      "repos_url": "https://api.github.com/users/mscuthbert/repos",
      "events_url": "https://api.github.com/users/mscuthbert/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mscuthbert/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-02T02:12:36Z",
    "updated_at": "2017-09-02T02:12:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "It wouldn't be too hard to change `this.metadata.tags.indexOf('raises-exception') !== -1` to something like `const raises_exception_index = this.metadata.tags.indexOf('raises-exception'); if (raises_exception_index !== -1 and raises_exception_index > this.metadata.tags.indexOf(':'))` to make this special value conscious of namespaces.\r\n\r\nI think that moving to a namespace for most items would be a good thing.  We can create a core: or jupyter: namespace to which eventually `raises-exception` could be moved to.  But I don't think that we should make the namespaces absolutely private (in that they can't be accessed by other programs), since I'm already using the nbval-skip, nbval-ignore-output, etc. in other programs rather than need to duplicate tags for the same functionality multiple times.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/326720163",
    "html_url": "https://github.com/jupyter/notebook/issues/2826#issuecomment-326720163",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2826",
    "id": 326720163,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjcyMDE2Mw==",
    "user": {
      "login": "mpacer",
      "id": 2482408,
      "node_id": "MDQ6VXNlcjI0ODI0MDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2482408?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mpacer",
      "html_url": "https://github.com/mpacer",
      "followers_url": "https://api.github.com/users/mpacer/followers",
      "following_url": "https://api.github.com/users/mpacer/following{/other_user}",
      "gists_url": "https://api.github.com/users/mpacer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mpacer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mpacer/subscriptions",
      "organizations_url": "https://api.github.com/users/mpacer/orgs",
      "repos_url": "https://api.github.com/users/mpacer/repos",
      "events_url": "https://api.github.com/users/mpacer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mpacer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-02T04:00:38Z",
    "updated_at": "2017-09-02T04:00:38Z",
    "author_association": "MEMBER",
    "body": "The most recent suggestion was that the namespace for core jupyter tags would in theory be the null string with no colons. The goal is not to make other package namespaces inaccessible (that would be basically impossible), but rather to make their use as explicit as possible. \r\n\r\nI know that we could modify the code to respect the convention that was proposed, but it's dangerous to have magic values cover so much area in the space of potential strings. I'd much prefer if we're going to allow both of those in, that we restrict it to the exact two strings that need to be covered to maintain the current use-case.\r\n\r\nMore generally, though, my point was that we need to come to a consensus on this **now** before 5.1 is released. Once 5.1 is released, we have to live with that decision for backwards compatibility reasons. \r\n\r\nAs you can see it's already _really_ complicated; I fear it will only get more complicated if we aren't pretty strict about enforcing this as soon as possible. \r\n\r\nAnd regarding duplication… as long as it's a thing we need to do once and never again I think we can probably avoid this problem by switching to conventions and making some way to overwrite the code that you just wrote. The hard part is that nbval would then need to also be a notebook_extension… which those devs might not want to do. \r\n\r\nIt's worth noting that for switching conventions, it wouldn't be hard to write a preprocessor in nbconvert that would automatically convert metadata from one convention to another (something like this in preprocess.cell).\r\n\r\n```python \r\nold_conv=re.compile(r\"nbval-(.*)\")\r\nnew_conv= \"nbval:\"\r\ncell.metadata.tags = [new_conv +  old_conv.match(tag).group(0) if old_conv.match(tag) else tag for tag in cell.metadata.tags ]\r\n```\r\n\r\n…which you could apply once to all the notebooks in your project and be done with it.\r\n\r\nSimilarly you could write a custom save_hook that would apply a similar sort of transform so that you wouldn't need to actually _type_ redundant tags even if they needed to be _stored_ redundantly in order to handle separation of concerns appropriately. \r\n\r\ncc @gnestor sorry I didn't pull you in before.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/326739620",
    "html_url": "https://github.com/jupyter/notebook/issues/2826#issuecomment-326739620",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2826",
    "id": 326739620,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjczOTYyMA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-02T11:52:53Z",
    "updated_at": "2017-09-02T11:52:53Z",
    "author_association": "MEMBER",
    "body": "I think you've misunderstood what the code is doing: it's testing for membership in a list, not doing a substring match:\r\n\r\n```javascript\r\n// In this list\r\na = ['raises-exception']\r\na.indexOf('raises-exception')  // -> 0\r\n\r\n// Not in this list\r\nb = ['foo:raises-exception']\r\nb.indexOf('raises-exception') // -> -1\r\n```\r\n\r\nMore generally, can we *please* not wrap tags up in specifications and namespaces and overthinking? Yes, we should try to avoid clashes, but a simple prefix like we use for `nbval-check-output` should be sufficient. I really meant tags to be a practical system for *doing stuff*, not a theoretically beautiful abstraction for semantic labelling of cells.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/326759244",
    "html_url": "https://github.com/jupyter/notebook/issues/2826#issuecomment-326759244",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2826",
    "id": 326759244,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjc1OTI0NA==",
    "user": {
      "login": "mpacer",
      "id": 2482408,
      "node_id": "MDQ6VXNlcjI0ODI0MDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2482408?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mpacer",
      "html_url": "https://github.com/mpacer",
      "followers_url": "https://api.github.com/users/mpacer/followers",
      "following_url": "https://api.github.com/users/mpacer/following{/other_user}",
      "gists_url": "https://api.github.com/users/mpacer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mpacer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mpacer/subscriptions",
      "organizations_url": "https://api.github.com/users/mpacer/orgs",
      "repos_url": "https://api.github.com/users/mpacer/repos",
      "events_url": "https://api.github.com/users/mpacer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mpacer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-02T17:40:17Z",
    "updated_at": "2017-09-02T17:40:17Z",
    "author_association": "MEMBER",
    "body": "Sorry I was thrown off… I thought the feature was specifically implemented so that nbval-raises-exception would pass as well. I thought it was a weird way to test for that.\r\n\r\nIn that case, I support leaving things as is but also establishing what our rules and expectations around tags are, whether for user space reasons or cyclomatic complexity reasons.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/326765251",
    "html_url": "https://github.com/jupyter/notebook/issues/2826#issuecomment-326765251",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2826",
    "id": 326765251,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjc2NTI1MQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-02T19:37:39Z",
    "updated_at": "2017-09-02T19:37:39Z",
    "author_association": "MEMBER",
    "body": "To further confuse things, the initial version of the PR did support using `nbval-raises-exception`. I asked the contributor to change that, because the `nbval-` tags should only be used by nbval. However, nbval does now also recognise the non-prefixed tag, since we're effectively defining that as a common tag which can be interpreted by different tools to mean that an error is expected.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/326775274",
    "html_url": "https://github.com/jupyter/notebook/issues/2826#issuecomment-326775274",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2826",
    "id": 326775274,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjc3NTI3NA==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-02T23:43:24Z",
    "updated_at": "2017-09-02T23:43:24Z",
    "author_association": "MEMBER",
    "body": "/cc @ewmassey for papermill + tags",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/326775667",
    "html_url": "https://github.com/jupyter/notebook/issues/2826#issuecomment-326775667",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2826",
    "id": 326775667,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjc3NTY2Nw==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-02T23:56:58Z",
    "updated_at": "2017-09-02T23:56:58Z",
    "author_association": "MEMBER",
    "body": "Thank you for the summary @mpacer. As is pointed out, I'm both against frontends using tags as part of their state AND an offender as a papermill contributor / user. To bring clarity to my hypocrisy, I'll explain:\r\n\r\n* The UI/UX for setting _new_ kinds of metadata tends to be hard for users (since the built-in option is the JSON editor if new UI isn't created for it).\r\n* I _really_ wanted papermill to use top level metadata for parameters. However, the notebook wouldn't necessarily be executable then. We need to be able to have default parameters recognized by frontends that don't know our format. The easiest way to do that is with a plain code cell. We could easily switch to a boolean flag for metadata on the cell once we've started customizing a bit more.\r\n* As a frontend implementer, the metadata object can be well typed and specced. Arrays of arbitrary strings of arbitrary order can't.\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/327162890",
    "html_url": "https://github.com/jupyter/notebook/issues/2826#issuecomment-327162890",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2826",
    "id": 327162890,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzE2Mjg5MA==",
    "user": {
      "login": "blink1073",
      "id": 2096628,
      "node_id": "MDQ6VXNlcjIwOTY2Mjg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2096628?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blink1073",
      "html_url": "https://github.com/blink1073",
      "followers_url": "https://api.github.com/users/blink1073/followers",
      "following_url": "https://api.github.com/users/blink1073/following{/other_user}",
      "gists_url": "https://api.github.com/users/blink1073/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blink1073/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blink1073/subscriptions",
      "organizations_url": "https://api.github.com/users/blink1073/orgs",
      "repos_url": "https://api.github.com/users/blink1073/repos",
      "events_url": "https://api.github.com/users/blink1073/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blink1073/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-05T12:39:59Z",
    "updated_at": "2017-09-05T12:39:59Z",
    "author_association": "MEMBER",
    "body": "JupyterLab currently does not use any tag data.  We opened https://github.com/jupyterlab/jupyterlab/issues/2412 as a feature parity issue to implement the `raises-exception` behavior that was added to classic notebook.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/327232392",
    "html_url": "https://github.com/jupyter/notebook/issues/2826#issuecomment-327232392",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2826",
    "id": 327232392,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzIzMjM5Mg==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-05T16:35:36Z",
    "updated_at": "2017-09-05T16:35:36Z",
    "author_association": "MEMBER",
    "body": "`raises-exception` needs to go into nbformat, both the schema and the documentation if it is to be expected.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/327913077",
    "html_url": "https://github.com/jupyter/notebook/issues/2826#issuecomment-327913077",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2826",
    "id": 327913077,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzkxMzA3Nw==",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-07T20:05:52Z",
    "updated_at": "2017-09-07T20:05:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "My own understanding of tags is this:\n\n* For third party users only - official jupyter projects shouldn't use them\nso nbconvert shouldn't use them.\n* Third parties *should* use some sort of namespacing\n* Third parties can interpret them in any way they want\n* Frontends can only use tags in a completely generic manner (tag based\nfiltering for example) and should not have particular UI/UX behavior\nassociated with \"special tags\".\n​\nThe counterside of this is:\n\n* Anything tag like that we want to (official jupyter projects) do should\ngo into cell metadata and be added to the notebook format. This will\nprevent us from creating informal pseudo-specifications.\n\nBased on this, I agree with Kyle that `raises-exception` should be added to\nthe schema and documentation. But I would prefer it be moved to metadata.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/327916823",
    "html_url": "https://github.com/jupyter/notebook/issues/2826#issuecomment-327916823",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2826",
    "id": 327916823,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzkxNjgyMw==",
    "user": {
      "login": "dsblank",
      "id": 168568,
      "node_id": "MDQ6VXNlcjE2ODU2OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/168568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsblank",
      "html_url": "https://github.com/dsblank",
      "followers_url": "https://api.github.com/users/dsblank/followers",
      "following_url": "https://api.github.com/users/dsblank/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsblank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsblank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsblank/subscriptions",
      "organizations_url": "https://api.github.com/users/dsblank/orgs",
      "repos_url": "https://api.github.com/users/dsblank/repos",
      "events_url": "https://api.github.com/users/dsblank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsblank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-07T20:21:23Z",
    "updated_at": "2017-09-07T20:21:23Z",
    "author_association": "MEMBER",
    "body": "Is this correct:\r\n\r\n1. tags are easy to add/change/delete for the user\r\n2. tags that do things (other than filtering) are only used by 3rd party software\r\n3. standard jupyter functionality (like hiding a cell, tagging for special CSS) has to be done through another means (metadata)\r\n\r\nWouldn't it be easier to have tags that DO have special functionality in the core software? Or am I confused?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/327920251",
    "html_url": "https://github.com/jupyter/notebook/issues/2826#issuecomment-327920251",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2826",
    "id": 327920251,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzkyMDI1MQ==",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-07T20:35:12Z",
    "updated_at": "2017-09-07T20:35:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "My understanding is that that 1,2,3 are correct.\n\nThere are a couple of challenges with using tags for special functionality\nin the core software:\n\n* Tags alone are not sufficient as they can only encode very simple\ninformation. If we embrace the usage of tags for official functionality, we\nwill have to answer the \"tag or metadata?\" question for each and every bit\nof official data. From an organizational and communication perspective, it\nis much easier to make the decision a single time.\n* Any special functionality of core jupyter software needs to be in the\nnotebook format and official documentation. It is simpler conceptually to\nnot have a portion of our spec that get's into particular tags. Also, we\ndon't want to communicate to others that they can ask us to support\nadditional official tags.\n* It is easier to deal with metadata than tags from a code perspective.\n\nOn Thu, Sep 7, 2017 at 1:21 PM, Doug Blank <notifications@github.com> wrote:\n\n> Is this correct:\n>\n>    1. tags are easy to add/change/delete for the user\n>    2. tags that do things (other than filtering) are only used by 3rd\n>    party software\n>    3. standard jupyter functionality (like hiding a cell, tagging for\n>    special CSS) has to be done through another means (metadata)\n>\n> Wouldn't it be easier to have tags that DO have special functionality in\n> the core software? Or am I confused?\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/jupyter/notebook/issues/2826#issuecomment-327916823>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABr0NQo0Bl8j2bJYzKdW5OA5bO3_Dz7ks5sgFBIgaJpZM4PKuHt>\n> .\n>\n\n\n\n-- \nBrian E. Granger\nAssociate Professor of Physics and Data Science\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/327921883",
    "html_url": "https://github.com/jupyter/notebook/issues/2826#issuecomment-327921883",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2826",
    "id": 327921883,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzkyMTg4Mw==",
    "user": {
      "login": "dsblank",
      "id": 168568,
      "node_id": "MDQ6VXNlcjE2ODU2OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/168568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsblank",
      "html_url": "https://github.com/dsblank",
      "followers_url": "https://api.github.com/users/dsblank/followers",
      "following_url": "https://api.github.com/users/dsblank/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsblank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsblank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsblank/subscriptions",
      "organizations_url": "https://api.github.com/users/dsblank/orgs",
      "repos_url": "https://api.github.com/users/dsblank/repos",
      "events_url": "https://api.github.com/users/dsblank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsblank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-07T20:41:54Z",
    "updated_at": "2017-09-07T20:41:54Z",
    "author_association": "MEMBER",
    "body": "Here is another issue:\r\n\r\n* what language would the tag be in? how would internationalization be handled?\r\n\r\nBut I hope that there is a UI/UX developed that is as easy as tags for doing official functionality. Perhaps that is what is missing from the discussion.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/327933962",
    "html_url": "https://github.com/jupyter/notebook/issues/2826#issuecomment-327933962",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2826",
    "id": 327933962,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzkzMzk2Mg==",
    "user": {
      "login": "mpacer",
      "id": 2482408,
      "node_id": "MDQ6VXNlcjI0ODI0MDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2482408?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mpacer",
      "html_url": "https://github.com/mpacer",
      "followers_url": "https://api.github.com/users/mpacer/followers",
      "following_url": "https://api.github.com/users/mpacer/following{/other_user}",
      "gists_url": "https://api.github.com/users/mpacer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mpacer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mpacer/subscriptions",
      "organizations_url": "https://api.github.com/users/mpacer/orgs",
      "repos_url": "https://api.github.com/users/mpacer/repos",
      "events_url": "https://api.github.com/users/mpacer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mpacer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-07T21:36:36Z",
    "updated_at": "2017-09-07T21:39:16Z",
    "author_association": "MEMBER",
    "body": "@dsblank My understanding is that we need modifications to **2.** & **3.** above:\r\n\r\nfrom: 2. tags that do things (other than filtering) are only used by 3rd party software\r\n\r\nto: 2. specific tag values are only used by 3rd party software (caveat `raises-expectation`)\r\n\r\nfrom: 3. standard jupyter functionality (like hiding a cell, tagging for special CSS) has to be done through another means (metadata)\r\n\r\nto: 3. standard jupyter functionality (like hiding a cell, tagging for special CSS) can be done through generic metadata or via a generic tag-based interface that requires explicit user-specification \r\n\r\nThe key to both nuances is that we can create ways for users to access specific functionality (hiding a cell, tagging for special CSS) but where to do so requires that the users both specify what tags they want to use and then apply those particular tags to their cells. We don't have a general way of surfacing that kind of functionality (today) in the notebook front end, but that's a matter of implementation. For example, it should be possible (once I rework #2413) to access tag-based element filtering from the \"Download As…\" menu item by uploading traitlets values via a json config file that specifies which tags indicate which kind of filtering. \r\n\r\nI imagine other front-end features could similarly use loading configuration to enable these kinds of generic tag interfaces. However, that seems like **way** too much overhead to be the _only_ mechanism for exposing this functionality. My thoughts as to how to do this more simply are still evolving.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/328171223",
    "html_url": "https://github.com/jupyter/notebook/issues/2826#issuecomment-328171223",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2826",
    "id": 328171223,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODE3MTIyMw==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-08T17:51:45Z",
    "updated_at": "2017-09-08T17:51:45Z",
    "author_association": "MEMBER",
    "body": "I've been trying to think of a forms-focused editor for metadata, at least for certain acknowledged ones:\r\n\r\n![screen shot 2017-09-08 at 10 50 26 am](https://user-images.githubusercontent.com/836375/30224423-a6f62118-9483-11e7-899c-c4fcbaee1914.png)\r\n\r\nEither as something that _pops out_ of a cell or appears to be on the \"backside\" of a cell.\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/328172424",
    "html_url": "https://github.com/jupyter/notebook/issues/2826#issuecomment-328172424",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2826",
    "id": 328172424,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODE3MjQyNA==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-08T17:56:44Z",
    "updated_at": "2017-09-08T17:56:44Z",
    "author_association": "MEMBER",
    "body": "Here's an interpretation for notebook wide metadata, largely targeting the authors, descriptions, and tag fields:\r\n\r\n![image](https://user-images.githubusercontent.com/836375/30224638-60b2c138-9484-11e7-82e7-065afd33a674.png)\r\n\r\nThis comes from https://github.com/nteract/nteract/issues/1503",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/328182886",
    "html_url": "https://github.com/jupyter/notebook/issues/2826#issuecomment-328182886",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2826",
    "id": 328182886,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODE4Mjg4Ng==",
    "user": {
      "login": "mscuthbert",
      "id": 3521479,
      "node_id": "MDQ6VXNlcjM1MjE0Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3521479?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mscuthbert",
      "html_url": "https://github.com/mscuthbert",
      "followers_url": "https://api.github.com/users/mscuthbert/followers",
      "following_url": "https://api.github.com/users/mscuthbert/following{/other_user}",
      "gists_url": "https://api.github.com/users/mscuthbert/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mscuthbert/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mscuthbert/subscriptions",
      "organizations_url": "https://api.github.com/users/mscuthbert/orgs",
      "repos_url": "https://api.github.com/users/mscuthbert/repos",
      "events_url": "https://api.github.com/users/mscuthbert/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mscuthbert/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-08T18:40:33Z",
    "updated_at": "2017-09-08T18:40:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think that a separate editor for metadata and tags could work, especially if it were easy to assign the metadata/formatting/tags data for a certain cell as a keyboard shortcut so that it can be applied to another cell with a few keystrokes.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/328997173",
    "html_url": "https://github.com/jupyter/notebook/issues/2826#issuecomment-328997173",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2826",
    "id": 328997173,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyODk5NzE3Mw==",
    "user": {
      "login": "gnestor",
      "id": 512354,
      "node_id": "MDQ6VXNlcjUxMjM1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/512354?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnestor",
      "html_url": "https://github.com/gnestor",
      "followers_url": "https://api.github.com/users/gnestor/followers",
      "following_url": "https://api.github.com/users/gnestor/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnestor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnestor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnestor/subscriptions",
      "organizations_url": "https://api.github.com/users/gnestor/orgs",
      "repos_url": "https://api.github.com/users/gnestor/repos",
      "events_url": "https://api.github.com/users/gnestor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnestor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-12T22:01:53Z",
    "updated_at": "2017-09-12T22:01:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just to clarify: Is this blocking us from releasing 5.1 or have we decided that the current implementation of `raises-exception` in notebook  is acceptable?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/329106067",
    "html_url": "https://github.com/jupyter/notebook/issues/2826#issuecomment-329106067",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2826",
    "id": 329106067,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTEwNjA2Nw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-13T09:06:54Z",
    "updated_at": "2017-09-13T09:06:54Z",
    "author_association": "MEMBER",
    "body": "To me it's totally acceptable and exactly the kind of thing tags are there for. I don't see any advantage of saying that only third-party projects can define tags. I'm already frustrated by how long it's taken to get 5.1 out the door, so I really hope we don't want to block it on this issue.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/329194856",
    "html_url": "https://github.com/jupyter/notebook/issues/2826#issuecomment-329194856",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2826",
    "id": 329194856,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTE5NDg1Ng==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-13T14:57:18Z",
    "updated_at": "2017-09-13T14:57:18Z",
    "author_association": "MEMBER",
    "body": "It's not in saying that only third-party projects and users can create tags. People are saying if you want defined expected Jupyter behavior, it better be well specified and likely put in the metadata.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/329195190",
    "html_url": "https://github.com/jupyter/notebook/issues/2826#issuecomment-329195190",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2826",
    "id": 329195190,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTE5NTE5MA==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-13T14:58:24Z",
    "updated_at": "2017-09-13T14:58:37Z",
    "author_association": "MEMBER",
    "body": "As for the release being blocked, just ship with `raises-exception` and support it as a quirk forever.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/329196737",
    "html_url": "https://github.com/jupyter/notebook/issues/2826#issuecomment-329196737",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2826",
    "id": 329196737,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTE5NjczNw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-13T15:03:11Z",
    "updated_at": "2017-09-13T15:03:11Z",
    "author_association": "MEMBER",
    "body": "Tags are in metadata, and I don't see anything wrong with specifying some particular ones, like `raises-exception` to have more meanings more general than one specific tool. It's a pragmatic solution to let users easily set certain kinds of metadata without needing to build a special UI for each attribute.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/329474115",
    "html_url": "https://github.com/jupyter/notebook/issues/2826#issuecomment-329474115",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2826",
    "id": 329474115,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTQ3NDExNQ==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-14T13:00:06Z",
    "updated_at": "2017-09-14T13:00:06Z",
    "author_association": "MEMBER",
    "body": "I agree with @rgbkrk that we should ship 5.1 with `raises-exception` tag and continue this discussion post-5.1. Defining the interpretation of a single tag is not committing to the general pattern of using tags for behavior.\r\n\r\nIn general, I agree with @takluyver that tags were created with the specific purpose of providing a single UI for defining labelling *and behavior* without having to create new, dedicated UI for every flag, which is required for any other metadata structure we come up with. Of course, most metadata won't fit in tags, and some will have logical UI other than tags, but things like `raises-exception` are precisely the use case tags were created to solve.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/329517392",
    "html_url": "https://github.com/jupyter/notebook/issues/2826#issuecomment-329517392",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2826",
    "id": 329517392,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTUxNzM5Mg==",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-14T15:24:07Z",
    "updated_at": "2017-09-14T15:24:21Z",
    "author_association": "MEMBER",
    "body": "The distinction between \"expected Jupyter behavior\" (leading to a format spec change) and \"supported by a few tools\" (could be implemented by a tag convention) can be confusing when one official reference frontend is by far most popular and implements a specific convention. I think we want to avoid \"the implementation is the standard\" - but of course it can be difficult to set that expectation about what is implementation and what is the standard.\r\n\r\n@takluyver - it sounds like you don't expect *all* frontends to implement the `raises-exception` behavior the notebook is implementing, correct?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/329532322",
    "html_url": "https://github.com/jupyter/notebook/issues/2826#issuecomment-329532322",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2826",
    "id": 329532322,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTUzMjMyMg==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-14T16:13:01Z",
    "updated_at": "2017-09-14T16:13:01Z",
    "author_association": "MEMBER",
    "body": "I don't consider it an imperative, but where frontends have similar 'execute all' functionality, I wouldn't be surprised if users ask for similar behaviour around the tag. We are defining the tag as a marker that the tagged cell is expected to raise an error, but it's up to tools how and whether to use that.\r\n\r\n>  I think we want to avoid \"the implementation is the standard\"\r\n\r\nIn principle, yes. But let's not stifle ourselves by trying to write the standards before we allow ourselves to use anything. Let's make tags useful first, and then try to formalise them.\r\n\r\nFunction annotations in Python are an example of what I mean. The syntax has been supported since Python 3.0, but core developers said \"we won't define any uses, we'll let third parties come up with them\". So they went basically unused until those core devs came back and defined them as type hints.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/329540524",
    "html_url": "https://github.com/jupyter/notebook/issues/2826#issuecomment-329540524",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2826",
    "id": 329540524,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTU0MDUyNA==",
    "user": {
      "login": "mpacer",
      "id": 2482408,
      "node_id": "MDQ6VXNlcjI0ODI0MDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2482408?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mpacer",
      "html_url": "https://github.com/mpacer",
      "followers_url": "https://api.github.com/users/mpacer/followers",
      "following_url": "https://api.github.com/users/mpacer/following{/other_user}",
      "gists_url": "https://api.github.com/users/mpacer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mpacer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mpacer/subscriptions",
      "organizations_url": "https://api.github.com/users/mpacer/orgs",
      "repos_url": "https://api.github.com/users/mpacer/repos",
      "events_url": "https://api.github.com/users/mpacer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mpacer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-14T16:41:57Z",
    "updated_at": "2017-09-14T16:41:57Z",
    "author_association": "MEMBER",
    "body": "It sounds like everyone on the different sides of the issue agree on this release going out either way, so I'm going to close this and I think we can start on a new issue in nbformat.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/329864446",
    "html_url": "https://github.com/jupyter/notebook/issues/2826#issuecomment-329864446",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2826",
    "id": 329864446,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyOTg2NDQ0Ng==",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-15T18:30:30Z",
    "updated_at": "2017-09-15T18:30:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks!\n\nOn Thu, Sep 14, 2017 at 9:42 AM, M Pacer <notifications@github.com> wrote:\n\n> It sounds like everyone on the different sides of the issue agree on this\n> release going out either way, so I'm going to close this and I think we can\n> start on a new issue in nbformat.\n>\n> —\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/jupyter/notebook/issues/2826#issuecomment-329540524>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABr0B06qty5TtmhinUMoj8owLZCeZRXks5siVdfgaJpZM4PKuHt>\n> .\n>\n\n\n\n-- \nBrian E. Granger\nAssociate Professor of Physics and Data Science\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n",
    "performed_via_github_app": null
  }
]
