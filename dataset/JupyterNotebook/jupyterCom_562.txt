[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/146664744",
    "html_url": "https://github.com/jupyter/notebook/issues/562#issuecomment-146664744",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/562",
    "id": 146664744,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjY2NDc0NA==",
    "user": {
      "login": "jdfreder",
      "id": 3292874,
      "node_id": "MDQ6VXNlcjMyOTI4NzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3292874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jdfreder",
      "html_url": "https://github.com/jdfreder",
      "followers_url": "https://api.github.com/users/jdfreder/followers",
      "following_url": "https://api.github.com/users/jdfreder/following{/other_user}",
      "gists_url": "https://api.github.com/users/jdfreder/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jdfreder/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jdfreder/subscriptions",
      "organizations_url": "https://api.github.com/users/jdfreder/orgs",
      "repos_url": "https://api.github.com/users/jdfreder/repos",
      "events_url": "https://api.github.com/users/jdfreder/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jdfreder/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-08T19:35:16Z",
    "updated_at": "2015-10-08T19:35:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "Regarding the sublime style keybindings, put the following in your `custom.js` :\n\n``` js\nrequire([\"codemirror/keymap/sublime\", \"notebook/js/cell\"], function(sublime_keymap, cell) {\n    cell.Cell.options_default.cm_config.keyMap = 'sublime';\n});\n```\n\nAs far as additional shortcuts are concerned, the one you mentioned is specific to the component we use for code editting, CodeMirror.  There may be a way to programmatically enumerate all shortcuts currently available in CodeMirror, but there may not.  It's worth investigating.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/699656253",
    "html_url": "https://github.com/jupyter/notebook/issues/562#issuecomment-699656253",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/562",
    "id": 699656253,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5OTY1NjI1Mw==",
    "user": {
      "login": "IamPhytan",
      "id": 20505580,
      "node_id": "MDQ6VXNlcjIwNTA1NTgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/20505580?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/IamPhytan",
      "html_url": "https://github.com/IamPhytan",
      "followers_url": "https://api.github.com/users/IamPhytan/followers",
      "following_url": "https://api.github.com/users/IamPhytan/following{/other_user}",
      "gists_url": "https://api.github.com/users/IamPhytan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/IamPhytan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/IamPhytan/subscriptions",
      "organizations_url": "https://api.github.com/users/IamPhytan/orgs",
      "repos_url": "https://api.github.com/users/IamPhytan/repos",
      "events_url": "https://api.github.com/users/IamPhytan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/IamPhytan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-27T16:25:31Z",
    "updated_at": "2020-09-27T16:25:31Z",
    "author_association": "NONE",
    "body": "Found this list of commands for CodeMirror : https://codemirror.net/doc/manual.html\r\n\r\nOn how to use those commands, I had to reverse engineer the code in the comments of issue #1816 :\r\n```js\r\nCodeMirror.keyMap.pcDefault[\"Ctrl-Down\"] = function(cm){\r\n\r\n    // get a position of a current cursor in a current cell\r\n    var current_cursor = cm.doc.getCursor();\r\n\r\n    // read a content from a line where is the current cursor\r\n    var line_content = cm.doc.getLine(current_cursor.line);\r\n\r\n    // go to the end the current line\r\n    CodeMirror.commands.goLineEnd(cm);\r\n\r\n    // make a break for a new line\r\n    CodeMirror.commands.newlineAndIndent(cm);\r\n\r\n    // filled a content of the new line content from line above it\r\n    cm.doc.replaceSelection(line_content);\r\n\r\n    // restore position cursor on the new line\r\n    cm.doc.setCursor(current_cursor.line + 1, current_cursor.ch);\r\n};\r\n```",
    "performed_via_github_app": null
  }
]
