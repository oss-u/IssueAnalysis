[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/286234510",
    "html_url": "https://github.com/jupyter/notebook/pull/2278#issuecomment-286234510",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2278",
    "id": 286234510,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjIzNDUxMA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-13T20:33:09Z",
    "updated_at": "2017-03-13T20:33:09Z",
    "author_association": "MEMBER",
    "body": "Thanks a lot for your contribution, \r\n\r\nEven if we try to adhere to pep-8, we don't enforce it, but more especially the pep says:\r\n\r\n> However, know when to be inconsistent -- sometimes style guide recommendations just aren't applicable. When in doubt, use your best judgment. Look at other examples and decide what looks best. And don't hesitate to ask!\r\n\r\nSo we will likely never *enforce* it. \r\n\r\nRegardless of enforcing, a gigantic pull request that just fixes all pep-8 will  be more problematic than helpful in my experience. It will break the ability to work with tools like git-bisect and git-blame, and can make things complex to backport. That's from experience, as I did this mistakes a couple of years in the past, and still regularly hate myself for having done so. So we usually do not accept wide range code base cleanup. \r\n\r\nOne helpful things though would be instead of enforcing pep8 on the all codebase enforce it on the `diff`. Tools like pep8-radius can do that IIRC. This allow the code to progressively become compliant, and still give the maintainers the ability to overwrite the tool decision without having test to permanently fail. \r\n\r\nI strongly recommend [Beyond pep8](https://www.youtube.com/watch?v=wf-BqAjZb8M) if you have 1h to spare (or even in the background).\r\n\r\nI've recently setup yapf (instead of autopep8) in my editor to only apply to lines I have changed (it's broken right now I should fix this). And one of my wishlist is a bot you could mention on a PR to autopep8 only _part_ of a file (things that have changed only, and only if requested).\r\n\r\nIn the end I think that having at least pep8 as a linter and  progressively go toward no-errors will be helpful to catch potential mistakes (like `local variable 'app' is assigned to but never used`), but I still think a large change like this one is too disruptive. \r\n\r\nThat's just my though, and I'll let other dev pitchin in.  and I have to say no to things like that as I know it can be quite the effort to work through. \r\n\r\nDoes that make some sense to you or do you disagree ? \r\n\r\n\r\n\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/286236680",
    "html_url": "https://github.com/jupyter/notebook/pull/2278#issuecomment-286236680",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2278",
    "id": 286236680,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjIzNjY4MA==",
    "user": {
      "login": "ccordoba12",
      "id": 365293,
      "node_id": "MDQ6VXNlcjM2NTI5Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/365293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ccordoba12",
      "html_url": "https://github.com/ccordoba12",
      "followers_url": "https://api.github.com/users/ccordoba12/followers",
      "following_url": "https://api.github.com/users/ccordoba12/following{/other_user}",
      "gists_url": "https://api.github.com/users/ccordoba12/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ccordoba12/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ccordoba12/subscriptions",
      "organizations_url": "https://api.github.com/users/ccordoba12/orgs",
      "repos_url": "https://api.github.com/users/ccordoba12/repos",
      "events_url": "https://api.github.com/users/ccordoba12/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ccordoba12/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-13T20:41:01Z",
    "updated_at": "2017-03-13T20:41:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Carreau, you could also take a look at [ciocheck](https://github.com/ContinuumIO/ciocheck). We used it for some time in Spyder and found quite useful.\r\n\r\nUnfortunately, @goanpeca has to make it work with multiple branches (right now it only works in a single branch).",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/286237776",
    "html_url": "https://github.com/jupyter/notebook/pull/2278#issuecomment-286237776",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2278",
    "id": 286237776,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjIzNzc3Ng==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-13T20:45:01Z",
    "updated_at": "2017-03-13T20:45:01Z",
    "author_association": "MEMBER",
    "body": "> @Carreau, you could also take a look at ciocheck. We used it for some time in Spyder and found quite useful.\r\n\r\nThanks for the link, I'll have a look, . I would still hate to have to impose to user to run that. \r\nWith `allow edit from maintainer`  I'm thinking a github webhook (and  bot) could actually autopush these kind of fixes so you never have to ask users to enable them. \r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/286239552",
    "html_url": "https://github.com/jupyter/notebook/pull/2278#issuecomment-286239552",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2278",
    "id": 286239552,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjIzOTU1Mg==",
    "user": {
      "login": "joined",
      "id": 7922312,
      "node_id": "MDQ6VXNlcjc5MjIzMTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7922312?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joined",
      "html_url": "https://github.com/joined",
      "followers_url": "https://api.github.com/users/joined/followers",
      "following_url": "https://api.github.com/users/joined/following{/other_user}",
      "gists_url": "https://api.github.com/users/joined/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joined/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joined/subscriptions",
      "organizations_url": "https://api.github.com/users/joined/orgs",
      "repos_url": "https://api.github.com/users/joined/repos",
      "events_url": "https://api.github.com/users/joined/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joined/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-13T20:51:15Z",
    "updated_at": "2017-03-13T20:51:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "Hey @Carreau, thanks for your detailed and insightful comment.\r\n\r\nAs you seem to be willing to help new contributors and kind enough to explain the reasons behind your disapproval, I will add some context to this (and other) pull request(s).\r\n\r\nI'm working with a team of other students (@John-Pap, @adimitrova, @ajayaadhikari) on this project for the [Software Architecture](https://twitter.com/DelftSWA) course at TU Delft. We had to choose a project to analyse and we chose this one.\r\n\r\nAs part of the course we are now analysing the technical debt aspect. This involves also using linting tools to check that the code style is consistent.\r\n\r\nI totally understand your concerns and can easily imagine this pull request causing some headaches, even just by checking that all the changes made are not harmful.\r\n\r\nIt was mainly an educational exercise. I understand your reasons behind the decision of not merging it :)",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/286256972",
    "html_url": "https://github.com/jupyter/notebook/pull/2278#issuecomment-286256972",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2278",
    "id": 286256972,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjI1Njk3Mg==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-13T21:58:45Z",
    "updated_at": "2017-03-13T21:58:45Z",
    "author_association": "MEMBER",
    "body": "> As you seem to be willing to help new contributors and kind enough to explain the reasons behind your disapproval, I will add some context to this (and other) pull request(s).\r\n\r\nThanks alway welcome to guide you through the codebase if you have questions. \r\n\r\n> \r\n> I'm working with a team of other students (@John-Pap, @adimitrova, @ajayaadhikari) on this project for the Software Architecture course at TU Delft. We had to choose a project to analyse and we chose this one.\r\n\r\nGreat, I would be happy to read any of the report, and comment if that may be of help. \r\nI went through the diff as an exercise and commented on the point where I would have paid more attentions to make sure the linters were right. \r\n\r\nI believe most of the issues flagged are actual issues (when not whitespace or formatting). Though I believe in some case the linters are decreasing readability, but that's subjective. \r\n\r\nIf it's a course about software architecture then I'll double down on \"Beyond Pep 8\" as a really good talk and how language design affects what can be considered as good architecture. \r\n\r\n> \r\n> As part of the course we are now analysing the technical debt aspect. This involves also using linting tools to check that the code style is consistent.\r\n\r\nNo problem, the notebook might have also a large amount of javascript code. I would suggest looking at `setup.cfg`: \r\n\r\n```\r\n$ cat setup.cfg\r\n[bdist_wheel]\r\nuniversal=1\r\n\r\n[nosetests]\r\nwarningfilters=module   |.*            |DeprecationWarning |notebook.*\r\n               default  |.* | Warning | notebook.*\r\n               ignore   |.*metadata.*  |DeprecationWarning |notebook.*\r\n               ignore   |.*schema.*    |UserWarning        |nbfor.*\r\n               ignore   |The 'warn' method is deprecated, use 'warning' instead     | DeprecationWarning |notebook.*\r\n               error    |encodestring\\(\\) is a deprecated alias, use encodebytes\\(\\)| DeprecationWarning | notebook.*\r\n               error    |decodestring\\(\\) is a .*| DeprecationWarning | notebook.*\r\n```\r\n\r\nYou'll see that 3 of these lines deactivate a couple of warnings in subprojects we maintain.\r\nThey are deactivated on purpose (as we support older versions), but at some points we will have to turn them into warnings and errors to make sure we do not use them. \r\n\r\n> \r\n> I totally understand your concerns and can easily imagine this pull request causing some headaches, even just by checking that all the changes made are not harmful.\r\n\r\nAs said above I made a quick review. Except for the `== False`/`is False` which would need proper digging, if it was not screwing up git-blame, git-bisect and backporting, I think this would not be controversial and good a good change[*]. \r\n\r\n> It was mainly an educational exercise. I understand your reasons behind the decision of not merging it :)\r\n\r\nFeel free to ask more questions, we'll be happy to help. \r\nThere are some construct that are pretty esoteric, (in particular traitlets). If you need clarification, I'll be happy to help. \r\n\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/286263735",
    "html_url": "https://github.com/jupyter/notebook/pull/2278#issuecomment-286263735",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2278",
    "id": 286263735,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjI2MzczNQ==",
    "user": {
      "login": "ccordoba12",
      "id": 365293,
      "node_id": "MDQ6VXNlcjM2NTI5Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/365293?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ccordoba12",
      "html_url": "https://github.com/ccordoba12",
      "followers_url": "https://api.github.com/users/ccordoba12/followers",
      "following_url": "https://api.github.com/users/ccordoba12/following{/other_user}",
      "gists_url": "https://api.github.com/users/ccordoba12/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ccordoba12/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ccordoba12/subscriptions",
      "organizations_url": "https://api.github.com/users/ccordoba12/orgs",
      "repos_url": "https://api.github.com/users/ccordoba12/repos",
      "events_url": "https://api.github.com/users/ccordoba12/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ccordoba12/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-13T22:28:48Z",
    "updated_at": "2017-03-13T22:28:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I would still hate to have to impose to user to run that.\r\n\r\nYou can make it run as another CI script (as we did), so users wouldn't have to worry about it. Of course, they'll have to fix errors reported by `ciocheck` as part of their PRs.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/286482451",
    "html_url": "https://github.com/jupyter/notebook/pull/2278#issuecomment-286482451",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2278",
    "id": 286482451,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjQ4MjQ1MQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-14T16:42:12Z",
    "updated_at": "2017-03-14T16:42:12Z",
    "author_association": "MEMBER",
    "body": "I'm going to close this as I don't think we're going to accept this kind of change, as discussed above. Feel free to keep using the comments to discuss linting and style guidelines, though.",
    "performed_via_github_app": null
  }
]
