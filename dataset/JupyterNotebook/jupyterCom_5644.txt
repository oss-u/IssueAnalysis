[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/667545224",
    "html_url": "https://github.com/jupyter/notebook/issues/5644#issuecomment-667545224",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5644",
    "id": 667545224,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NzU0NTIyNA==",
    "user": {
      "login": "kevin-bates",
      "id": 22599560,
      "node_id": "MDQ6VXNlcjIyNTk5NTYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/22599560?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevin-bates",
      "html_url": "https://github.com/kevin-bates",
      "followers_url": "https://api.github.com/users/kevin-bates/followers",
      "following_url": "https://api.github.com/users/kevin-bates/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevin-bates/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevin-bates/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevin-bates/subscriptions",
      "organizations_url": "https://api.github.com/users/kevin-bates/orgs",
      "repos_url": "https://api.github.com/users/kevin-bates/repos",
      "events_url": "https://api.github.com/users/kevin-bates/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevin-bates/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-01T15:05:32Z",
    "updated_at": "2020-08-01T15:05:32Z",
    "author_association": "MEMBER",
    "body": "Well, that didn't take long! :smile:\r\n\r\n@fcollonval - thank you for opening this issue.\r\n\r\nCould you please elaborate on how the import of `requests_unixsocket` makes `notebook.test` incompatible with Windows? \r\n\r\n`requests_unixsockets` is used to emulate unix socket behavior in the tests and, yes, those particular tests are skipped on Windows.   However, the `pip install .[test]` statement in the [Windows tests in appveyor](https://ci.appveyor.com/project/jupyter/notebook/builds/34415737/job/xqm9ebjwl4cr6v04) is successfully installing (and importing) `requests_unixsocket`.\r\n```\r\nSuccessfully installed Send2Trash-1.5.0 argon2-cffi-20.1.0 atomicwrites-1.4.0 coverage-5.2.1 iniconfig-1.0.1 more-itertools-8.4.0 nbval-0.9.6 nose-exclude-0.5.0 nose-warnings-filters-0.1.5 notebook-7.0.0.dev0 pluggy-0.13.1 prometheus-client-0.8.0 py-1.9.0 pytest-6.0.1 pytest-cov-2.10.0 pywinpty-0.5.7 requests-unixsocket-0.2.0 selenium-3.141.0 terminado-0.8.3 toml-0.10.1\r\n```\r\n\r\nIt is true that this particular package was added to test dependencies in 6.1 so I can understand an existing environment encountering an import error if the test dependencies were not updated.  \r\n\r\nI agree that this could (and probably should) be tightened up a bit, making it a platform-specific dependency and import statement, but I'm trying to understand how this is an incompatibility issue and want to be sure it isn't truly blocking you.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/667548525",
    "html_url": "https://github.com/jupyter/notebook/issues/5644#issuecomment-667548525",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5644",
    "id": 667548525,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NzU0ODUyNQ==",
    "user": {
      "login": "fcollonval",
      "id": 8435071,
      "node_id": "MDQ6VXNlcjg0MzUwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8435071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fcollonval",
      "html_url": "https://github.com/fcollonval",
      "followers_url": "https://api.github.com/users/fcollonval/followers",
      "following_url": "https://api.github.com/users/fcollonval/following{/other_user}",
      "gists_url": "https://api.github.com/users/fcollonval/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fcollonval/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fcollonval/subscriptions",
      "organizations_url": "https://api.github.com/users/fcollonval/orgs",
      "repos_url": "https://api.github.com/users/fcollonval/repos",
      "events_url": "https://api.github.com/users/fcollonval/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fcollonval/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-01T15:29:14Z",
    "updated_at": "2020-08-01T15:29:14Z",
    "author_association": "NONE",
    "body": "@kevin-bates Thanks for the quick reply. Indeed I should have be more precise on the context. The `notebook.tests.launchnotebook` module is quite useful to test extension handlers; I was in particular working on [jupyter_conda](https://github.com/fcollonval/jupyter_conda). And got the error after updating my environment.\r\n\r\nBut you are right, the package is pure Python (despite addressing pure Unix feature). So the _problem_ is more about the additional dependency for testing of extension packages. So I see two solutions:\r\n\r\n- Use a better issue title and highlight the need to add `requests_unixsockets` in all test environments of packages using `notebook.tests.launchnotebook` (so people hitting that trouble got a quick answer from this issue). And somehow advertise about this change within the community.\r\n- Move the import locally to the only place it is used - this reduce the burden for extension authors. But implies a patch release from your side.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/667552217",
    "html_url": "https://github.com/jupyter/notebook/issues/5644#issuecomment-667552217",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5644",
    "id": 667552217,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NzU1MjIxNw==",
    "user": {
      "login": "kevin-bates",
      "id": 22599560,
      "node_id": "MDQ6VXNlcjIyNTk5NTYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/22599560?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevin-bates",
      "html_url": "https://github.com/kevin-bates",
      "followers_url": "https://api.github.com/users/kevin-bates/followers",
      "following_url": "https://api.github.com/users/kevin-bates/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevin-bates/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevin-bates/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevin-bates/subscriptions",
      "organizations_url": "https://api.github.com/users/kevin-bates/orgs",
      "repos_url": "https://api.github.com/users/kevin-bates/repos",
      "events_url": "https://api.github.com/users/kevin-bates/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevin-bates/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-01T15:58:42Z",
    "updated_at": "2020-08-01T15:58:42Z",
    "author_association": "MEMBER",
    "body": "Thanks for the clarification @fcollonval.  I think the right thing to do is better-isolate the dependency and produce a patch.\r\n\r\nThat said, I do feel that those dependent on notebook's test framework should be aware that dependencies can change (at any time) and the onus is on them to ensure those requirements are satisfied by using `pip install --upgrade notebook[test]` as a prerequisite.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/667553245",
    "html_url": "https://github.com/jupyter/notebook/issues/5644#issuecomment-667553245",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5644",
    "id": 667553245,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NzU1MzI0NQ==",
    "user": {
      "login": "fcollonval",
      "id": 8435071,
      "node_id": "MDQ6VXNlcjg0MzUwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8435071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fcollonval",
      "html_url": "https://github.com/fcollonval",
      "followers_url": "https://api.github.com/users/fcollonval/followers",
      "following_url": "https://api.github.com/users/fcollonval/following{/other_user}",
      "gists_url": "https://api.github.com/users/fcollonval/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fcollonval/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fcollonval/subscriptions",
      "organizations_url": "https://api.github.com/users/fcollonval/orgs",
      "repos_url": "https://api.github.com/users/fcollonval/repos",
      "events_url": "https://api.github.com/users/fcollonval/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fcollonval/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-01T16:07:16Z",
    "updated_at": "2020-08-01T16:07:16Z",
    "author_association": "NONE",
    "body": "> \r\n> I think the right thing to do is better-isolate the dependency and produce a patch.\r\n\r\nThank you for easing my life ðŸ˜‰ \r\n\r\n> That said, I do feel that those dependent on notebook's test framework should be aware that dependencies can change (at any time) and the onus is on them to ensure those requirements are satisfied by using `pip install --upgrade notebook[test]` as a prerequisite.\r\n\r\nYou are right - but that is of course more complicated when relying on conda...\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/667559616",
    "html_url": "https://github.com/jupyter/notebook/issues/5644#issuecomment-667559616",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5644",
    "id": 667559616,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NzU1OTYxNg==",
    "user": {
      "login": "bollwyvl",
      "id": 45380,
      "node_id": "MDQ6VXNlcjQ1Mzgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/45380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bollwyvl",
      "html_url": "https://github.com/bollwyvl",
      "followers_url": "https://api.github.com/users/bollwyvl/followers",
      "following_url": "https://api.github.com/users/bollwyvl/following{/other_user}",
      "gists_url": "https://api.github.com/users/bollwyvl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bollwyvl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bollwyvl/subscriptions",
      "organizations_url": "https://api.github.com/users/bollwyvl/orgs",
      "repos_url": "https://api.github.com/users/bollwyvl/repos",
      "events_url": "https://api.github.com/users/bollwyvl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bollwyvl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-01T16:59:06Z",
    "updated_at": "2020-08-01T16:59:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "Before and after doing pip stuff, I've started always running \"pip check\":\nit's the best we've got, in lieu of a day solver. Unfortunately wouldn't\nhelp in this case.\n\nWhile pip extras work fine for one time solves, like setting up CI, they\nare not actually that reliable for interactively composing larger\nenvironments, long-term, as extras \"constraints\" can sometimes be lost in\nsuccessive solves, nor will \"pip check\" tell you if anything is wrong.\n\nIf using conda-forge, an additional \"output\" metapackage (e.g.\nnotebook-with-testing) could be created by @conda-forge/notebook-feedstock.\nThe tests are (hopefully) already executed there on all the platforms\nshipped, which these days can be more then what the upstream CI regimes\ntest, so the maintainers would already be accutely aware of testing\ndependency changes.\n\nIf being able to rely on notebook testing deps is important for\ndownstreams, and this has happened before, it could be published as a\nstandalone package on pypi, and similarly for conda, so that \"pip check\"\ncan be used confidently, and should be used at test time by notebook\nitself. Sounds like a fair amount of work, though.\n\n>\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/667560733",
    "html_url": "https://github.com/jupyter/notebook/issues/5644#issuecomment-667560733",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5644",
    "id": 667560733,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NzU2MDczMw==",
    "user": {
      "login": "fcollonval",
      "id": 8435071,
      "node_id": "MDQ6VXNlcjg0MzUwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8435071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fcollonval",
      "html_url": "https://github.com/fcollonval",
      "followers_url": "https://api.github.com/users/fcollonval/followers",
      "following_url": "https://api.github.com/users/fcollonval/following{/other_user}",
      "gists_url": "https://api.github.com/users/fcollonval/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fcollonval/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fcollonval/subscriptions",
      "organizations_url": "https://api.github.com/users/fcollonval/orgs",
      "repos_url": "https://api.github.com/users/fcollonval/repos",
      "events_url": "https://api.github.com/users/fcollonval/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fcollonval/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-01T17:08:08Z",
    "updated_at": "2020-08-01T17:08:08Z",
    "author_association": "NONE",
    "body": "Thanks for your input @bollwyvl \r\n\r\nOn the conda front, unfortunately the testing is light (testing `import notebook` and cli help).\r\n\r\nIt may be interesting to move to a multiple outputs package. But is it worth it knowing `jupyter_server` is the future?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/667566418",
    "html_url": "https://github.com/jupyter/notebook/issues/5644#issuecomment-667566418",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5644",
    "id": 667566418,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2NzU2NjQxOA==",
    "user": {
      "login": "bollwyvl",
      "id": 45380,
      "node_id": "MDQ6VXNlcjQ1Mzgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/45380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bollwyvl",
      "html_url": "https://github.com/bollwyvl",
      "followers_url": "https://api.github.com/users/bollwyvl/followers",
      "following_url": "https://api.github.com/users/bollwyvl/following{/other_user}",
      "gists_url": "https://api.github.com/users/bollwyvl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bollwyvl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bollwyvl/subscriptions",
      "organizations_url": "https://api.github.com/users/bollwyvl/orgs",
      "repos_url": "https://api.github.com/users/bollwyvl/repos",
      "events_url": "https://api.github.com/users/bollwyvl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bollwyvl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-01T17:56:04Z",
    "updated_at": "2020-08-01T17:56:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "As I said, doing these changes here would be a lot of work, and may not be worth it. And sure, jupyter_server is coming. However, use of (and therefore testing with) `notebook` will continue for some time, even within first-party Jupyter offerings, for at least a year, if not longer. It will remain in use by downstreams well beyond that. For example, even if no new `notebook` releases were forthcoming, python 3.9 is coming, and we'll need a new version packaged for all 6 platforms: something _will_ break, somewhere (read: windows). The 3.8 rollout was _disasterous_, and took almost six months from the release of 3.8.0 to fully resolve.\r\n\r\nWith the addition of even more supported platforms that many upstreams aren't even thinking about, the only feasible way to do this is by being as aggressive as possible with automated testing: pip check, PRing dependency feedstocks when things break, using coverage thresholds, etc. I usually draw the line at browser tests, though. Worst case: every couple weeks, I have to fix something, or add a test skip for something that isn't marked appropriately or has expectations like being in a git checkout. Best case: we find upstream issues, coming in with a full reproduction case, if not a PR, which is about the only way I've found to garner good will as a downstream packager.\r\n\r\nOn conda-forge: the official line, of course, is \"conda-forge is not your CI\". My personal stance, for the good of the brand, is to never knowingly push out versions that cause breakage on user systems, as this results in unhappy users, and issues created on already-maintainer-strapped projects who may not even like conda to begin with.  I'd far rather _just not ship_ a version, get a patch upstream, and wait for the next release.\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/668131659",
    "html_url": "https://github.com/jupyter/notebook/issues/5644#issuecomment-668131659",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5644",
    "id": 668131659,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2ODEzMTY1OQ==",
    "user": {
      "login": "kevin-bates",
      "id": 22599560,
      "node_id": "MDQ6VXNlcjIyNTk5NTYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/22599560?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevin-bates",
      "html_url": "https://github.com/kevin-bates",
      "followers_url": "https://api.github.com/users/kevin-bates/followers",
      "following_url": "https://api.github.com/users/kevin-bates/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevin-bates/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevin-bates/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevin-bates/subscriptions",
      "organizations_url": "https://api.github.com/users/kevin-bates/orgs",
      "repos_url": "https://api.github.com/users/kevin-bates/repos",
      "events_url": "https://api.github.com/users/kevin-bates/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevin-bates/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-03T16:58:36Z",
    "updated_at": "2020-08-03T16:58:36Z",
    "author_association": "MEMBER",
    "body": "Thanks @bollwyvl - I agree that this repo will require a lengthy maintenance and yes, we need to prevent disruptions for downstream applications - even if only related to testing.  We should try to note any dependency changes and understand their downstream impacts.  (I probably should have made that connection for 6.1, but this is a rookie at helm.)\r\n\r\nGiven the diminishing maintainer focus on this repo, I think it is best to take the easiest route for this particular issue and avoid installing `requests_unixsockets` on Windows.  This does not preclude making a concerted effort to shore up the packaging at another time though.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/668206021",
    "html_url": "https://github.com/jupyter/notebook/issues/5644#issuecomment-668206021",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5644",
    "id": 668206021,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2ODIwNjAyMQ==",
    "user": {
      "login": "bollwyvl",
      "id": 45380,
      "node_id": "MDQ6VXNlcjQ1Mzgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/45380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bollwyvl",
      "html_url": "https://github.com/bollwyvl",
      "followers_url": "https://api.github.com/users/bollwyvl/followers",
      "following_url": "https://api.github.com/users/bollwyvl/following{/other_user}",
      "gists_url": "https://api.github.com/users/bollwyvl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bollwyvl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bollwyvl/subscriptions",
      "organizations_url": "https://api.github.com/users/bollwyvl/orgs",
      "repos_url": "https://api.github.com/users/bollwyvl/repos",
      "events_url": "https://api.github.com/users/bollwyvl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bollwyvl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-03T19:40:19Z",
    "updated_at": "2020-08-03T19:40:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks all!\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/669016572",
    "html_url": "https://github.com/jupyter/notebook/issues/5644#issuecomment-669016572",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5644",
    "id": 669016572,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2OTAxNjU3Mg==",
    "user": {
      "login": "fcollonval",
      "id": 8435071,
      "node_id": "MDQ6VXNlcjg0MzUwNzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8435071?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fcollonval",
      "html_url": "https://github.com/fcollonval",
      "followers_url": "https://api.github.com/users/fcollonval/followers",
      "following_url": "https://api.github.com/users/fcollonval/following{/other_user}",
      "gists_url": "https://api.github.com/users/fcollonval/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fcollonval/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fcollonval/subscriptions",
      "organizations_url": "https://api.github.com/users/fcollonval/orgs",
      "repos_url": "https://api.github.com/users/fcollonval/repos",
      "events_url": "https://api.github.com/users/fcollonval/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fcollonval/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-05T06:54:56Z",
    "updated_at": "2020-08-05T06:54:56Z",
    "author_association": "NONE",
    "body": "Indeed thank you all.",
    "performed_via_github_app": null
  }
]
