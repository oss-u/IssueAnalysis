[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/630027799",
    "html_url": "https://github.com/jupyter/notebook/issues/5444#issuecomment-630027799",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5444",
    "id": 630027799,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDAyNzc5OQ==",
    "user": {
      "login": "adamreeve",
      "id": 626438,
      "node_id": "MDQ6VXNlcjYyNjQzOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/626438?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamreeve",
      "html_url": "https://github.com/adamreeve",
      "followers_url": "https://api.github.com/users/adamreeve/followers",
      "following_url": "https://api.github.com/users/adamreeve/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamreeve/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamreeve/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamreeve/subscriptions",
      "organizations_url": "https://api.github.com/users/adamreeve/orgs",
      "repos_url": "https://api.github.com/users/adamreeve/repos",
      "events_url": "https://api.github.com/users/adamreeve/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamreeve/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-18T08:27:36Z",
    "updated_at": "2020-05-18T08:27:36Z",
    "author_association": "NONE",
    "body": "I can reproduce this problem in Google Chrome 81.0.4044.138 on Windows 10 with Python 3.8.2, Jupyter notebook server 6.0.3 and IPython 7.14.0. However, I can’t reproduce the issue with Firefox 76.0.1 or Edge 18363.\r\n\r\nDigging into this further, it looks like the copy event handler registered in clipboard.js is never called when the copy event is from within a disabled input element or inside a shadow root when using Firefox. With Chrome, the event handler is called but the selection returned by `window.getSelection` has `isCollapsed` set to true, even though the selection type is \"Range\" and there is text selected. This means that the `copy` function in clipboard.js doesn’t return early when it should:\r\n\r\nhttps://github.com/jupyter/notebook/blob/e9ce1b7461713ffccb3ca6df5ccfed3ce59b3b4b/notebook/static/notebook/js/clipboard.js#L44-L50\r\n\r\nThe selection object viewed in Chrome dev-tools looks like:\r\n\r\n```\r\n{\r\n    anchorNode: div.p-Widget\r\n    anchorOffset: 0\r\n    baseNode: div.p-Widget\r\n    baseOffset: 0\r\n    extentNode: div.p-Widget\r\n    extentOffset: 0\r\n    focusNode: div.p-Widget\r\n    focusOffset: 0\r\n    isCollapsed: true\r\n    rangeCount: 1\r\n    type: \"Range\"\r\n}\r\n```\r\n\r\nIt looks to me like for the copy function to work correctly in Chrome, it would make more sense to check for `window.getSelection().type == 'Range'` rather than `!window.getSelection().isCollapsed`.\r\n\r\nTo work around this, I can add an event handler on the widget to prevent the Jupyter event handler from running:\r\n\r\n```js\r\nfunction copyFromWidget(event) {\r\n    // Don't allow Jupyter to handle the copy event,\r\n    // but allow the default handler to run.\r\n    event.stopPropagation();\r\n}\r\n\r\ndefine('email_widget', [\"@jupyter-widgets/base\"], function(widgets) {\r\n\r\n    var EmailView = widgets.DOMWidgetView.extend({\r\n\r\n        // Render the view.\r\n        render: function() {\r\n            this.email_input = document.createElement('input');\r\n            this.email_input.type = 'email';\r\n            this.email_input.value = 'example@example.com';\r\n            this.email_input.disabled = true;\r\n            \r\n            this.el.appendChild(this.email_input);\r\n            \r\n            this.el.addEventListener('copy', copyFromWidget);\r\n        },\r\n    });\r\n    \r\n    return {\r\n        EmailView: EmailView\r\n    };\r\n});\r\n```\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/630467335",
    "html_url": "https://github.com/jupyter/notebook/issues/5444#issuecomment-630467335",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5444",
    "id": 630467335,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDQ2NzMzNQ==",
    "user": {
      "login": "adamreeve",
      "id": 626438,
      "node_id": "MDQ6VXNlcjYyNjQzOA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/626438?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/adamreeve",
      "html_url": "https://github.com/adamreeve",
      "followers_url": "https://api.github.com/users/adamreeve/followers",
      "following_url": "https://api.github.com/users/adamreeve/following{/other_user}",
      "gists_url": "https://api.github.com/users/adamreeve/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/adamreeve/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/adamreeve/subscriptions",
      "organizations_url": "https://api.github.com/users/adamreeve/orgs",
      "repos_url": "https://api.github.com/users/adamreeve/repos",
      "events_url": "https://api.github.com/users/adamreeve/events{/privacy}",
      "received_events_url": "https://api.github.com/users/adamreeve/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-18T22:24:15Z",
    "updated_at": "2020-05-18T22:24:15Z",
    "author_association": "NONE",
    "body": "Some further details after digging into this some more:\r\n\r\nFirefox not bubbling the copy event out of the shadow DOM is a bug (https://bugzilla.mozilla.org/show_bug.cgi?id=1620420). The copy event not bubbling out of an input element also looks like a bug in Firefox although there isn't an existing bug report for this that I can find.\r\n\r\nMy suggested fix of checking the selection type would work for Chrome, but in Firefox window.getSelection doesn't work with input elements. MDN says:\r\n\r\n> It is worth noting that currently getSelection() doesn't work on the content of <textarea> and <input> elements in Firefox, Edge (Legacy) and Internet Explorer. HTMLInputElement.setSelectionRange() or the selectionStart and selectionEnd properties could be used to work around this.\r\n\r\nWhen I test this I get either a selection with type = 'None' or previously selected text rather than a selection from within the input element. Checking for selection type = 'Range' would be fine for now but would break in Firefox when they fix the copy event not bubbling.\r\n\r\nWhen selecting within a shadow DOM, Firefox does expose the details of the selection from window.getSelection but this appears to be incorrect and Chrome is behaving correctly by not exposing the shadow DOM details. There's work going on in https://github.com/w3c/webcomponents/issues/79 to decide how selection APIs should work across shadow DOMs.",
    "performed_via_github_app": null
  }
]
