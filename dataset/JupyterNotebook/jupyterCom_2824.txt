[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/326611673",
    "html_url": "https://github.com/jupyter/notebook/issues/2824#issuecomment-326611673",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2824",
    "id": 326611673,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjYxMTY3Mw==",
    "user": {
      "login": "blink1073",
      "id": 2096628,
      "node_id": "MDQ6VXNlcjIwOTY2Mjg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2096628?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blink1073",
      "html_url": "https://github.com/blink1073",
      "followers_url": "https://api.github.com/users/blink1073/followers",
      "following_url": "https://api.github.com/users/blink1073/following{/other_user}",
      "gists_url": "https://api.github.com/users/blink1073/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blink1073/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blink1073/subscriptions",
      "organizations_url": "https://api.github.com/users/blink1073/orgs",
      "repos_url": "https://api.github.com/users/blink1073/repos",
      "events_url": "https://api.github.com/users/blink1073/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blink1073/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-01T15:32:11Z",
    "updated_at": "2017-09-01T15:32:11Z",
    "author_association": "MEMBER",
    "body": "Thanks for picking this up, @maartenbreddels!   👍 from me on this approach.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/326716442",
    "html_url": "https://github.com/jupyter/notebook/issues/2824#issuecomment-326716442",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2824",
    "id": 326716442,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjcxNjQ0Mg==",
    "user": {
      "login": "hainm",
      "id": 4451957,
      "node_id": "MDQ6VXNlcjQ0NTE5NTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4451957?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hainm",
      "html_url": "https://github.com/hainm",
      "followers_url": "https://api.github.com/users/hainm/followers",
      "following_url": "https://api.github.com/users/hainm/following{/other_user}",
      "gists_url": "https://api.github.com/users/hainm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hainm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hainm/subscriptions",
      "organizations_url": "https://api.github.com/users/hainm/orgs",
      "repos_url": "https://api.github.com/users/hainm/repos",
      "events_url": "https://api.github.com/users/hainm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hainm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-02T02:27:54Z",
    "updated_at": "2017-09-02T02:27:54Z",
    "author_association": "NONE",
    "body": ">  (I guess everybody agrees).\r\n\r\nI agree.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/326742125",
    "html_url": "https://github.com/jupyter/notebook/issues/2824#issuecomment-326742125",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2824",
    "id": 326742125,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjc0MjEyNQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-02T12:47:11Z",
    "updated_at": "2017-09-02T12:47:28Z",
    "author_association": "MEMBER",
    "body": "I agree that's the way that involves minimal changes, but I think we should think about it more carefully and make a larger change to produce a more coherent system.\r\n\r\nSpecifically, I don't think it should be based on installing files in the config system. The more files affect the config, the greater the risk of confusion from the file you're looking at being overridden elsewhere.\r\n\r\nWhat I'd like to see instead is a system where nbextensions install into the nbextensions directory a separate json file with some metadata, including how to load the module. E.g.\r\n\r\n```json\r\n{\r\n    \"name\": \"cite2c\",\r\n    \"description\": \"Insert citations from Zotero\",\r\n    \"url\": \"https://github.com/takluyver/cite2c\",\r\n    \"load\": \"cite2c/main\"\r\n}\r\n```\r\n\r\nAny extensions with these files would be loaded by default, and the user could use config to *disable* them. This has a couple of other benefits:\r\n\r\n- It becomes easy to find out what extensions are installed on a system - and therefore to build an interface to conveniently switch them on and off.\r\n- It reduces the likelihood of error messages from extensions which are removed but still configured as enabled.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/326743962",
    "html_url": "https://github.com/jupyter/notebook/issues/2824#issuecomment-326743962",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2824",
    "id": 326743962,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjc0Mzk2Mg==",
    "user": {
      "login": "juhasch",
      "id": 2445216,
      "node_id": "MDQ6VXNlcjI0NDUyMTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2445216?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/juhasch",
      "html_url": "https://github.com/juhasch",
      "followers_url": "https://api.github.com/users/juhasch/followers",
      "following_url": "https://api.github.com/users/juhasch/following{/other_user}",
      "gists_url": "https://api.github.com/users/juhasch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/juhasch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/juhasch/subscriptions",
      "organizations_url": "https://api.github.com/users/juhasch/orgs",
      "repos_url": "https://api.github.com/users/juhasch/repos",
      "events_url": "https://api.github.com/users/juhasch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/juhasch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-02T13:26:25Z",
    "updated_at": "2017-09-02T13:26:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "For the contrib_nbextensions we had `.yaml` files describing each extension for some time, and I think  it has proven to be quite practical. Example:\r\n```\r\nType: Jupyter Notebook Extension\r\nCompatibility: 4.x, 5.x\r\nName: Collapsible Headings\r\nMain: main.js\r\nDescription: \"Allows notebook to have collapsible sections, separated by headings\"\r\nLink: readme.md\r\nIcon: icon.png\r\nParameters:\r\n...\r\n```\r\nYaml is really so much more human-friendly for non-programmers. \r\n\r\nAlso, notebook version compatibility is a constant pain, and should be considered. Many people try to use a years-old nbextension, and with the fast changing API, this nearly never works.\r\n\r\nAnd being able to have an comprehensive overview of available nbextensions that shows a description instead of only a cryptic name is somehow nice, too.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/326764206",
    "html_url": "https://github.com/jupyter/notebook/issues/2824#issuecomment-326764206",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2824",
    "id": 326764206,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjc2NDIwNg==",
    "user": {
      "login": "maartenbreddels",
      "id": 1765949,
      "node_id": "MDQ6VXNlcjE3NjU5NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1765949?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maartenbreddels",
      "html_url": "https://github.com/maartenbreddels",
      "followers_url": "https://api.github.com/users/maartenbreddels/followers",
      "following_url": "https://api.github.com/users/maartenbreddels/following{/other_user}",
      "gists_url": "https://api.github.com/users/maartenbreddels/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maartenbreddels/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maartenbreddels/subscriptions",
      "organizations_url": "https://api.github.com/users/maartenbreddels/orgs",
      "repos_url": "https://api.github.com/users/maartenbreddels/repos",
      "events_url": "https://api.github.com/users/maartenbreddels/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maartenbreddels/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-02T19:16:27Z",
    "updated_at": "2017-09-02T19:16:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "@takluyver 👍  on doing this 'the right' way, I think what I propose is simply a band aid (although it will stop a lot of bleeding), but doesn't solve all of the issues. \r\nAlso @SylvainCorlay pointed [this](https://github.com/jupyter/notebook/issues/1508#issuecomment-224956351) out to me, and is also in favour of doing a more rigorous approach.\r\n\r\n@juhasch :+1: on using yaml, and we could have some semver checking, without trying to do a whole package manager, just a warning would that something might break will already be useful.\r\n\r\nWhat I'm afraid of is that it will take at least a year for a big improvement to go out so that people don't feel the pain of enabling widgets or other extensions and all, while this band aid could will give a quick relief.\r\n ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/326765596",
    "html_url": "https://github.com/jupyter/notebook/issues/2824#issuecomment-326765596",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2824",
    "id": 326765596,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjc2NTU5Ng==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-02T19:44:51Z",
    "updated_at": "2017-09-02T19:44:51Z",
    "author_association": "MEMBER",
    "body": "I personally dislike yaml - it has too many special cases and different possible forms. The main Python implementation I'm aware of also involves C extensions, which makes installation more complicated (pyyaml currently has no wheels for Linux or Mac). JSON is less nice to write, but it's widely understood, simple, and there's a parser for it shipped with Python. I suggested it for these because I don't think those files should need to be human edited that often.\r\n\r\nIf the consensus is YAML I'll live with it, but for me the drawbacks of YAML outweigh the advantages for this case.\r\n\r\nIn any case, I think we can do something along these lines for 5.2, especially since @juhasch already has an implementation of basically this. :-)",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/326765600",
    "html_url": "https://github.com/jupyter/notebook/issues/2824#issuecomment-326765600",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2824",
    "id": 326765600,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNjc2NTYwMA==",
    "user": {
      "login": "maartenbreddels",
      "id": 1765949,
      "node_id": "MDQ6VXNlcjE3NjU5NDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1765949?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maartenbreddels",
      "html_url": "https://github.com/maartenbreddels",
      "followers_url": "https://api.github.com/users/maartenbreddels/followers",
      "following_url": "https://api.github.com/users/maartenbreddels/following{/other_user}",
      "gists_url": "https://api.github.com/users/maartenbreddels/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maartenbreddels/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maartenbreddels/subscriptions",
      "organizations_url": "https://api.github.com/users/maartenbreddels/orgs",
      "repos_url": "https://api.github.com/users/maartenbreddels/repos",
      "events_url": "https://api.github.com/users/maartenbreddels/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maartenbreddels/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-02T19:44:52Z",
    "updated_at": "2017-09-02T19:44:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "Let me add that now that widgets are becoming more and more popular I don't want us to lose momentum because of installation issues (I hear those a lot). And most of the issues can be fixed with this (I guess enabling is 80% of the issues) without a major change or giving us headaches when moving on.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/333127649",
    "html_url": "https://github.com/jupyter/notebook/issues/2824#issuecomment-333127649",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2824",
    "id": 333127649,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzEyNzY0OQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-29T13:34:27Z",
    "updated_at": "2017-09-29T13:34:27Z",
    "author_association": "MEMBER",
    "body": "@jcb91 I just installed the nbextensions configurator - I think I looked at it some time back, but haven't been using it. It's really slick now! Thanks for your work on it. I think we should bring it into the notebook proper so that everyone sees it. Are you up for that? And do you have a feel for how much work it would take?\r\n\r\nI also noticed that the `jupyter_contrib_nbextensions` are installed together as a collection of a load of extensions. I think it makes sense to switch to an approach where installed extensions are loaded unless the user has disabled them - but if we do that, we need to point people to installing extensions individually, not as a giant collection. @jcb91 @juhasch @jfbercher (the three Js of Jupyter extensions ;-) does that sound practical?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/333275243",
    "html_url": "https://github.com/jupyter/notebook/issues/2824#issuecomment-333275243",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2824",
    "id": 333275243,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzI3NTI0Mw==",
    "user": {
      "login": "jcb91",
      "id": 5630710,
      "node_id": "MDQ6VXNlcjU2MzA3MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5630710?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jcb91",
      "html_url": "https://github.com/jcb91",
      "followers_url": "https://api.github.com/users/jcb91/followers",
      "following_url": "https://api.github.com/users/jcb91/following{/other_user}",
      "gists_url": "https://api.github.com/users/jcb91/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jcb91/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jcb91/subscriptions",
      "organizations_url": "https://api.github.com/users/jcb91/orgs",
      "repos_url": "https://api.github.com/users/jcb91/repos",
      "events_url": "https://api.github.com/users/jcb91/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jcb91/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-30T02:14:51Z",
    "updated_at": "2017-09-30T02:14:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Are you up for that? And do you have a feel for how much work it would take?\r\n\r\nAbsolutely :) gut feeling would be not a huge amount, since most of the functionality described is already present, with the already-noted exception that we used yaml instead of json. But, I don't see it being a huge amount of effort to add support for json (which I also prefer over yaml in this case, since most end users view the yaml contents through the UI of the configurator anyway), and we could either keep yaml support in parallel, or replace it as desired. The main thing to do first would be to agree on the config file discovery mechanism(s) (currently we attempt to load *all* yaml/yml in nbextensions_path, but it would probably be good to restrict file naming if we go for json) and structure (keys, values, and their uses). Another possibility for json would be to use a subkey of an npm package.json, I suppose.\r\n\r\n>  I think it makes sense to switch to an approach where installed extensions are loaded unless the user has disabled them - but if we do that, we need to point people to installing extensions individually, not as a giant collection.\r\n\r\nI guess we *could* switch to a bunch of separate repos for each extension, but it'd be quite a lot of repos :fearful: The attraction of the big collection as I see it is that it's a quick way to get a collection of things to try out, which is easy to browse through with the configurator, and it only requires one set of installation machinery (though admittedly this is still a two-step install on non-conda systems). However, I doubt anyone would want *all* of the extensions in the contrib collection enabled by default :laughing: :rocket: :boom: ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/333318831",
    "html_url": "https://github.com/jupyter/notebook/issues/2824#issuecomment-333318831",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2824",
    "id": 333318831,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzMxODgzMQ==",
    "user": {
      "login": "jcb91",
      "id": 5630710,
      "node_id": "MDQ6VXNlcjU2MzA3MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5630710?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jcb91",
      "html_url": "https://github.com/jcb91",
      "followers_url": "https://api.github.com/users/jcb91/followers",
      "following_url": "https://api.github.com/users/jcb91/following{/other_user}",
      "gists_url": "https://api.github.com/users/jcb91/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jcb91/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jcb91/subscriptions",
      "organizations_url": "https://api.github.com/users/jcb91/orgs",
      "repos_url": "https://api.github.com/users/jcb91/repos",
      "events_url": "https://api.github.com/users/jcb91/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jcb91/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-30T16:15:49Z",
    "updated_at": "2017-09-30T16:15:49Z",
    "author_association": "CONTRIBUTOR",
    "body": "Also, I've just thought, the other thing that might take a bit of time would be tests; currently the configurator uses a few selenium-based tests for full-stack testing, but I'm not totally _au fait_ with the notebook's own casperjs test framework, so I'm not sure how easy it might be to adapt them / construct alternatives.\r\n\r\nAnd finally, since the contrib repo currently rolls its own install command, it would also be possible to disable anything in the collection not explicitly enabled as part of that custom install, if/when enable-by-default becomes the standard.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/333818460",
    "html_url": "https://github.com/jupyter/notebook/issues/2824#issuecomment-333818460",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2824",
    "id": 333818460,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzgxODQ2MA==",
    "user": {
      "login": "juhasch",
      "id": 2445216,
      "node_id": "MDQ6VXNlcjI0NDUyMTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2445216?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/juhasch",
      "html_url": "https://github.com/juhasch",
      "followers_url": "https://api.github.com/users/juhasch/followers",
      "following_url": "https://api.github.com/users/juhasch/following{/other_user}",
      "gists_url": "https://api.github.com/users/juhasch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/juhasch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/juhasch/subscriptions",
      "organizations_url": "https://api.github.com/users/juhasch/orgs",
      "repos_url": "https://api.github.com/users/juhasch/repos",
      "events_url": "https://api.github.com/users/juhasch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/juhasch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-03T11:50:18Z",
    "updated_at": "2017-10-03T11:50:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "As @jcb91 already pointed out, the idea of the current contrib nbextensions repo is that you have a collection that is easy to install and you can simply try out different extensions. This is especially true for extensions that need nbconvert support like preprocessors, exporters or templates.\r\n\r\nOn the other hand the number of extensions is slowly getting too large for the all-in bundling approach.\r\n\r\nRegarding YAML vs. JSON: IMO JSON is good when computers talk to each other, YAML is good when a human \"talks\" to a computer. I don't think a human should have to count brackets when writing configuration files.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/333873201",
    "html_url": "https://github.com/jupyter/notebook/issues/2824#issuecomment-333873201",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2824",
    "id": 333873201,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzg3MzIwMQ==",
    "user": {
      "login": "bollwyvl",
      "id": 45380,
      "node_id": "MDQ6VXNlcjQ1Mzgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/45380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bollwyvl",
      "html_url": "https://github.com/bollwyvl",
      "followers_url": "https://api.github.com/users/bollwyvl/followers",
      "following_url": "https://api.github.com/users/bollwyvl/following{/other_user}",
      "gists_url": "https://api.github.com/users/bollwyvl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bollwyvl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bollwyvl/subscriptions",
      "organizations_url": "https://api.github.com/users/bollwyvl/orgs",
      "repos_url": "https://api.github.com/users/bollwyvl/repos",
      "events_url": "https://api.github.com/users/bollwyvl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bollwyvl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-03T15:09:27Z",
    "updated_at": "2017-10-03T15:09:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "👍 extensions be enable-able by default.\r\n\r\n+0 to YAML. I love writing YAML (you'd better, if you use conda), and see it as the best editor UI for a JSON-based model... like the \"edit metadata\" dialog in the notebook would be more usable if it spoke (collapsible, linted, schema'd) YAML. But I do like the portability/inspectability of JSON on disk, despite its diffability handicap. Given that pyzmq, one of the few c upstreams, _still_ creates problems occasionally, i am not clamoring to add it as a hard dependency... even though it's in `conda`!\r\n\r\nAs [mentioned](https://github.com/jupyter/notebook/issues/2894#issuecomment-333834180) over on #2894, another hat in the ring would be an `entry_point`-based way to put things into the config. For a \"pure\" javascript nbextension, this python-based approach might not be as useful... but packaging `extension.yaml` and `index.js` is no problem on conda (assuming a recipe someplace) and presumably you can have a data-files-only wheel (assuming a setup.py)? That doesn't seem like much maintainer overhead to let users use the tools they trust for their compute tasks :) `npm` still scares me.\r\n\r\nAnyhow, however the baseline config gets on disk, I am very 👍 on there being a user-serviceable,  recoverable, discoverable, beautiful way to manipulate the state of the javascript application for both notebook and lab.\r\n\r\n**user-serviceable and recoverable**\r\n\r\nI love the CLI, but think something powerful and visual like atom or `configurator` seems really nice. \r\n\r\nAt it's simplest: Run configurator, whether it's in the notebook, (or next to the notebook), and you configure the state of the javascript application, reload the page, and you're good. Better, keep the versions around so you can go back to them in case of fail (so don't make the configurator an nbextension, i guess?).\r\n\r\n**discoverable**\r\n\r\nThe package managers don't make this particularly easy (i.e. can't search for `entry_points` or [namespaces](https://packaging.python.org/guides/packaging-namespace-packages/), magic names are weak, etc.), so the \"big box of extensions\" packages like `contrib` or other/future ones (e.g. genomics, CAD) are valuable for their curation purposes, as if they leverage common licensing, documentation, code review, testing, etc. they are a maintenance win vs many small repos, even if they don't specifically share a common focus.\r\n\r\nFor the case of, \"we'll ship this, but you might not want it\", it seems like shipping the assets, but with an in-env baseline would let you have both.\r\n```yaml\r\nload_nbextensions:\r\n    thing-everyone-wants: TRUE\r\n    other-thing-everyone-wants: y\r\n    thing-some-people-want: no\r\n    thing-b: off\r\n```\r\n> The above is a playful illustration of how YAML's \"human-editability\" can get a little [out of hand](http://yaml.org/type/bool.html). \r\n\r\nAnyhow, back to packaging `contrib`: One could probably apply automation akin to `lerna` to the build of these with wheel/conda, and get a metapackage and _n_ separately-versioned packages, all specified by the version of the \"contrib\" metapackage... but if the dependencies of all of them are reasonable, that might be a bunch of work for no real gain... unless its for piecemeal upstreaming into a domain-specific pack, as suggested above. Specifically on things that are possible with nbconvert, you can quickly rack up some expensive ones! \r\n\r\n**beautiful**\r\n\r\nPerhaps, looking at the metadata discussion above, the right on-disk metadata and documentation format is... the notebook! I think if an extension packed a well-named notebook, with some metadata (visually edited and previewed by the configurator), we'd be able leverage all of the existing machinery and let people make some really nice stuff.\r\n\r\nSo in `extension.ipynb` (or whatever), use some (visually-defined) tags, `jupyter-extension:name`, `jupyter-extension:screenshots`, etc. Parse the metadata and serve them up as some sandboxed HTML.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/334124949",
    "html_url": "https://github.com/jupyter/notebook/issues/2824#issuecomment-334124949",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2824",
    "id": 334124949,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDEyNDk0OQ==",
    "user": {
      "login": "jcb91",
      "id": 5630710,
      "node_id": "MDQ6VXNlcjU2MzA3MTA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5630710?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jcb91",
      "html_url": "https://github.com/jcb91",
      "followers_url": "https://api.github.com/users/jcb91/followers",
      "following_url": "https://api.github.com/users/jcb91/following{/other_user}",
      "gists_url": "https://api.github.com/users/jcb91/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jcb91/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jcb91/subscriptions",
      "organizations_url": "https://api.github.com/users/jcb91/orgs",
      "repos_url": "https://api.github.com/users/jcb91/repos",
      "events_url": "https://api.github.com/users/jcb91/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jcb91/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-04T11:20:50Z",
    "updated_at": "2017-10-15T19:08:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "For packaging the contrib repo, I think it can still persist through this change to enable-by-default, as long as we update its install script to retain the existing not-enabling behaviour. In order to make the big-bundle paradigm redundant, though, I think we'd need a centralized catalogue to make nbextension packages discoverable over the net. The obvious choice for me would be to search _both_ npm and pypi for specific tags, but then again, perhaps some filtering would be a good idea? Maybe an 'official' github repo that just lists extension URIs? Anyway, this cataloguing is, I think, a separate enough issue that the enable-by-default can proceed without addressing it yet.\r\n\r\n> Perhaps, looking at the metadata discussion above, the right on-disk metadata and documentation format is... the notebook! I think if an extension packed a well-named notebook, with some metadata (visually edited and previewed by the configurator), we'd be able leverage all of the existing machinery and let people make some really nice stuff.\r\n\r\nHmm. Interesting idea, you mean the configurator would take over some of the notebook rendering in order to make the metadata attributes editable? This would certainly allow you to mix together arbitrary code for altering/setting metadata with markdown readme-type text, and even examples of the new extension in action. Feels like a fairly extensive bit of work to get it going though, so I'll leave it for now :grimacing: but if it seems like it'd be valuable, I'd be happy to have a stab at it in future.\r\n\r\n> Better, keep the versions around so you can go back to them in case of fail (so don't make the configurator an nbextension, i guess?).\r\n\r\nThis is a neat idea. Currently, jupyter_nbextensions_configurator uses the notebook's javascript config API, which provides no history. The package does already provide serverextensions to add additional handlers, so it would be possible to add a config-with-history API, I guess. In fact, alterations it makes could be stored in a dedicated config file, accessed through the regular config API, I suppose :thinking: I think history is probably beyond the scope of the current issue, but potentially something helpful & interesting to consider for another day.\r\n\r\nSo, I think I'll proceed as follows, unless anyone thinks of reasons to change:\r\n\r\n* adopt semver versioning for compatibility, as suggested by @maartenbreddels \r\n* use the configurator's discovery mechanism to find installed extensions, then apply explicit enable/disable statuses, as set in config in the current notebook's manner. This would mean that extensions are 'enabled' (in the sense of loading) by default, but that a custom installer script (e.g. for contrib repo) can still override this by explicitly disabling at install time anything which has not already been explicitly _en_abled\r\n\r\nAs for the yaml/json decision, how about we:\r\n\r\n * use config stored in a `package.json` file, under a specific key, say (following [this SO suggestion on npm key naming](https://stackoverflow.com/questions/10065564/add-custom-metadata-or-config-to-package-json-is-it-valid)) `org_jupyter_nbextension`. This is simple to implement, and since the configurator's data isn't expected to ever be edited anyway (it sets out only the defaults & types of values stored through the notebook config API), no end-user should really have to do any editing of it anyway, unless they're developing an extension, in which case I think we can fairly assume that they are able to familiarise themselves with the json syntax.\r\n * additionally support the existing yaml config format *if yaml is importable*. This way, bundles like contrib can add yaml as a dependency without forcing it on notebook as a whole.\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/410373241",
    "html_url": "https://github.com/jupyter/notebook/issues/2824#issuecomment-410373241",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2824",
    "id": 410373241,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDM3MzI0MQ==",
    "user": {
      "login": "yuvipanda",
      "id": 30430,
      "node_id": "MDQ6VXNlcjMwNDMw",
      "avatar_url": "https://avatars.githubusercontent.com/u/30430?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yuvipanda",
      "html_url": "https://github.com/yuvipanda",
      "followers_url": "https://api.github.com/users/yuvipanda/followers",
      "following_url": "https://api.github.com/users/yuvipanda/following{/other_user}",
      "gists_url": "https://api.github.com/users/yuvipanda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yuvipanda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yuvipanda/subscriptions",
      "organizations_url": "https://api.github.com/users/yuvipanda/orgs",
      "repos_url": "https://api.github.com/users/yuvipanda/repos",
      "events_url": "https://api.github.com/users/yuvipanda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yuvipanda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-03T20:52:24Z",
    "updated_at": "2018-08-03T20:52:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "Did this go anywhere? We have something very similar to the proposed setup for server extensions now.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/410374618",
    "html_url": "https://github.com/jupyter/notebook/issues/2824#issuecomment-410374618",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2824",
    "id": 410374618,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDM3NDYxOA==",
    "user": {
      "login": "bollwyvl",
      "id": 45380,
      "node_id": "MDQ6VXNlcjQ1Mzgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/45380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bollwyvl",
      "html_url": "https://github.com/bollwyvl",
      "followers_url": "https://api.github.com/users/bollwyvl/followers",
      "following_url": "https://api.github.com/users/bollwyvl/following{/other_user}",
      "gists_url": "https://api.github.com/users/bollwyvl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bollwyvl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bollwyvl/subscriptions",
      "organizations_url": "https://api.github.com/users/bollwyvl/orgs",
      "repos_url": "https://api.github.com/users/bollwyvl/repos",
      "events_url": "https://api.github.com/users/bollwyvl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bollwyvl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-03T20:58:26Z",
    "updated_at": "2018-08-03T20:58:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yeah this shipped in 5.3 with the conf.d stuff. some nbextension have\nalready moved to it.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/410384543",
    "html_url": "https://github.com/jupyter/notebook/issues/2824#issuecomment-410384543",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2824",
    "id": 410384543,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDM4NDU0Mw==",
    "user": {
      "login": "yuvipanda",
      "id": 30430,
      "node_id": "MDQ6VXNlcjMwNDMw",
      "avatar_url": "https://avatars.githubusercontent.com/u/30430?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/yuvipanda",
      "html_url": "https://github.com/yuvipanda",
      "followers_url": "https://api.github.com/users/yuvipanda/followers",
      "following_url": "https://api.github.com/users/yuvipanda/following{/other_user}",
      "gists_url": "https://api.github.com/users/yuvipanda/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/yuvipanda/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/yuvipanda/subscriptions",
      "organizations_url": "https://api.github.com/users/yuvipanda/orgs",
      "repos_url": "https://api.github.com/users/yuvipanda/repos",
      "events_url": "https://api.github.com/users/yuvipanda/events{/privacy}",
      "received_events_url": "https://api.github.com/users/yuvipanda/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-03T21:46:15Z",
    "updated_at": "2018-08-03T21:46:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "@bollwyvl sweet! Is it documented someplace?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/410390511",
    "html_url": "https://github.com/jupyter/notebook/issues/2824#issuecomment-410390511",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2824",
    "id": 410390511,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDM5MDUxMQ==",
    "user": {
      "login": "bollwyvl",
      "id": 45380,
      "node_id": "MDQ6VXNlcjQ1Mzgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/45380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bollwyvl",
      "html_url": "https://github.com/bollwyvl",
      "followers_url": "https://api.github.com/users/bollwyvl/followers",
      "following_url": "https://api.github.com/users/bollwyvl/following{/other_user}",
      "gists_url": "https://api.github.com/users/bollwyvl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bollwyvl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bollwyvl/subscriptions",
      "organizations_url": "https://api.github.com/users/bollwyvl/orgs",
      "repos_url": "https://api.github.com/users/bollwyvl/repos",
      "events_url": "https://api.github.com/users/bollwyvl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bollwyvl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-03T22:17:48Z",
    "updated_at": "2018-08-03T22:17:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here's the only spot I know of... is there another place that is misleading?\n\nhttp://jupyter-notebook.readthedocs.io/en/stable/examples/Notebook/Distributing%20Jupyter%20Extensions%20as%20Python%20Packages.html#Automatically-enabling-a-server-extension-and-nbextension\n\nOn Fri, Aug 3, 2018 at 5:46 PM Yuvi Panda <notifications@github.com> wrote:\n\n> @bollwyvl <https://github.com/bollwyvl> sweet! Is it documented someplace?\n>\n> —\n> You are receiving this because you were mentioned.\n>\n>\n> Reply to this email directly, view it on GitHub\n> <https://github.com/jupyter/notebook/issues/2824#issuecomment-410384543>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AACxRKLZxLtnCbt3dBkh6bUuOGGGBBVnks5uNMSogaJpZM4PKGT5>\n> .\n>\n",
    "performed_via_github_app": null
  }
]
