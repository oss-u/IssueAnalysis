[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/117334334",
    "html_url": "https://github.com/jupyter/notebook/issues/181#issuecomment-117334334",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/181",
    "id": 117334334,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNzMzNDMzNA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-30T20:36:46Z",
    "updated_at": "2015-06-30T20:36:46Z",
    "author_association": "MEMBER",
    "body": "We will be working on that by actually having the model on the server side, which will send only the require part to the browser. \n\nAs for which mimetype to actually compute, right now, usually libraries have global flag to enable/disable. \n\nAny help to move things forward is of course appreciated. \n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/117360092",
    "html_url": "https://github.com/jupyter/notebook/issues/181#issuecomment-117360092",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/181",
    "id": 117360092,
    "node_id": "MDEyOklzc3VlQ29tbWVudDExNzM2MDA5Mg==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-06-30T22:14:27Z",
    "updated_at": "2015-06-30T22:14:27Z",
    "author_association": "MEMBER",
    "body": "This is something we've thought about in other kernels as well. Until quite recently, the R kernel was drawing SVG, PNG, JPEG and PDF by default - the last especially made big chunks of binary data. We've now dropped JPEG and PDF from the defaults.\n\nHowever, I don't want to go too far in the direction of only drawing the format the current client wants. I think it's a bad user experience if you have to explicitly think about whether this is an archival notebook or a quick-and-dirty exploration before making a plot. In a sense, the whole point of the notebook is to make a smoother transition from exploration to a more presentable document. So I think we need defaults that work reasonably well for both.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/296854456",
    "html_url": "https://github.com/jupyter/notebook/issues/181#issuecomment-296854456",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/181",
    "id": 296854456,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5Njg1NDQ1Ng==",
    "user": {
      "login": "JamiesHQ",
      "id": 476301,
      "node_id": "MDQ6VXNlcjQ3NjMwMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/476301?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JamiesHQ",
      "html_url": "https://github.com/JamiesHQ",
      "followers_url": "https://api.github.com/users/JamiesHQ/followers",
      "following_url": "https://api.github.com/users/JamiesHQ/following{/other_user}",
      "gists_url": "https://api.github.com/users/JamiesHQ/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JamiesHQ/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JamiesHQ/subscriptions",
      "organizations_url": "https://api.github.com/users/JamiesHQ/orgs",
      "repos_url": "https://api.github.com/users/JamiesHQ/repos",
      "events_url": "https://api.github.com/users/JamiesHQ/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JamiesHQ/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-25T00:03:38Z",
    "updated_at": "2017-04-25T00:03:38Z",
    "author_association": "MEMBER",
    "body": "@takluyver @Carreau : has there been work on this since June 2015? What are the next steps to move this forward?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/348662592",
    "html_url": "https://github.com/jupyter/notebook/issues/181#issuecomment-348662592",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/181",
    "id": 348662592,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODY2MjU5Mg==",
    "user": {
      "login": "gnestor",
      "id": 512354,
      "node_id": "MDQ6VXNlcjUxMjM1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/512354?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnestor",
      "html_url": "https://github.com/gnestor",
      "followers_url": "https://api.github.com/users/gnestor/followers",
      "following_url": "https://api.github.com/users/gnestor/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnestor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnestor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnestor/subscriptions",
      "organizations_url": "https://api.github.com/users/gnestor/orgs",
      "repos_url": "https://api.github.com/users/gnestor/repos",
      "events_url": "https://api.github.com/users/gnestor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnestor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-02T02:49:24Z",
    "updated_at": "2017-12-02T02:49:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "It sounds to me like it's the library (e.g. pandas) that decides how big of a mime bundle to return and that users should be configuring that there (e.g. `pandas.display.notebook_repr_html` or `pandas.display.html.table_schema`). If the model were on the server/kernel as @Carreau mentioned, the notebook could dynamically fetch parts of the mime bundle depending on the context (like rendering an output or saving a notebook file), but currently it's all in the browser so users will be expected to manage that to a certain extent and library authors will be expected to manage that as well. \r\n\r\nAnother thing to consider is why libraries/kernels return multiple mime types for the same data in the first place. I think the primary reasons are for rendering  a) in notebook environments that don't have the necessary extensions installed and b) using nbconvert. I think that [binder](https://github.com/jupyterhub/binderhub) is going to change some of this. binder makes it really easy to distribute reproducible notebooks. I think that people will people will start to share notebooks via binder because it effectively eliminates reason A above and it provides users with a live notebook vs. a static HTML notebook (like on GitHub). I don't have any answer for nbconvert...it _could_ potentially render outputs using headless Chrome and capture static HTML for exporting to HTML, save screenshots for exporting to PDF, etc. @mpacer Is there any plan to support custom mime types in nbconvert?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/348662622",
    "html_url": "https://github.com/jupyter/notebook/issues/181#issuecomment-348662622",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/181",
    "id": 348662622,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODY2MjYyMg==",
    "user": {
      "login": "gnestor",
      "id": 512354,
      "node_id": "MDQ6VXNlcjUxMjM1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/512354?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnestor",
      "html_url": "https://github.com/gnestor",
      "followers_url": "https://api.github.com/users/gnestor/followers",
      "following_url": "https://api.github.com/users/gnestor/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnestor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnestor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnestor/subscriptions",
      "organizations_url": "https://api.github.com/users/gnestor/orgs",
      "repos_url": "https://api.github.com/users/gnestor/repos",
      "events_url": "https://api.github.com/users/gnestor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnestor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-02T02:49:54Z",
    "updated_at": "2017-12-02T02:50:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "Somewhat related: @Carreau created a prototype that allows users to toggle between different available mime types for an output 👍: https://github.com/jupyter/notebook/pull/2769",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/348935295",
    "html_url": "https://github.com/jupyter/notebook/issues/181#issuecomment-348935295",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/181",
    "id": 348935295,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODkzNTI5NQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-04T11:27:40Z",
    "updated_at": "2017-12-04T11:27:40Z",
    "author_association": "MEMBER",
    "body": "> If the model were on the server/kernel as @Carreau mentioned, the notebook could dynamically fetch parts of the mime bundle depending on the context (like rendering an output or saving a notebook file)\r\n\r\nYes, but that won't reduce the computation time. \r\n\r\n> I think that binder is going to change some of this. binder makes it really easy to distribute reproducible notebooks\r\n\r\nThat might be the case for some small examples, but notebook storing the data is critical in other case, if you need credential to access data, or if you run a simulation on HPC, you can't possibly ask binder to rerun that. On of the classic example would be a notebook that analyses the last 100 Tweets,  about `#hastag` the result will depends on when you run the notebook, so your mimetypes have to be computed at execution time. \r\n\r\nWe are still thinking about how to make that easier/better. ",
    "performed_via_github_app": null
  }
]
