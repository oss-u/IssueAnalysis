[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/652513592",
    "html_url": "https://github.com/jupyter/notebook/pull/5565#issuecomment-652513592",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5565",
    "id": 652513592,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MjUxMzU5Mg==",
    "user": {
      "login": "blink1073",
      "id": 2096628,
      "node_id": "MDQ6VXNlcjIwOTY2Mjg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2096628?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blink1073",
      "html_url": "https://github.com/blink1073",
      "followers_url": "https://api.github.com/users/blink1073/followers",
      "following_url": "https://api.github.com/users/blink1073/following{/other_user}",
      "gists_url": "https://api.github.com/users/blink1073/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blink1073/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blink1073/subscriptions",
      "organizations_url": "https://api.github.com/users/blink1073/orgs",
      "repos_url": "https://api.github.com/users/blink1073/repos",
      "events_url": "https://api.github.com/users/blink1073/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blink1073/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-01T16:14:33Z",
    "updated_at": "2020-07-01T16:14:33Z",
    "author_association": "MEMBER",
    "body": "@kevin-bates, you had marked this as 6.1 but I think because of the behavior change it should be 6.2.  ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/652534394",
    "html_url": "https://github.com/jupyter/notebook/pull/5565#issuecomment-652534394",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5565",
    "id": 652534394,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MjUzNDM5NA==",
    "user": {
      "login": "kevin-bates",
      "id": 22599560,
      "node_id": "MDQ6VXNlcjIyNTk5NTYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/22599560?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevin-bates",
      "html_url": "https://github.com/kevin-bates",
      "followers_url": "https://api.github.com/users/kevin-bates/followers",
      "following_url": "https://api.github.com/users/kevin-bates/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevin-bates/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevin-bates/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevin-bates/subscriptions",
      "organizations_url": "https://api.github.com/users/kevin-bates/orgs",
      "repos_url": "https://api.github.com/users/kevin-bates/repos",
      "events_url": "https://api.github.com/users/kevin-bates/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevin-bates/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-01T16:54:21Z",
    "updated_at": "2020-07-01T16:54:21Z",
    "author_association": "MEMBER",
    "body": "@blink1073 - this change fixes the regression that the previous change introduced in 6.0.  \r\n\r\nWith this change, typical notebook users (those starting notebook from a shell)  will have terminals that retain the current environment (i.e., not using a login and equal to the pre-6.0 behavior), while those users gaining access to notebook servers launched from things like hub or running as a daemon, will launch terminals using a login shell (which addresses the intent of the 6.0 change).  As a result, I view this more as bug fix than anything else and why it should be targetted for 6.1.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/652534942",
    "html_url": "https://github.com/jupyter/notebook/pull/5565#issuecomment-652534942",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5565",
    "id": 652534942,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MjUzNDk0Mg==",
    "user": {
      "login": "blink1073",
      "id": 2096628,
      "node_id": "MDQ6VXNlcjIwOTY2Mjg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2096628?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blink1073",
      "html_url": "https://github.com/blink1073",
      "followers_url": "https://api.github.com/users/blink1073/followers",
      "following_url": "https://api.github.com/users/blink1073/following{/other_user}",
      "gists_url": "https://api.github.com/users/blink1073/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blink1073/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blink1073/subscriptions",
      "organizations_url": "https://api.github.com/users/blink1073/orgs",
      "repos_url": "https://api.github.com/users/blink1073/repos",
      "events_url": "https://api.github.com/users/blink1073/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blink1073/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-01T16:55:26Z",
    "updated_at": "2020-07-01T16:55:26Z",
    "author_association": "MEMBER",
    "body": "Cool, sounds good, merging!",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/652548404",
    "html_url": "https://github.com/jupyter/notebook/pull/5565#issuecomment-652548404",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5565",
    "id": 652548404,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MjU0ODQwNA==",
    "user": {
      "login": "kevin-bates",
      "id": 22599560,
      "node_id": "MDQ6VXNlcjIyNTk5NTYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/22599560?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevin-bates",
      "html_url": "https://github.com/kevin-bates",
      "followers_url": "https://api.github.com/users/kevin-bates/followers",
      "following_url": "https://api.github.com/users/kevin-bates/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevin-bates/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevin-bates/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevin-bates/subscriptions",
      "organizations_url": "https://api.github.com/users/kevin-bates/orgs",
      "repos_url": "https://api.github.com/users/kevin-bates/repos",
      "events_url": "https://api.github.com/users/kevin-bates/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevin-bates/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-01T17:22:11Z",
    "updated_at": "2020-07-01T17:22:11Z",
    "author_association": "MEMBER",
    "body": "Hmm - I was wanting to try to confirm proper behavior here before merging.  \r\n\r\nIf I launch notebook as a cron job (seemed to be the easiest way w/o Hub integration), I see the trimmed environment **and** SHLVL == 2!  This implies the SHLVL approach is not adequate and we've essentially reverted the reason for @dmikushin's change in the first place.\r\n\r\n@dlukes - in what scenarios do you find SHLVL == 0? ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/652559693",
    "html_url": "https://github.com/jupyter/notebook/pull/5565#issuecomment-652559693",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5565",
    "id": 652559693,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MjU1OTY5Mw==",
    "user": {
      "login": "kevin-bates",
      "id": 22599560,
      "node_id": "MDQ6VXNlcjIyNTk5NTYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/22599560?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevin-bates",
      "html_url": "https://github.com/kevin-bates",
      "followers_url": "https://api.github.com/users/kevin-bates/followers",
      "following_url": "https://api.github.com/users/kevin-bates/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevin-bates/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevin-bates/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevin-bates/subscriptions",
      "organizations_url": "https://api.github.com/users/kevin-bates/orgs",
      "repos_url": "https://api.github.com/users/kevin-bates/repos",
      "events_url": "https://api.github.com/users/kevin-bates/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevin-bates/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-01T17:46:55Z",
    "updated_at": "2020-07-01T17:46:55Z",
    "author_association": "MEMBER",
    "body": "If I prefix by 'service command' with `SHLVL=0`, then this change does the right thing.  But I'm not certain using `cron` for this is a sufficient way to emulate the cloud-based deployment @dmikushin is trying to address.\r\n\r\n@dmikushin - would that behavior be sufficient?  This doesn't seem sufficient in the Hub use case to me.\r\n\r\n@minrk, @zsailer, @blink1073 - do any of you have additional ideas here?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/652589189",
    "html_url": "https://github.com/jupyter/notebook/pull/5565#issuecomment-652589189",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5565",
    "id": 652589189,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MjU4OTE4OQ==",
    "user": {
      "login": "kevin-bates",
      "id": 22599560,
      "node_id": "MDQ6VXNlcjIyNTk5NTYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/22599560?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevin-bates",
      "html_url": "https://github.com/kevin-bates",
      "followers_url": "https://api.github.com/users/kevin-bates/followers",
      "following_url": "https://api.github.com/users/kevin-bates/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevin-bates/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevin-bates/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevin-bates/subscriptions",
      "organizations_url": "https://api.github.com/users/kevin-bates/orgs",
      "repos_url": "https://api.github.com/users/kevin-bates/repos",
      "events_url": "https://api.github.com/users/kevin-bates/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevin-bates/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-01T18:52:26Z",
    "updated_at": "2020-07-01T18:52:26Z",
    "author_association": "MEMBER",
    "body": "One \"hook\" I find in my environments (RHEL and mac) is that env `TERM` is present in login (or sub) shells, while it is not present when launched from cron.  Here's the env from cron (RHEL.  mac's is the same sans the `XDG_` vars) - which I believe resembles @dmikushin's...\r\n```\r\nXDG_SESSION_ID=2794\r\nSHELL=/bin/sh\r\nUSER=root\r\nPATH=/usr/bin:/bin\r\nPWD=/root\r\nLANG=en_US.UTF-8\r\nSHLVL=1\r\nHOME=/root\r\nLOGNAME=root\r\nXDG_RUNTIME_DIR=/run/user/0\r\n_=/usr/bin/env\r\n```\r\nAs a result, using this as the criteria for creating a login shell seems to work...\r\n```python\r\nif os.name != 'nt' and not os.environ.get(\"TERM\"):\r\n```\r\nIn fact, using `TERM` is the only thing I see that can be leveraged to make this determination.\r\n\r\nThoughts?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/652662352",
    "html_url": "https://github.com/jupyter/notebook/pull/5565#issuecomment-652662352",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5565",
    "id": 652662352,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MjY2MjM1Mg==",
    "user": {
      "login": "dlukes",
      "id": 2734517,
      "node_id": "MDQ6VXNlcjI3MzQ1MTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2734517?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dlukes",
      "html_url": "https://github.com/dlukes",
      "followers_url": "https://api.github.com/users/dlukes/followers",
      "following_url": "https://api.github.com/users/dlukes/following{/other_user}",
      "gists_url": "https://api.github.com/users/dlukes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dlukes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dlukes/subscriptions",
      "organizations_url": "https://api.github.com/users/dlukes/orgs",
      "repos_url": "https://api.github.com/users/dlukes/repos",
      "events_url": "https://api.github.com/users/dlukes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dlukes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-01T21:45:52Z",
    "updated_at": "2020-07-01T21:50:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "> in what scenarios do you find SHLVL == 0?\r\n\r\nI run a JupyterHub instance on an Ubuntu 18.04 server and when I log in (i.e. a spawn a single-user server with SystemdSpawner), launch a notebook and run `import os; os.environ[\"SHLVL\"]` or `!echo $SHLVL`, I get `'0'` / `0`. When I launch a terminal and `echo $SHLVL`, I get `1`. So even with this patch, the shell inside the terminal should be started as login AFAICS.\r\n\r\nBinder seems to be configured the same way, if you want to [try it out](https://mybinder.org/v2/gh/ipython/ipython-in-depth/master?filepath=binder/Index.ipynb), I get the same behavior.\r\n\r\nOf course, I can imagine this may vary across \\*nix flavors and specific setups, particularly across spawners other than SystemdSpawner? If so, that's unfortunate, but I would argue that JupyterHub admins are typically more technically sophisticated than someone who runs the Jupyter notebook locally, and so they're in a better position to work around the issue. Contrast this with an individual user with a local install whose virtualenv gets overridden out of the blue.\r\n\r\n> In fact, using TERM is the only thing I see that can be leveraged to make this determination.\r\n\r\nSorry, I have no idea if that would be more or less reliable than `SHLVL` across different *nix flavors... Maybe someone else?\r\n\r\nFWIW, running `!echo $TERM` in a Binder notebook prints `xterm-color`, and `echo $TERM` in a Binder terminal prints `xterm`. The same goes for the JupyterHub instance I run.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/652677692",
    "html_url": "https://github.com/jupyter/notebook/pull/5565#issuecomment-652677692",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5565",
    "id": 652677692,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MjY3NzY5Mg==",
    "user": {
      "login": "kevin-bates",
      "id": 22599560,
      "node_id": "MDQ6VXNlcjIyNTk5NTYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/22599560?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevin-bates",
      "html_url": "https://github.com/kevin-bates",
      "followers_url": "https://api.github.com/users/kevin-bates/followers",
      "following_url": "https://api.github.com/users/kevin-bates/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevin-bates/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevin-bates/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevin-bates/subscriptions",
      "organizations_url": "https://api.github.com/users/kevin-bates/orgs",
      "repos_url": "https://api.github.com/users/kevin-bates/repos",
      "events_url": "https://api.github.com/users/kevin-bates/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevin-bates/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-01T22:30:07Z",
    "updated_at": "2020-07-01T22:31:23Z",
    "author_association": "MEMBER",
    "body": "Thanks for the helpful response @dlukes.  So clearly your use-case is covered by `SHLVL` - awesome.\r\n\r\nI'm learning that some shells don't use `SHLVL` and I suspect platforms that do use it may vary on whether it starts at 0.  As a result, I'm beginning to think we might be best off with an either-or strategy here:\r\n```python\r\nif os.name != 'nt' and (int(os.environ.get(\"SHLVL\", 0)) < 1 or not os.environ.get(\"TERM\")):\r\n```\r\nUnless @dmikushin can confirm that using the `SHLVL < 1` check works and that gives us (me?) the necessary confidence to keep this change, I'm inclined to propose the additional clause.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/652890414",
    "html_url": "https://github.com/jupyter/notebook/pull/5565#issuecomment-652890414",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5565",
    "id": 652890414,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1Mjg5MDQxNA==",
    "user": {
      "login": "blink1073",
      "id": 2096628,
      "node_id": "MDQ6VXNlcjIwOTY2Mjg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2096628?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blink1073",
      "html_url": "https://github.com/blink1073",
      "followers_url": "https://api.github.com/users/blink1073/followers",
      "following_url": "https://api.github.com/users/blink1073/following{/other_user}",
      "gists_url": "https://api.github.com/users/blink1073/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blink1073/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blink1073/subscriptions",
      "organizations_url": "https://api.github.com/users/blink1073/orgs",
      "repos_url": "https://api.github.com/users/blink1073/repos",
      "events_url": "https://api.github.com/users/blink1073/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blink1073/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-02T09:14:04Z",
    "updated_at": "2020-07-02T09:14:04Z",
    "author_association": "MEMBER",
    "body": "It looks like not all shells implement `SHLVL`, such as `ksh` and `csh`: https://docstore.mik.ua/orelly/unix3/upt/ch04_12.htm\r\n\r\nIt looks like checking for `TERM` is not a reliable way to tell if you're running a CRON job because that variable might be set through some other means.  Here were some suggested ways to detect when running on CRON: https://unix.stackexchange.com/a/46801",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/652906781",
    "html_url": "https://github.com/jupyter/notebook/pull/5565#issuecomment-652906781",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5565",
    "id": 652906781,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MjkwNjc4MQ==",
    "user": {
      "login": "dlukes",
      "id": 2734517,
      "node_id": "MDQ6VXNlcjI3MzQ1MTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2734517?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dlukes",
      "html_url": "https://github.com/dlukes",
      "followers_url": "https://api.github.com/users/dlukes/followers",
      "following_url": "https://api.github.com/users/dlukes/following{/other_user}",
      "gists_url": "https://api.github.com/users/dlukes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dlukes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dlukes/subscriptions",
      "organizations_url": "https://api.github.com/users/dlukes/orgs",
      "repos_url": "https://api.github.com/users/dlukes/repos",
      "events_url": "https://api.github.com/users/dlukes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dlukes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-02T09:47:33Z",
    "updated_at": "2020-07-02T09:47:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "I just want to stress that we shouldn't lose sight of the fact that in the basic use case (= local installation), a non-login shell is the correct default. The typical local user will launch the notebook from a shell which presumably already has an appropriately configured environment, so it doesn't make sense to run the risk of breaking it (as can happen on macOS, cf. #5247) by running a login shell.\r\n\r\nProviding an escape hatch for more advanced use cases which don't have a login shell higher up the process tree, and therefore may lead to an incomplete environment, is definitely a good thing, but I think it should:\r\n\r\n1. be on a best effort basis -- the heuristics detecting the need for a login shell can be incomplete, requiring the advanced user to add their own workaround in some cases, or contribute a PR\r\n2. err on the side of caution so as not to break the basic use case above -- the heuristics should ideally have a 0 false positive rate, but false negatives are acceptable\r\n\r\nI thought checking `SHLVL` was relatively safe in this respect, since in the basic use case, the notebook is launched from an existing (presumably) well-configured shell, as noted above. However, given that not all shells implement it (thanks for researching that, @kevin-bates and @blink1073!), it could lead to pretty glaring false positives for `ksh` and `csh` users. Though I'm not sure how many people that is, since `ksh` and `csh` are *literally* the only two shells of all the ones I could think of off the top of my head that I couldn't easily install and test, because they don't seem to be in my OS's package repos :)\r\n\r\nAt first glance, checking `TERM` seems relatively safe too -- in the basic use case, that shell that the notebook is launched from *has* to be running inside a terminal. As @blink1073 points out, it can in theory be (manually) set even in other cases, e.g. under `cron`, but that would lead to a false negative, which doesn't worry me too much, as per the discussion above. However, it can also be *unset* in that basic use case, which would lead to a false positive. I don't know how often people unset `TERM` in their `.bashrc` / `.zshrc` / `config.fish` (it certainly sounds like a bad idea), but there's nothing stopping them.\r\n\r\nIn summary, this is (unsurprisingly) a problem with any heuristic based on checking environment variables -- they can be overridden in every which way.\r\n\r\nSo what about checking `sys.stdout.isatty()` instead? That should reliably be `True` whenever the notebook is launched from a shell connected to a terminal (the basic use case). It's also `False` when running under `cron` or when launched by `systemd` -- I mean obviously it is, but of course I checked :) Can anyone think of a counterargument exposing why this might not be a good idea?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/652928745",
    "html_url": "https://github.com/jupyter/notebook/pull/5565#issuecomment-652928745",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5565",
    "id": 652928745,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MjkyODc0NQ==",
    "user": {
      "login": "dlukes",
      "id": 2734517,
      "node_id": "MDQ6VXNlcjI3MzQ1MTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2734517?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dlukes",
      "html_url": "https://github.com/dlukes",
      "followers_url": "https://api.github.com/users/dlukes/followers",
      "following_url": "https://api.github.com/users/dlukes/following{/other_user}",
      "gists_url": "https://api.github.com/users/dlukes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dlukes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dlukes/subscriptions",
      "organizations_url": "https://api.github.com/users/dlukes/orgs",
      "repos_url": "https://api.github.com/users/dlukes/repos",
      "events_url": "https://api.github.com/users/dlukes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dlukes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-02T10:35:47Z",
    "updated_at": "2020-07-02T10:35:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "This may be no longer relevant if the `SHLVL` heuristic is discarded, but in case it isn't:\r\n\r\n> If I launch notebook as a cron job (seemed to be the easiest way w/o Hub integration), I see the trimmed environment and SHLVL == 2!\r\n\r\nThe `cron` environment itself doesn't set `SHLVL`, which you can confirm by putting `* * * * * /usr/bin/env >\"$HOME/cron-env\"` in your crontab, waiting a bit, and inspecting `~/cron-env`.\r\n\r\nIf you run a *shell script* from `cron` that launches a jupyter notebook server, that shell script will have `SHLVL == 1`, which the notebook server will inherit. So if you then start a terminal from that notebook server, the shell inside it will have `SHLVL == 2`.\r\n\r\nAs you've rightly pointed out, `SHLVL` can be overridden to `0` in that launcher shell script, which makes everything work as intended. This could be documented as the \"official\" solution, which admins of advanced configurations can be expected to look up, as opposed to regular users.\r\n\r\nAt that point though, it might be better to just use a dedicated env var (`JUPYTER_...`) or config setting, rather than piggybacking on a (combination of) existing one(s). Unlike `SHLVL` / `TERM`, one would hope that people won't happen to accidentally override a dedicated env var for a completely unrelated reason.\r\n\r\n> I suspect platforms that do use it may vary on whether it starts at 0\r\n\r\nI may be wrong, but I would tend to think that in most JupyterHub settings, `SHLVL` won't be set at all when a single-user notebook server is launched, because it won't be launched from a shell :) Though this may vary depending on the spawner used, as I mentioned previously.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/652931562",
    "html_url": "https://github.com/jupyter/notebook/pull/5565#issuecomment-652931562",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5565",
    "id": 652931562,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MjkzMTU2Mg==",
    "user": {
      "login": "blink1073",
      "id": 2096628,
      "node_id": "MDQ6VXNlcjIwOTY2Mjg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2096628?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blink1073",
      "html_url": "https://github.com/blink1073",
      "followers_url": "https://api.github.com/users/blink1073/followers",
      "following_url": "https://api.github.com/users/blink1073/following{/other_user}",
      "gists_url": "https://api.github.com/users/blink1073/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blink1073/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blink1073/subscriptions",
      "organizations_url": "https://api.github.com/users/blink1073/orgs",
      "repos_url": "https://api.github.com/users/blink1073/repos",
      "events_url": "https://api.github.com/users/blink1073/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blink1073/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-02T10:42:20Z",
    "updated_at": "2020-07-02T10:42:20Z",
    "author_association": "MEMBER",
    "body": "I like the idea of using `sys.stdout.isatty()` as the default, but allowing for a `JUPYTER_SHELL_LOGIN` override.  I think the \"somewhat standard\" environment variables have too many edge cases, as you've pointed out @dlukes.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/652936624",
    "html_url": "https://github.com/jupyter/notebook/pull/5565#issuecomment-652936624",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5565",
    "id": 652936624,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MjkzNjYyNA==",
    "user": {
      "login": "dlukes",
      "id": 2734517,
      "node_id": "MDQ6VXNlcjI3MzQ1MTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2734517?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dlukes",
      "html_url": "https://github.com/dlukes",
      "followers_url": "https://api.github.com/users/dlukes/followers",
      "following_url": "https://api.github.com/users/dlukes/following{/other_user}",
      "gists_url": "https://api.github.com/users/dlukes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dlukes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dlukes/subscriptions",
      "organizations_url": "https://api.github.com/users/dlukes/orgs",
      "repos_url": "https://api.github.com/users/dlukes/repos",
      "events_url": "https://api.github.com/users/dlukes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dlukes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-02T10:54:33Z",
    "updated_at": "2020-07-02T11:00:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Can anyone think of a counterargument exposing why this \\[i.e. sys.stdout.isatty()\\] might not be a good idea?\r\n\r\nOne potential problem I can think of is if a distribution provides a desktop launcher for the notebook which doesn't run it inside a terminal.\r\n\r\nAre there downstream packagers out there that do this? If so, it would be unfortunate, because literally the most beginner-friendly way of launching the notebook (= via the GUI) would do the wrong thing.\r\n\r\nArguably though, not running inside a terminal is the wrong way to provide a desktop launcher for the notebook, because it hides potentially useful logging output from the server. Notably, the Anaconda Navigator launcher starts a terminal and runs the notebook server inside it, so that one would work fine.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/652944584",
    "html_url": "https://github.com/jupyter/notebook/pull/5565#issuecomment-652944584",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5565",
    "id": 652944584,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1Mjk0NDU4NA==",
    "user": {
      "login": "blink1073",
      "id": 2096628,
      "node_id": "MDQ6VXNlcjIwOTY2Mjg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2096628?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blink1073",
      "html_url": "https://github.com/blink1073",
      "followers_url": "https://api.github.com/users/blink1073/followers",
      "following_url": "https://api.github.com/users/blink1073/following{/other_user}",
      "gists_url": "https://api.github.com/users/blink1073/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blink1073/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blink1073/subscriptions",
      "organizations_url": "https://api.github.com/users/blink1073/orgs",
      "repos_url": "https://api.github.com/users/blink1073/repos",
      "events_url": "https://api.github.com/users/blink1073/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blink1073/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-02T11:13:49Z",
    "updated_at": "2020-07-02T11:13:49Z",
    "author_association": "MEMBER",
    "body": "@captainsafia @rgbkrk does nteract launch the jupyter server in a system terminal?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/652946029",
    "html_url": "https://github.com/jupyter/notebook/pull/5565#issuecomment-652946029",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5565",
    "id": 652946029,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1Mjk0NjAyOQ==",
    "user": {
      "login": "blink1073",
      "id": 2096628,
      "node_id": "MDQ6VXNlcjIwOTY2Mjg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2096628?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blink1073",
      "html_url": "https://github.com/blink1073",
      "followers_url": "https://api.github.com/users/blink1073/followers",
      "following_url": "https://api.github.com/users/blink1073/following{/other_user}",
      "gists_url": "https://api.github.com/users/blink1073/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blink1073/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blink1073/subscriptions",
      "organizations_url": "https://api.github.com/users/blink1073/orgs",
      "repos_url": "https://api.github.com/users/blink1073/repos",
      "events_url": "https://api.github.com/users/blink1073/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blink1073/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-02T11:17:14Z",
    "updated_at": "2020-07-02T11:17:14Z",
    "author_association": "MEMBER",
    "body": "@timkpaine would this affect your custom launching logic?  iirc you are launching subprocesses running the `jupyter lab` command.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/652949250",
    "html_url": "https://github.com/jupyter/notebook/pull/5565#issuecomment-652949250",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5565",
    "id": 652949250,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1Mjk0OTI1MA==",
    "user": {
      "login": "blink1073",
      "id": 2096628,
      "node_id": "MDQ6VXNlcjIwOTY2Mjg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2096628?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blink1073",
      "html_url": "https://github.com/blink1073",
      "followers_url": "https://api.github.com/users/blink1073/followers",
      "following_url": "https://api.github.com/users/blink1073/following{/other_user}",
      "gists_url": "https://api.github.com/users/blink1073/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blink1073/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blink1073/subscriptions",
      "organizations_url": "https://api.github.com/users/blink1073/orgs",
      "repos_url": "https://api.github.com/users/blink1073/repos",
      "events_url": "https://api.github.com/users/blink1073/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blink1073/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-02T11:24:30Z",
    "updated_at": "2020-07-02T11:24:30Z",
    "author_association": "MEMBER",
    "body": "Ah, if the server is run in a docker container that is launched without the `-i` or `-t` options, this would probably return `false`.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/652950630",
    "html_url": "https://github.com/jupyter/notebook/pull/5565#issuecomment-652950630",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5565",
    "id": 652950630,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1Mjk1MDYzMA==",
    "user": {
      "login": "blink1073",
      "id": 2096628,
      "node_id": "MDQ6VXNlcjIwOTY2Mjg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2096628?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blink1073",
      "html_url": "https://github.com/blink1073",
      "followers_url": "https://api.github.com/users/blink1073/followers",
      "following_url": "https://api.github.com/users/blink1073/following{/other_user}",
      "gists_url": "https://api.github.com/users/blink1073/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blink1073/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blink1073/subscriptions",
      "organizations_url": "https://api.github.com/users/blink1073/orgs",
      "repos_url": "https://api.github.com/users/blink1073/repos",
      "events_url": "https://api.github.com/users/blink1073/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blink1073/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-02T11:27:38Z",
    "updated_at": "2020-07-02T11:27:38Z",
    "author_association": "MEMBER",
    "body": "I'm testing the docker question now.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/652968058",
    "html_url": "https://github.com/jupyter/notebook/pull/5565#issuecomment-652968058",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5565",
    "id": 652968058,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1Mjk2ODA1OA==",
    "user": {
      "login": "dlukes",
      "id": 2734517,
      "node_id": "MDQ6VXNlcjI3MzQ1MTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2734517?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dlukes",
      "html_url": "https://github.com/dlukes",
      "followers_url": "https://api.github.com/users/dlukes/followers",
      "following_url": "https://api.github.com/users/dlukes/following{/other_user}",
      "gists_url": "https://api.github.com/users/dlukes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dlukes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dlukes/subscriptions",
      "organizations_url": "https://api.github.com/users/dlukes/orgs",
      "repos_url": "https://api.github.com/users/dlukes/repos",
      "events_url": "https://api.github.com/users/dlukes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dlukes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-02T12:09:42Z",
    "updated_at": "2020-07-02T12:09:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "I tried distro-specific ways of installing the notebook on Ubuntu, Debian, Fedora and Solus. The only package I found that provides a desktop launcher is [this snap](https://snapcraft.io/jupyter), and it opens a terminal, so that's fine.\r\n\r\n> Ah, if the server is run in a docker container that is launched without the -i or -t options, this would probably return false.\r\n\r\nGood point! I'm not sure what should be considered \"correct\" behavior in a Docker context, but I can see how having it be dependent on Docker command line switches is somewhat unfortunate.\r\n\r\nOTOH, people don't tend to muck about too much with shell configuration inside Docker containers, so maybe the login/non-login distinction doesn't matter as much there?\r\n\r\nThe main argument against a login shell by default is that it might override manual changes to the environment. As in, stuff that the user literally types into the shell prior to launching the notebook, as opposed to stuff that lives in any (system-wide or user-specific) init files.\r\n\r\nIn the Python world, a prime (and maybe the only?) example of that is virtualenvs (that's the bug that bit me in #5247). But running the notebook inside a virtualenv *inside Docker* sounds like belt and suspenders to me. IDK -- do people do that? If not, maybe it's not worth worrying too much about.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/652971431",
    "html_url": "https://github.com/jupyter/notebook/pull/5565#issuecomment-652971431",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5565",
    "id": 652971431,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1Mjk3MTQzMQ==",
    "user": {
      "login": "blink1073",
      "id": 2096628,
      "node_id": "MDQ6VXNlcjIwOTY2Mjg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2096628?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blink1073",
      "html_url": "https://github.com/blink1073",
      "followers_url": "https://api.github.com/users/blink1073/followers",
      "following_url": "https://api.github.com/users/blink1073/following{/other_user}",
      "gists_url": "https://api.github.com/users/blink1073/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blink1073/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blink1073/subscriptions",
      "organizations_url": "https://api.github.com/users/blink1073/orgs",
      "repos_url": "https://api.github.com/users/blink1073/repos",
      "events_url": "https://api.github.com/users/blink1073/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blink1073/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-02T12:17:31Z",
    "updated_at": "2020-07-02T12:17:31Z",
    "author_association": "MEMBER",
    "body": "Pulling down the jupyter docker image took longer than I thought, I'll have to experiment more later today.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/652980657",
    "html_url": "https://github.com/jupyter/notebook/pull/5565#issuecomment-652980657",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5565",
    "id": 652980657,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1Mjk4MDY1Nw==",
    "user": {
      "login": "dlukes",
      "id": 2734517,
      "node_id": "MDQ6VXNlcjI3MzQ1MTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2734517?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dlukes",
      "html_url": "https://github.com/dlukes",
      "followers_url": "https://api.github.com/users/dlukes/followers",
      "following_url": "https://api.github.com/users/dlukes/following{/other_user}",
      "gists_url": "https://api.github.com/users/dlukes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dlukes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dlukes/subscriptions",
      "organizations_url": "https://api.github.com/users/dlukes/orgs",
      "repos_url": "https://api.github.com/users/dlukes/repos",
      "events_url": "https://api.github.com/users/dlukes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dlukes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-02T12:38:00Z",
    "updated_at": "2020-07-02T12:38:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "I thought of doing something like the following to walk up the process tree and see if there's a login shell (= a `-` is prepended to the program name) among the ancestors:\r\n\r\n```python\r\nimport os\r\nfrom psutil import Process\r\n\r\ndef is_child_of_login_shell(pid):\r\n    for parent in Process(pid).parents():\r\n        if parent.cmdline()[0].startswith(\"-\"):\r\n            return True\r\n    return False\r\n\r\nprint(is_child_of_login_shell(os.getpid()))\r\n```\r\n\r\nBut that doesn't work in a local GUI, because [GUIs typically don't go through a login shell and use a custom mechanism to set up the environment](https://unix.stackexchange.com/a/46856/190921).",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/653000513",
    "html_url": "https://github.com/jupyter/notebook/pull/5565#issuecomment-653000513",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5565",
    "id": 653000513,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzAwMDUxMw==",
    "user": {
      "login": "kevin-bates",
      "id": 22599560,
      "node_id": "MDQ6VXNlcjIyNTk5NTYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/22599560?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevin-bates",
      "html_url": "https://github.com/kevin-bates",
      "followers_url": "https://api.github.com/users/kevin-bates/followers",
      "following_url": "https://api.github.com/users/kevin-bates/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevin-bates/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevin-bates/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevin-bates/subscriptions",
      "organizations_url": "https://api.github.com/users/kevin-bates/orgs",
      "repos_url": "https://api.github.com/users/kevin-bates/repos",
      "events_url": "https://api.github.com/users/kevin-bates/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevin-bates/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-02T13:18:20Z",
    "updated_at": "2020-07-02T13:18:20Z",
    "author_association": "MEMBER",
    "body": "I'll catch up on the responses later today (thank you for the efforts - they're much appreciated!), but I wanted to clarify this comment from Steve...\r\n> It looks like checking for TERM is not a reliable way to tell if you're running a CRON job\r\n\r\nI was merely using CRON as a means of launching a notebook instance in a manner similar to how a service might be launched.  I didn't mean to imply that CRON-based launches are something we should try to support.  I was just using it to generate one of these minimal configurations and how to work backwards from there in order to solve this.\r\n\r\n> I just want to stress that we shouldn't lose sight of the fact that in the basic use case (= local installation), a non-login shell is the correct default. \r\n\r\n@dlukes - I agree 100% and made comments similar to this in my original questioning of using `-l`.  If we feel SHLVL is adequate I'm okay with just leaving things alone.  Given all the overnight responses (thanks again!) I'm starting to think we're spending too much time on this.  I'll try to follow-up this afternoon.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/653058770",
    "html_url": "https://github.com/jupyter/notebook/pull/5565#issuecomment-653058770",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5565",
    "id": 653058770,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzA1ODc3MA==",
    "user": {
      "login": "blink1073",
      "id": 2096628,
      "node_id": "MDQ6VXNlcjIwOTY2Mjg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2096628?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blink1073",
      "html_url": "https://github.com/blink1073",
      "followers_url": "https://api.github.com/users/blink1073/followers",
      "following_url": "https://api.github.com/users/blink1073/following{/other_user}",
      "gists_url": "https://api.github.com/users/blink1073/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blink1073/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blink1073/subscriptions",
      "organizations_url": "https://api.github.com/users/blink1073/orgs",
      "repos_url": "https://api.github.com/users/blink1073/repos",
      "events_url": "https://api.github.com/users/blink1073/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blink1073/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-02T15:01:20Z",
    "updated_at": "2020-07-02T15:01:20Z",
    "author_association": "MEMBER",
    "body": "Turns out I'm not feeling well enough to work today, I'll circle back to this.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/653244725",
    "html_url": "https://github.com/jupyter/notebook/pull/5565#issuecomment-653244725",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5565",
    "id": 653244725,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzI0NDcyNQ==",
    "user": {
      "login": "kevin-bates",
      "id": 22599560,
      "node_id": "MDQ6VXNlcjIyNTk5NTYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/22599560?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevin-bates",
      "html_url": "https://github.com/kevin-bates",
      "followers_url": "https://api.github.com/users/kevin-bates/followers",
      "following_url": "https://api.github.com/users/kevin-bates/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevin-bates/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevin-bates/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevin-bates/subscriptions",
      "organizations_url": "https://api.github.com/users/kevin-bates/orgs",
      "repos_url": "https://api.github.com/users/kevin-bates/repos",
      "events_url": "https://api.github.com/users/kevin-bates/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevin-bates/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-02T22:25:50Z",
    "updated_at": "2020-07-02T22:25:50Z",
    "author_association": "MEMBER",
    "body": "Sorry to hear you're not feeling well Steve - get better soon and thank you for spending time on this.  (I spent some time with the `jupyter/scipy-notebook` image and didn't see any discernible differences w/ and w/o `-it`.)\r\n\r\nDavid, I just caught up on your comments - wow - thanks for the great investigation!  I too like the idea of leveraging `isatty()` and was thinking about combing this with Steve's suggestion (which I suspect was Steve's thought as well):\r\n\r\n```python\r\nif os.name != 'nt' and int(os.environ.get(\"JUPYTER_SHELL_LOGIN\", not sys.stdout.isatty()):\r\n```\r\nWe'd document JUPYTER_SHELL_LOGIN to be '0' or '1' to simplify conversion to bool, etc.\r\n\r\nAnother option would be ... we rollback everything!  \r\n\r\nIt turns out a solution was configurable all along ...\r\n```python\r\n## Supply overrides for terminado. Currently only supports \"shell_command\".\r\nc.NotebookApp.terminado_settings = {\"shell_command\": ['/bin/bash', '-l']}\r\n```\r\nSince the ship has already sailed with 6.0 and the `isatty()` approach silently addresses both use-cases w/o intervention, it may be preferred.  I'd be cool with reverting to the original as well - although it would revert behaviors for those needing a login terminal until they adjust their configurations.\r\n\r\ncc: @dmikushin ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/653246916",
    "html_url": "https://github.com/jupyter/notebook/pull/5565#issuecomment-653246916",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5565",
    "id": 653246916,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzI0NjkxNg==",
    "user": {
      "login": "blink1073",
      "id": 2096628,
      "node_id": "MDQ6VXNlcjIwOTY2Mjg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2096628?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blink1073",
      "html_url": "https://github.com/blink1073",
      "followers_url": "https://api.github.com/users/blink1073/followers",
      "following_url": "https://api.github.com/users/blink1073/following{/other_user}",
      "gists_url": "https://api.github.com/users/blink1073/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blink1073/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blink1073/subscriptions",
      "organizations_url": "https://api.github.com/users/blink1073/orgs",
      "repos_url": "https://api.github.com/users/blink1073/repos",
      "events_url": "https://api.github.com/users/blink1073/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blink1073/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-02T22:33:15Z",
    "updated_at": "2020-07-02T22:33:15Z",
    "author_association": "MEMBER",
    "body": "I agree with all of the above (except for rolling back), thanks @kevin-bates!",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/653544660",
    "html_url": "https://github.com/jupyter/notebook/pull/5565#issuecomment-653544660",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5565",
    "id": 653544660,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzU0NDY2MA==",
    "user": {
      "login": "dlukes",
      "id": 2734517,
      "node_id": "MDQ6VXNlcjI3MzQ1MTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2734517?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dlukes",
      "html_url": "https://github.com/dlukes",
      "followers_url": "https://api.github.com/users/dlukes/followers",
      "following_url": "https://api.github.com/users/dlukes/following{/other_user}",
      "gists_url": "https://api.github.com/users/dlukes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dlukes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dlukes/subscriptions",
      "organizations_url": "https://api.github.com/users/dlukes/orgs",
      "repos_url": "https://api.github.com/users/dlukes/repos",
      "events_url": "https://api.github.com/users/dlukes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dlukes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-03T13:17:27Z",
    "updated_at": "2020-07-03T13:17:27Z",
    "author_association": "CONTRIBUTOR",
    "body": "> It turns out a solution was configurable all along ...\r\n\r\nOf course! I'd completely [forgotten](https://discourse.jupyter.org/t/multiple-terminal-shells-in-jupyterlab/3261/3) about that, thanks for pointing it out :)\r\n\r\nBuilding on that: on reflection, the custom env var feels a bit inconsistent with how Jupyter is typically configured. Correct me if I'm wrong, but AFAIK, the entire ecosystem systematically uses [config files and command line switches](https://jupyter.readthedocs.io/en/latest/projects/config.html) for this purpose. There are [a few env vars here and there](https://jupyter.readthedocs.io/en/latest/projects/jupyter-directories.html), but a potential `JUPYTER_SHELL_LOGIN` feels like the odd one out. I'm also not entirely sure where it would fit in the [notebook config docs](https://jupyter-notebook.readthedocs.io/en/latest/config.html).\r\n\r\nMoreover, it seems like `c.NotebookApp.terminado_settings` already provides the perfect hook for a much more expressive override:\r\n\r\n```python\r\n    shell_override = nb_app.terminado_settings.get('shell_command')\r\n    shell = (\r\n        [os.environ.get('SHELL') or default_shell]\r\n        if shell_override is None\r\n        else shell_override\r\n    )\r\n    # When the notebook server is not running in a terminal (e.g. when\r\n    # it's launched by a JupyterHub spawner), it's likely that the user\r\n    # environment hasn't been fully set up. In that case, run a login\r\n    # shell to automatically source /etc/profile and the like, unless\r\n    # the user has specifically set a preferred shell command.\r\n    if os.name != 'nt' and shell_override is None and not sys.stdout.isatty():\r\n        shell.append('-l')\r\n```\r\n\r\n(Here's the commit/diff: https://github.com/dlukes/notebook/commit/fad1ce56e336f911cd643c00293925ac2500cf34)\r\n\r\nThis is also better for edge cases such as someone using a very weird shell which doesn't accept an `-l` parameter -- as long as they write out the desired command under `shell_command`, they can be sure Jupyter won't tamper with it, which wouldn't be the case if the condition for appending `-l` relied purely on checking `JUPYTER_SHELL_LOGIN` and `isatty()`.\r\n\r\nI don't know, just my two cents :) I realize I'm an outsider and my perspective may be fairly limited.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/653632183",
    "html_url": "https://github.com/jupyter/notebook/pull/5565#issuecomment-653632183",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5565",
    "id": 653632183,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzYzMjE4Mw==",
    "user": {
      "login": "kevin-bates",
      "id": 22599560,
      "node_id": "MDQ6VXNlcjIyNTk5NTYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/22599560?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevin-bates",
      "html_url": "https://github.com/kevin-bates",
      "followers_url": "https://api.github.com/users/kevin-bates/followers",
      "following_url": "https://api.github.com/users/kevin-bates/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevin-bates/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevin-bates/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevin-bates/subscriptions",
      "organizations_url": "https://api.github.com/users/kevin-bates/orgs",
      "repos_url": "https://api.github.com/users/kevin-bates/repos",
      "events_url": "https://api.github.com/users/kevin-bates/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevin-bates/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-03T17:36:17Z",
    "updated_at": "2020-07-03T17:36:17Z",
    "author_association": "MEMBER",
    "body": "@dlukes - thank you again.\r\n\r\n> Building on that: on reflection, the custom env var feels a bit inconsistent with how Jupyter is typically configured. Correct me if I'm wrong, but AFAIK, the entire ecosystem systematically uses config files and command line switches for this purpose. There are a few env vars here and there, but a potential JUPYTER_SHELL_LOGIN feels like the odd one out. I'm also not entirely sure where it would fit in the notebook config docs.\r\n\r\nYou're absolutely correct in that Notebook has tried to avoid the use of env variables - although I think they are much more useful in container landscapes, etc.\r\n\r\nI think your latest solution provides all the necessary \"options\" for navigating this minefield and I'd be okay with that.  This is another hybrid approach that, I believe, addresses things in the best way so far.\r\n\r\n@blink1073 (once you're feeling better) - what do you think?  ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/653680131",
    "html_url": "https://github.com/jupyter/notebook/pull/5565#issuecomment-653680131",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5565",
    "id": 653680131,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzY4MDEzMQ==",
    "user": {
      "login": "dlukes",
      "id": 2734517,
      "node_id": "MDQ6VXNlcjI3MzQ1MTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2734517?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dlukes",
      "html_url": "https://github.com/dlukes",
      "followers_url": "https://api.github.com/users/dlukes/followers",
      "following_url": "https://api.github.com/users/dlukes/following{/other_user}",
      "gists_url": "https://api.github.com/users/dlukes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dlukes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dlukes/subscriptions",
      "organizations_url": "https://api.github.com/users/dlukes/orgs",
      "repos_url": "https://api.github.com/users/dlukes/repos",
      "events_url": "https://api.github.com/users/dlukes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dlukes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-03T21:23:16Z",
    "updated_at": "2020-07-03T21:23:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Notebook has tried to avoid the use of env variables - although I think they are much more useful in container landscapes, etc.\r\n\r\nThat's a very good point :) I just wanted to put that alternative out there, because I guess I have an aesthetic preference for not introducing another configuration option when one already exists that does the job perfectly well. So I was really glad you'd unearthed `c.NotebookApp.terminado_settings`. But as I've said, my perspective may be fairly limited, and there are perhaps more important points of view to consider here than aesthetics.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/653680882",
    "html_url": "https://github.com/jupyter/notebook/pull/5565#issuecomment-653680882",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5565",
    "id": 653680882,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzY4MDg4Mg==",
    "user": {
      "login": "blink1073",
      "id": 2096628,
      "node_id": "MDQ6VXNlcjIwOTY2Mjg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2096628?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blink1073",
      "html_url": "https://github.com/blink1073",
      "followers_url": "https://api.github.com/users/blink1073/followers",
      "following_url": "https://api.github.com/users/blink1073/following{/other_user}",
      "gists_url": "https://api.github.com/users/blink1073/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blink1073/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blink1073/subscriptions",
      "organizations_url": "https://api.github.com/users/blink1073/orgs",
      "repos_url": "https://api.github.com/users/blink1073/repos",
      "events_url": "https://api.github.com/users/blink1073/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blink1073/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-03T21:28:04Z",
    "updated_at": "2020-07-03T21:28:04Z",
    "author_association": "MEMBER",
    "body": "I support dlukes@fad1ce5 as well, thanks to you both!",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/654273625",
    "html_url": "https://github.com/jupyter/notebook/pull/5565#issuecomment-654273625",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5565",
    "id": 654273625,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NDI3MzYyNQ==",
    "user": {
      "login": "kevin-bates",
      "id": 22599560,
      "node_id": "MDQ6VXNlcjIyNTk5NTYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/22599560?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevin-bates",
      "html_url": "https://github.com/kevin-bates",
      "followers_url": "https://api.github.com/users/kevin-bates/followers",
      "following_url": "https://api.github.com/users/kevin-bates/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevin-bates/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevin-bates/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevin-bates/subscriptions",
      "organizations_url": "https://api.github.com/users/kevin-bates/orgs",
      "repos_url": "https://api.github.com/users/kevin-bates/repos",
      "events_url": "https://api.github.com/users/kevin-bates/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevin-bates/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-06T14:28:59Z",
    "updated_at": "2020-07-06T14:28:59Z",
    "author_association": "MEMBER",
    "body": "@dlukes - could you please create another PR? ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/654445395",
    "html_url": "https://github.com/jupyter/notebook/pull/5565#issuecomment-654445395",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5565",
    "id": 654445395,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NDQ0NTM5NQ==",
    "user": {
      "login": "dlukes",
      "id": 2734517,
      "node_id": "MDQ6VXNlcjI3MzQ1MTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2734517?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dlukes",
      "html_url": "https://github.com/dlukes",
      "followers_url": "https://api.github.com/users/dlukes/followers",
      "following_url": "https://api.github.com/users/dlukes/following{/other_user}",
      "gists_url": "https://api.github.com/users/dlukes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dlukes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dlukes/subscriptions",
      "organizations_url": "https://api.github.com/users/dlukes/orgs",
      "repos_url": "https://api.github.com/users/dlukes/repos",
      "events_url": "https://api.github.com/users/dlukes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dlukes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-06T20:19:58Z",
    "updated_at": "2020-07-06T20:19:58Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kevin-bates Sure, happy to! #5588 ",
    "performed_via_github_app": null
  }
]
