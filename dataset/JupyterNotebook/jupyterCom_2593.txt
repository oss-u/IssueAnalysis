[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/310251021",
    "html_url": "https://github.com/jupyter/notebook/issues/2593#issuecomment-310251021",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2593",
    "id": 310251021,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDI1MTAyMQ==",
    "user": {
      "login": "dsblank",
      "id": 168568,
      "node_id": "MDQ6VXNlcjE2ODU2OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/168568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsblank",
      "html_url": "https://github.com/dsblank",
      "followers_url": "https://api.github.com/users/dsblank/followers",
      "following_url": "https://api.github.com/users/dsblank/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsblank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsblank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsblank/subscriptions",
      "organizations_url": "https://api.github.com/users/dsblank/orgs",
      "repos_url": "https://api.github.com/users/dsblank/repos",
      "events_url": "https://api.github.com/users/dsblank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsblank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-22T01:35:27Z",
    "updated_at": "2017-06-22T01:35:27Z",
    "author_association": "MEMBER",
    "body": "Should this go to https://github.com/ipython/ipython/issues ?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/310333042",
    "html_url": "https://github.com/jupyter/notebook/issues/2593#issuecomment-310333042",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2593",
    "id": 310333042,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDMzMzA0Mg==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-22T09:52:21Z",
    "updated_at": "2017-06-22T09:52:21Z",
    "author_association": "MEMBER",
    "body": "This is more related to IPython than it is to notebook, certainly.\r\n\r\nI think that the 'update' mechanism we introduced recently is a more elegant and flexible alternative to adding a `clear_output` boolean option.\r\n\r\nThe separator gets tricky with multiple mime types - `display()` is doing more than producing HTML.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/310545116",
    "html_url": "https://github.com/jupyter/notebook/issues/2593#issuecomment-310545116",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2593",
    "id": 310545116,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDU0NTExNg==",
    "user": {
      "login": "dsblank",
      "id": 168568,
      "node_id": "MDQ6VXNlcjE2ODU2OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/168568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsblank",
      "html_url": "https://github.com/dsblank",
      "followers_url": "https://api.github.com/users/dsblank/followers",
      "following_url": "https://api.github.com/users/dsblank/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsblank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsblank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsblank/subscriptions",
      "organizations_url": "https://api.github.com/users/dsblank/orgs",
      "repos_url": "https://api.github.com/users/dsblank/repos",
      "events_url": "https://api.github.com/users/dsblank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsblank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-23T01:23:57Z",
    "updated_at": "2017-06-23T01:23:57Z",
    "author_association": "MEMBER",
    "body": "What is the update mechanism?\r\n\r\nI know that a sep would be tricky, but it would be very useful. ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/310632171",
    "html_url": "https://github.com/jupyter/notebook/issues/2593#issuecomment-310632171",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2593",
    "id": 310632171,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDYzMjE3MQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-23T10:32:49Z",
    "updated_at": "2017-06-23T10:32:49Z",
    "author_association": "MEMBER",
    "body": "@rgbkrk can probably describe it better, but the idea is that a display call can supply or request a display id, and then later calls to display can replace a previously displayed object by ID. So e.g. a progress bar can re-display itself without clobbering any other output which has been displayed by other bits of code.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/310677983",
    "html_url": "https://github.com/jupyter/notebook/issues/2593#issuecomment-310677983",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2593",
    "id": 310677983,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDY3Nzk4Mw==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-23T14:20:26Z",
    "updated_at": "2017-06-23T14:28:03Z",
    "author_association": "MEMBER",
    "body": "In the notebook (or nteract or jupyterlab) with ipykernel, run:\r\n\r\n```python\r\nimport time\r\ndisplay(\"hey\", display_id=\"here\")\r\ntime.sleep(0.5)\r\ndisplay(\"HEY\", display_id=\"here\", update=True)\r\ntime.sleep(0.5)\r\ndisplay(\"HEY!\", display_id=\"here\", update=True);\r\n```",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/310678212",
    "html_url": "https://github.com/jupyter/notebook/issues/2593#issuecomment-310678212",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2593",
    "id": 310678212,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDY3ODIxMg==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-23T14:21:15Z",
    "updated_at": "2017-06-23T14:21:15Z",
    "author_association": "MEMBER",
    "body": "Display updates only replace a single displayed output whereas `clear_output` clears all the outputs.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/310680058",
    "html_url": "https://github.com/jupyter/notebook/issues/2593#issuecomment-310680058",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2593",
    "id": 310680058,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDY4MDA1OA==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-23T14:27:58Z",
    "updated_at": "2017-06-23T14:27:58Z",
    "author_association": "MEMBER",
    "body": "> Second, it would be nice to add a sep argument (similar to print)so that we can display items on the same line:\r\n\r\nI'd really love a way to display collections of rich objects inline like this: https://github.com/ipython/disp/issues/3\r\n\r\n@carreau kicked off some starter pieces here: https://github.com/ipython/disp/pull/8",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/310683065",
    "html_url": "https://github.com/jupyter/notebook/issues/2593#issuecomment-310683065",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2593",
    "id": 310683065,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDY4MzA2NQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-23T14:38:56Z",
    "updated_at": "2017-06-23T14:38:56Z",
    "author_association": "MEMBER",
    "body": "Yes the `sep` is problematic as we send all the mimetype, I would prefer to teach collections how to display themselves.  it is definitively challenging to display containers, as the way you expect them to be displayed highly depends on the content. A list of string should likely be displayed as a vertical list of items, why small images, you likely want them in a horizontal sequence. So there is not only a separator, but a question of layout. It also shift (some) of the responsibility of mimetype picking in the kernel, unless we introduce json pointers in the spec.\r\n\r\nI'd also like to keep the `display()` API identical between Python 2 and python 3 – at least for a while. \r\n\r\nAlso wondering, is clear output necessary if you can display update with None ?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/317607114",
    "html_url": "https://github.com/jupyter/notebook/issues/2593#issuecomment-317607114",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2593",
    "id": 317607114,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzYwNzExNA==",
    "user": {
      "login": "tritemio",
      "id": 4156237,
      "node_id": "MDQ6VXNlcjQxNTYyMzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4156237?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tritemio",
      "html_url": "https://github.com/tritemio",
      "followers_url": "https://api.github.com/users/tritemio/followers",
      "following_url": "https://api.github.com/users/tritemio/following{/other_user}",
      "gists_url": "https://api.github.com/users/tritemio/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tritemio/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tritemio/subscriptions",
      "organizations_url": "https://api.github.com/users/tritemio/orgs",
      "repos_url": "https://api.github.com/users/tritemio/repos",
      "events_url": "https://api.github.com/users/tritemio/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tritemio/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-25T02:05:14Z",
    "updated_at": "2017-07-25T02:05:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Carreau, maybe bit OT, but it would be really nice to have an option to stack matplotlib figures horizontally instead of vertically. The horizontal scrollbar would allow to see a long list of figures without taking too much vertical space. \r\n\r\nUse case: oftentimes I generate figures (>100) in a loop, displaying one figure at time, closing the figure and moving to the next iteration. So, I am already using `display(fig)`. But, adding an option to stack these figures horizontally would really make the navigation much easier.\r\n\r\nIs this been discussed somewhere? Can you point me to some open issue I can follow? Thanks.",
    "performed_via_github_app": null
  }
]
