[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/557228196",
    "html_url": "https://github.com/jupyter/notebook/pull/5068#issuecomment-557228196",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5068",
    "id": 557228196,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzIyODE5Ng==",
    "user": {
      "login": "bolkedebruin",
      "id": 4282712,
      "node_id": "MDQ6VXNlcjQyODI3MTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4282712?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bolkedebruin",
      "html_url": "https://github.com/bolkedebruin",
      "followers_url": "https://api.github.com/users/bolkedebruin/followers",
      "following_url": "https://api.github.com/users/bolkedebruin/following{/other_user}",
      "gists_url": "https://api.github.com/users/bolkedebruin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bolkedebruin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bolkedebruin/subscriptions",
      "organizations_url": "https://api.github.com/users/bolkedebruin/orgs",
      "repos_url": "https://api.github.com/users/bolkedebruin/repos",
      "events_url": "https://api.github.com/users/bolkedebruin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bolkedebruin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-21T19:07:32Z",
    "updated_at": "2019-11-21T19:07:32Z",
    "author_association": "NONE",
    "body": "This is related to https://github.com/jupyterlab/jupyterlab/issues/7539\r\n\r\ncc @takluyver ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/557918776",
    "html_url": "https://github.com/jupyter/notebook/pull/5068#issuecomment-557918776",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5068",
    "id": 557918776,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzkxODc3Ng==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-24T19:17:03Z",
    "updated_at": "2019-11-24T19:17:03Z",
    "author_association": "MEMBER",
    "body": "I'm reluctant to look at this in detail, because browser security stuff always gives me a headache. But in general, I dislike adding options as a response when things are broken: it allows the person who does it to make the problem go away for them, but it's not obvious for anyone else experiencing similar symptoms, and it's another variable that interacts with all the other options that are already there. Every boolean option effectively doubles the parameter space, so more bugs lurk in the corners.\r\n\r\nThis goes double when the option is in any way related to security. It's all too easy for someone to google the problem they see, find an answer on Stackoverflow, copy, paste, and turn off some security setting they didn't read the docs about. Even when we do read the docs, we're all prone to thinking \"yeah, security, but I need this to work, and it will probably be fine\".\r\n\r\nSo. Are you really confident that relaxing the security feature like this cannot weaken security at all? If so, and it really does fix the bug, we should make the change for all users. If it could weaken security, endeavour to find another way to fix the bug, so people don't have to choose between the bug and the security.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/557921665",
    "html_url": "https://github.com/jupyter/notebook/pull/5068#issuecomment-557921665",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5068",
    "id": 557921665,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzkyMTY2NQ==",
    "user": {
      "login": "bolkedebruin",
      "id": 4282712,
      "node_id": "MDQ6VXNlcjQyODI3MTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4282712?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bolkedebruin",
      "html_url": "https://github.com/bolkedebruin",
      "followers_url": "https://api.github.com/users/bolkedebruin/followers",
      "following_url": "https://api.github.com/users/bolkedebruin/following{/other_user}",
      "gists_url": "https://api.github.com/users/bolkedebruin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bolkedebruin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bolkedebruin/subscriptions",
      "organizations_url": "https://api.github.com/users/bolkedebruin/orgs",
      "repos_url": "https://api.github.com/users/bolkedebruin/repos",
      "events_url": "https://api.github.com/users/bolkedebruin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bolkedebruin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-24T19:52:14Z",
    "updated_at": "2019-11-24T19:56:36Z",
    "author_association": "NONE",
    "body": "@takluyver I understand your concern. In my opinion jupyter is mixing security settings that are not properly applied together. \r\n\r\n1. User needs to be authenticated to access the resource\r\n2. Every request is given a \"sandbox\" cross-site-protection header which drops the \"referrer\" header from the browser. \r\n3. As part of XSSI protection the referrer is checked for an allowed origin\r\n\r\nObviously 2 and 3 are mutually exclusive, while I think 1 gives sufficient protection for GET/HEAD.\r\n\r\nThe original commit that added this states that:\r\n\r\n> - /files/ downloads must come from a local page (no direct visits or external links)\r\n> - same for /api/ requests\r\n> - disabling xsrf checks\r\n\r\nThe use case I described satisfies the case (user opens a html file with embedded images from his own folder), but it doesn't pass. \r\n\r\nThe fact that the user needs to be authenticated and no state change should happen on a GET/HEAD (per RFC2616) request the cross site scripting *inclusion* protection (xssi) is over zealous and maybe even misplaced in my opinion. \r\n\r\nAs I might not have entirely understood the purpose or need of the original commit I made this a configurable option. This keeps the sandboxing in place for every request and keeps browser security high, but allows the inclusion of for example images. A more complex solution could be to only add the sandbox header once (on a href) instead of everywhere. This would keep the referrer header in place and you could keep the xssi protection. However, I think the risk you are mitigating is low with the xssi protection for authenticated requests and doing the sandboxing finegrained is tough.\r\n\r\nIf you are still hesitant maybe you want @minrk to chime in as he is the original author of the commit that enabled this?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/558359206",
    "html_url": "https://github.com/jupyter/notebook/pull/5068#issuecomment-558359206",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5068",
    "id": 558359206,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1ODM1OTIwNg==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-25T22:00:22Z",
    "updated_at": "2019-11-25T22:00:22Z",
    "author_association": "MEMBER",
    "body": "It does indeed look like we don't have quite the right settings. \r\n\r\nWhat we have:\r\n\r\n- `CSP: sandbox` to prevent files served from `/files/` from having access to any part of the API, important to meet the requirement that *viewing* a file doesn't allow execution\r\n- XSRF token and origin check (If not given, fallback to Referer check for GET/HEAD on /files/) to prevent XSRF, XSS, XSSI\r\n- `CSP: sandbox` results in some browsers (Chrome, Firefox, but not Safari) not sending a Referer header for links visited from files served at `/files/`\r\n\r\nI don't think exposing the XSSI check as an option is the best fix, because it both explicitly enables an XSSI issue for those who do opt out and leaves all default users with the same unfixed issue. Rather than that, maybe there is another check we can use, such that relative links in `/files/` URLs still work, but access outside `/files/` does not. Unfortunately, the only idea I have right now is removing the `CSP: sandbox` setting and then *adding* Referer checks for the `/files/ -> /anythingelse` requests. That seems significantly less robust. Is there a way for links originating from `/files/` to be distinguishable from XSSI requests with `rel=\"no-referrer\"`?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/559160211",
    "html_url": "https://github.com/jupyter/notebook/pull/5068#issuecomment-559160211",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5068",
    "id": 559160211,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTE2MDIxMQ==",
    "user": {
      "login": "bolkedebruin",
      "id": 4282712,
      "node_id": "MDQ6VXNlcjQyODI3MTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4282712?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bolkedebruin",
      "html_url": "https://github.com/bolkedebruin",
      "followers_url": "https://api.github.com/users/bolkedebruin/followers",
      "following_url": "https://api.github.com/users/bolkedebruin/following{/other_user}",
      "gists_url": "https://api.github.com/users/bolkedebruin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bolkedebruin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bolkedebruin/subscriptions",
      "organizations_url": "https://api.github.com/users/bolkedebruin/orgs",
      "repos_url": "https://api.github.com/users/bolkedebruin/repos",
      "events_url": "https://api.github.com/users/bolkedebruin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bolkedebruin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-27T16:29:53Z",
    "updated_at": "2019-11-27T16:29:53Z",
    "author_association": "NONE",
    "body": "@minrk Can you explain what you think the extend of the issue is with non XSSI protection. As far as I can see a user needs to be authenticated to access a resource. This stops any XSSI in its tracks. Ie. If google would index my site, visitors would not be able to read any of its files or include them in other pages as they would be not authenticated. \r\n\r\nAt the moment it seems that the XSSI protection does not really protect anything. You hardly run the risk of bandwidth leakage by having authenticated users accessing your resources.\r\n\r\nOr is there a location that is not protected by authentication? Am I missing anything?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/559942792",
    "html_url": "https://github.com/jupyter/notebook/pull/5068#issuecomment-559942792",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5068",
    "id": 559942792,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1OTk0Mjc5Mg==",
    "user": {
      "login": "bolkedebruin",
      "id": 4282712,
      "node_id": "MDQ6VXNlcjQyODI3MTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4282712?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bolkedebruin",
      "html_url": "https://github.com/bolkedebruin",
      "followers_url": "https://api.github.com/users/bolkedebruin/followers",
      "following_url": "https://api.github.com/users/bolkedebruin/following{/other_user}",
      "gists_url": "https://api.github.com/users/bolkedebruin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bolkedebruin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bolkedebruin/subscriptions",
      "organizations_url": "https://api.github.com/users/bolkedebruin/orgs",
      "repos_url": "https://api.github.com/users/bolkedebruin/repos",
      "events_url": "https://api.github.com/users/bolkedebruin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bolkedebruin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-30T10:24:06Z",
    "updated_at": "2019-11-30T10:24:06Z",
    "author_association": "NONE",
    "body": "Ping @minrk",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/561195028",
    "html_url": "https://github.com/jupyter/notebook/pull/5068#issuecomment-561195028",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5068",
    "id": 561195028,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2MTE5NTAyOA==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-03T14:35:51Z",
    "updated_at": "2019-12-03T14:35:51Z",
    "author_association": "MEMBER",
    "body": "> As far as I can see a user needs to be authenticated to access a resource. This stops any XSSI in its tracks. \r\n\r\nRequiring auth doesn't have any effect on XSSI because cookies are sent with XSSI requests. XSSI allows a malicious site to include script content on a page when visited by a user who is authenticated, using that user's credentials in the browser to retrieve the content. That's the \"cross-site\" part - it's a site-to-site attack using credentials stored in the browser to leak info. `nosniff` helps stop this for most file types in most browsers, but only limits the scope of what can leak.\r\n\r\nIf we could use samesite cookies, this would help a lot, and was what I wanted to use first, but unfortunately when we tried them we hit some snags that I don't fully recall, that may have had to do with browser support, iframes, and the fact that Python doesn't support setting the samesite attr before 3.8.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/564164724",
    "html_url": "https://github.com/jupyter/notebook/pull/5068#issuecomment-564164724",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5068",
    "id": 564164724,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU2NDE2NDcyNA==",
    "user": {
      "login": "bolkedebruin",
      "id": 4282712,
      "node_id": "MDQ6VXNlcjQyODI3MTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4282712?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bolkedebruin",
      "html_url": "https://github.com/bolkedebruin",
      "followers_url": "https://api.github.com/users/bolkedebruin/followers",
      "following_url": "https://api.github.com/users/bolkedebruin/following{/other_user}",
      "gists_url": "https://api.github.com/users/bolkedebruin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bolkedebruin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bolkedebruin/subscriptions",
      "organizations_url": "https://api.github.com/users/bolkedebruin/orgs",
      "repos_url": "https://api.github.com/users/bolkedebruin/repos",
      "events_url": "https://api.github.com/users/bolkedebruin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bolkedebruin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-12-10T18:19:18Z",
    "updated_at": "2019-12-10T18:19:18Z",
    "author_association": "NONE",
    "body": "@minrk Gotcha. I have the feeling we are caught between a rock and a hard place. At the moment we have to disable XSRF checks to get the normal use case to work. It would be acceptable to us  to have XSSI protection relaxed as we do not run that risk (confined environment). Disabling XRSF is another story.\r\n\r\nWould it be an idea to have samesite cookies configurable which then would disable this check? Or is there another option?\r\n\r\n",
    "performed_via_github_app": null
  }
]
