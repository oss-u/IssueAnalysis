[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/168499470",
    "html_url": "https://github.com/jupyter/notebook/issues/916#issuecomment-168499470",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/916",
    "id": 168499470,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODQ5OTQ3MA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-03T13:36:22Z",
    "updated_at": "2016-01-03T13:36:22Z",
    "author_association": "MEMBER",
    "body": "the post_save_hook is any import string or callable, which mean that in your `notebook_config.py` you can import and instantiate the ScriptExporter yourself, as well as pass a config object (for custom templates) yourself: \n\n```\nfrom nbconvert.exporters.script import ScriptExporter\nfrom traitlets.config import Config\nc = Config()\nScriptExporter(config=c)\n...\n```\n\nThe `post_save_hook` is not passed any config instance, though it is passed `contents_manager=self` so you should be able to use `c.FileContentsManager.(Script)Exporter.template_file = 'custom.tpl'` (`Script` beeing optional) in `jupyter_notebook_config.py` (note the extra `FileContentsManager.(Script)Exporter` nesting. But we should check that.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/168513883",
    "html_url": "https://github.com/jupyter/notebook/issues/916#issuecomment-168513883",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/916",
    "id": 168513883,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODUxMzg4Mw==",
    "user": {
      "login": "michaelaye",
      "id": 69774,
      "node_id": "MDQ6VXNlcjY5Nzc0",
      "avatar_url": "https://avatars.githubusercontent.com/u/69774?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/michaelaye",
      "html_url": "https://github.com/michaelaye",
      "followers_url": "https://api.github.com/users/michaelaye/followers",
      "following_url": "https://api.github.com/users/michaelaye/following{/other_user}",
      "gists_url": "https://api.github.com/users/michaelaye/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/michaelaye/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/michaelaye/subscriptions",
      "organizations_url": "https://api.github.com/users/michaelaye/orgs",
      "repos_url": "https://api.github.com/users/michaelaye/repos",
      "events_url": "https://api.github.com/users/michaelaye/events{/privacy}",
      "received_events_url": "https://api.github.com/users/michaelaye/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-03T16:15:57Z",
    "updated_at": "2016-01-03T16:15:57Z",
    "author_association": "NONE",
    "body": "Could someone confirm/comment if point 1. made above is a safe way to implement the post_save_hook?\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/168519278",
    "html_url": "https://github.com/jupyter/notebook/issues/916#issuecomment-168519278",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/916",
    "id": 168519278,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODUxOTI3OA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-03T17:17:28Z",
    "updated_at": "2016-01-03T17:17:28Z",
    "author_association": "MEMBER",
    "body": "No it's not safe, the `_post_save_script` has a leading underscore it's hence private. \nAnd some of the code around that should likely warn using a `DeprecationWarning` so will likely be removed in future version.\n\nThough I don't see any reason for this to be dangerous. \n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/168525136",
    "html_url": "https://github.com/jupyter/notebook/issues/916#issuecomment-168525136",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/916",
    "id": 168525136,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODUyNTEzNg==",
    "user": {
      "login": "khaeru",
      "id": 1634164,
      "node_id": "MDQ6VXNlcjE2MzQxNjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1634164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/khaeru",
      "html_url": "https://github.com/khaeru",
      "followers_url": "https://api.github.com/users/khaeru/followers",
      "following_url": "https://api.github.com/users/khaeru/following{/other_user}",
      "gists_url": "https://api.github.com/users/khaeru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/khaeru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/khaeru/subscriptions",
      "organizations_url": "https://api.github.com/users/khaeru/orgs",
      "repos_url": "https://api.github.com/users/khaeru/repos",
      "events_url": "https://api.github.com/users/khaeru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/khaeru/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-03T18:10:52Z",
    "updated_at": "2016-01-03T18:10:52Z",
    "author_association": "NONE",
    "body": "@Carreau â€” the suggestion doesn't seem to work.\n\nMy knowledge of traitlets is about zero, but I continued the clumsy hacking I mentioned in my original point 3. With the following in `jupyter_notebook_config.py`:\n\n``` python\nimport io\nimport os\n\nfrom nbconvert.exporters import TemplateExporter\nfrom notebook.utils import to_api_path\n\nfrom traitlets import Dict\nfrom traitlets.config import Config\nfrom traitlets.utils.importstring import import_item\n\n\n# From nbconvert/exporters/script.py\nclass ScriptExporter(TemplateExporter):\n\n    _exporters = Dict()\n\n    def _template_file_default(self):\n        return 'script'\n\n    def from_notebook_node(self, nb, resources=None, **kw):\n        langinfo = nb.metadata.get('language_info', {})\n\n        # delegate to custom exporter, if specified\n        exporter_name = langinfo.get('nbconvert_exporter')\n        if exporter_name and exporter_name != 'script':\n            self.log.debug(\"Loading script exporter: %s\", exporter_name)\n            from nbconvert.exporters.export import exporter_map\n            if exporter_name not in self._exporters:\n                if exporter_name in exporter_map:\n                    Exporter = exporter_map[exporter_name]\n                else:\n                    self.log.debug(\"Importing custom Exporter: %s\",\n                                   exporter_name)\n                    Exporter = import_item(exporter_name)\n                self.log.debug(\"ScriptExporter.template_file: %s\",\n                               self.template_file)\n                c = Config()\n                # @khaeru: the following works!\n                # c.PythonExporter.template_file = 'custom.tpl' # **********\n                self._exporters[exporter_name] = Exporter(parent=self,\n                                                          config=c)\n            exporter = self._exporters[exporter_name]\n            self.log.debug(\"ScriptExporter._exporters['%s'].template_file: %s\",\n                           exporter_name, exporter.template_file)\n            return exporter.from_notebook_node(nb, resources, **kw)\n\n        self.file_extension = langinfo.get('file_extension', '.txt')\n        self.output_mimetype = langinfo.get('mimetype', 'text/plain')\n        return super(ScriptExporter, self).from_notebook_node(nb, resources,\n                                                              **kw)\n\n\n# From notebook/services/contents/filemanager.py\n_script_exporter = None\n\n\ndef post_save_script(model, os_path, contents_manager, **kwargs):\n    \"\"\"convert notebooks to Python script after save with nbconvert\n    replaces `ipython notebook --script`\n    \"\"\"\n\n    if model['type'] != 'notebook':\n        return\n\n    global _script_exporter\n    if _script_exporter is None:\n        c = Config()\n        # @khaeru: none of these work\n        c.template_file = 'custom.tpl'\n        c.Exporter.template_file = 'custom.tpl'\n        c.TemplateExporter.template_file = 'custom.tpl'\n        c.ScriptExporter.template_file = 'custom.tpl'\n        c.PythonExporter.template_file = 'custom.tpl'\n        c.FileContentsManager.Exporter.template_file = 'custom.tpl'\n        c.FileContentsManager.TemplateExporter.template_file = 'custom.tpl'\n        c.FileContentsManager.ScriptExporter.template_file = 'custom.tpl'\n        c.FileContentsManager.PythonExporter.template_file = 'custom.tpl'\n        # @khaeru: since ScriptExporter gives 'parent=self' when instantiating\n        #          PythonExporter, tried these. They also don't work:\n        c.ScriptExporter.PythonExporter.template_file = 'custom.tpl'\n        c.FileContentsManager.ScriptExporter.PythonExporter.template_file = \\\n            'custom.tpl'\n        _script_exporter = ScriptExporter(config=c, parent=contents_manager)\n    log = contents_manager.log\n\n    base, ext = os.path.splitext(os_path)\n    script, resources = _script_exporter.from_filename(os_path)\n    script_fname = base + resources.get('output_extension', '.txt')\n    log.info(\"Saving script /%s\", to_api_path(script_fname,\n                                              contents_manager.root_dir))\n    with io.open(script_fname, 'w', encoding='utf-8') as f:\n        f.write(script)\n\n# @khaeru: also don't work\nc.Exporter.template_file = 'custom.tpl'\nc.TemplateExporter.template_file = 'custom.tpl'\nc.ScriptExporter.template_file = 'custom.tpl'\nc.PythonExporter.template_file = 'custom.tpl'\nc.FileContentsManager.Exporter.template_file = 'custom.tpl'\nc.FileContentsManager.TemplateExporter.template_file = 'custom.tpl'\nc.FileContentsManager.ScriptExporter.template_file = 'custom.tpl'\nc.FileContentsManager.PythonExporter.template_file = 'custom.tpl'\nc.ScriptExporter.PythonExporter.template_file = 'custom.tpl'\nc.FileContentsManager.ScriptExporter.PythonExporter.template_file = \\\n    'custom.tpl'\n\nc.FileContentsManager.post_save_hook = post_save_script\n```\n\nThen running `jupyter notebook --debug` and creating and checkpointing a new notebook to trigger the save hook:\n\n```\n[I 12:58:00.237 NotebookApp] Saving file at /Untitled.ipynb\n[D 12:58:00.237 NotebookApp] Saving /home/khaeru/Untitled.ipynb\n[D 12:58:00.304 NotebookApp] Running post-save hook on /home/khaeru/Untitled.ipynb\n[D 12:58:00.317 NotebookApp] Loading script exporter: python\n[D 12:58:00.317 NotebookApp] ScriptExporter.template_file: custom.tpl\n[D 12:58:00.322 NotebookApp] ScriptExporter._exporters['python'].template_file: python\n[D 12:58:00.322 NotebookApp] Applying preprocessor: coalesce_streams\n[D 12:58:00.323 NotebookApp] Attempting to load template python.tpl\n[D 12:58:00.330 NotebookApp] Loaded template python.tpl\n[D 12:58:00.331 NotebookApp] Attempting to load template python.tpl\n[D 12:58:00.331 NotebookApp] Loaded template python.tpl\n[I 12:58:00.430 NotebookApp] Saving script /Untitled.py\n```\n\nBut if I uncomment the line with `**********`:\n\n```\n[I 13:07:02.806 NotebookApp] Saving file at /Untitled.ipynb\n[D 13:07:02.806 NotebookApp] Saving /home/khaeru/Untitled.ipynb\n[D 13:07:02.830 NotebookApp] Running post-save hook on /home/khaeru/Untitled.ipynb\n[D 13:07:02.842 NotebookApp] Loading script exporter: python\n[D 13:07:02.842 NotebookApp] ScriptExporter.template_file: custom.tpl\n[D 13:07:02.846 NotebookApp] ScriptExporter._exporters['python'].template_file: custom.tpl\n[D 13:07:02.848 NotebookApp] Applying preprocessor: coalesce_streams\n[D 13:07:02.848 NotebookApp] Attempting to load template custom.tpl.tpl\n[D 13:07:02.853 NotebookApp] Attempting to load template custom.tpl\n[D 13:07:02.854 NotebookApp] Loaded template custom.tpl\n[D 13:07:02.854 NotebookApp] Attempting to load template custom.tpl.tpl\n[D 13:07:02.854 NotebookApp] Attempting to load template custom.tpl\n[D 13:07:02.854 NotebookApp] Loaded template custom.tpl\n[I 13:07:02.855 NotebookApp] Saving script /Untitled.py\n```\n\nI believe this indicates that PythonExporter is not receiving the configuration options, but I still don't know how to make it work (short of having those 100+ lines of code in my config file).\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/168527730",
    "html_url": "https://github.com/jupyter/notebook/issues/916#issuecomment-168527730",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/916",
    "id": 168527730,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODUyNzczMA==",
    "user": {
      "login": "khaeru",
      "id": 1634164,
      "node_id": "MDQ6VXNlcjE2MzQxNjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1634164?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/khaeru",
      "html_url": "https://github.com/khaeru",
      "followers_url": "https://api.github.com/users/khaeru/followers",
      "following_url": "https://api.github.com/users/khaeru/following{/other_user}",
      "gists_url": "https://api.github.com/users/khaeru/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/khaeru/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/khaeru/subscriptions",
      "organizations_url": "https://api.github.com/users/khaeru/orgs",
      "repos_url": "https://api.github.com/users/khaeru/repos",
      "events_url": "https://api.github.com/users/khaeru/events{/privacy}",
      "received_events_url": "https://api.github.com/users/khaeru/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-03T18:39:27Z",
    "updated_at": "2016-01-03T18:39:27Z",
    "author_association": "NONE",
    "body": "As a temporary workaround, for anyone who's curious: at the line marked `**********` above, I put:\n\n``` python\n                from jupyter_core.paths import jupyter_config_dir\n                c.PythonExporter.template_path = [\n                    os.path.join(jupyter_config_dir(), 'templates')] + \\\n                    self.template_path  # i.e., of ScriptExporter, usually '.'\n```\n\nThen in my `$JUPYTER_CONFIG_DIR/templates/python.tpl` the following, modified from the [stock `python.tpl`](https://github.com/jupyter/nbconvert/blob/master/nbconvert/templates/python.tpl):\n\n```\n{%- extends 'null.tpl' -%}\n\n{% block header %}\n# coding: utf-8\n{% endblock header %}\n\n{% block in_prompt %}\n# Cell:\n{% endblock in_prompt %}\n\n{% block input %}\n{{ cell.source | ipython2python }}\n{% endblock input %}\n\n{% block markdowncell scoped %}\n{{ cell.source | comment_lines }}\n{% endblock markdowncell %}\n```\n\nThis is helpful to me because I tend to keep the exported `.py` under version control, and this way if only the prompt numbers change, the file does not change.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/297577886",
    "html_url": "https://github.com/jupyter/notebook/issues/916#issuecomment-297577886",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/916",
    "id": 297577886,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzU3Nzg4Ng==",
    "user": {
      "login": "JamiesHQ",
      "id": 476301,
      "node_id": "MDQ6VXNlcjQ3NjMwMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/476301?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JamiesHQ",
      "html_url": "https://github.com/JamiesHQ",
      "followers_url": "https://api.github.com/users/JamiesHQ/followers",
      "following_url": "https://api.github.com/users/JamiesHQ/following{/other_user}",
      "gists_url": "https://api.github.com/users/JamiesHQ/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JamiesHQ/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JamiesHQ/subscriptions",
      "organizations_url": "https://api.github.com/users/JamiesHQ/orgs",
      "repos_url": "https://api.github.com/users/JamiesHQ/repos",
      "events_url": "https://api.github.com/users/JamiesHQ/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JamiesHQ/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-27T00:27:40Z",
    "updated_at": "2017-04-27T00:27:40Z",
    "author_association": "MEMBER",
    "body": "@Carreau & @minrk : can this issue be closed based on other work that has been completed? ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/297979118",
    "html_url": "https://github.com/jupyter/notebook/issues/916#issuecomment-297979118",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/916",
    "id": 297979118,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5Nzk3OTExOA==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-28T11:54:56Z",
    "updated_at": "2017-04-28T11:54:56Z",
    "author_association": "MEMBER",
    "body": "I think we can still take some of what's discussed here and expand the examples we have in the documentation.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/375430896",
    "html_url": "https://github.com/jupyter/notebook/issues/916#issuecomment-375430896",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/916",
    "id": 375430896,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NTQzMDg5Ng==",
    "user": {
      "login": "urbandw",
      "id": 4440540,
      "node_id": "MDQ6VXNlcjQ0NDA1NDA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4440540?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/urbandw",
      "html_url": "https://github.com/urbandw",
      "followers_url": "https://api.github.com/users/urbandw/followers",
      "following_url": "https://api.github.com/users/urbandw/following{/other_user}",
      "gists_url": "https://api.github.com/users/urbandw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/urbandw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/urbandw/subscriptions",
      "organizations_url": "https://api.github.com/users/urbandw/orgs",
      "repos_url": "https://api.github.com/users/urbandw/repos",
      "events_url": "https://api.github.com/users/urbandw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/urbandw/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-22T19:34:01Z",
    "updated_at": "2018-03-22T19:34:01Z",
    "author_association": "NONE",
    "body": "The bigger issue here is that there seems to be no way for a user-set value of `include_input_prompt` to make its way to https://github.com/jupyter/nbconvert/blob/e59f4ceaf6e67931f178498dc8a0d91bad7571bc/nbconvert/templates/python.tpl#L9. \r\n\r\nI've tried instantiating an exporter with `_exporter = ScriptExporter(config=c)` where `c = {\"ScriptExporter\": {\"include_input_prompt\": False}}`, and also passing a `resources` dictionary to `_exporter.from_filename(resources=resources)`, or `_exporter.from_notebook_node(resources=resources)` where `resources.global_content_filter.include_input_prompt == True`. None of the above works. \r\n\r\nI would guess that the overriding of user inputs with default settings is a bigger problem than just `include_input_prompt`. Are there any other options?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/537005568",
    "html_url": "https://github.com/jupyter/notebook/issues/916#issuecomment-537005568",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/916",
    "id": 537005568,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNzAwNTU2OA==",
    "user": {
      "login": "bashtage",
      "id": 5585221,
      "node_id": "MDQ6VXNlcjU1ODUyMjE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5585221?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bashtage",
      "html_url": "https://github.com/bashtage",
      "followers_url": "https://api.github.com/users/bashtage/followers",
      "following_url": "https://api.github.com/users/bashtage/following{/other_user}",
      "gists_url": "https://api.github.com/users/bashtage/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bashtage/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bashtage/subscriptions",
      "organizations_url": "https://api.github.com/users/bashtage/orgs",
      "repos_url": "https://api.github.com/users/bashtage/repos",
      "events_url": "https://api.github.com/users/bashtage/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bashtage/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-01T12:07:13Z",
    "updated_at": "2019-10-01T12:07:13Z",
    "author_association": "NONE",
    "body": "@urbandw  you can set these values using:\r\n\r\n```\r\n_exporter = ScriptExporter()\r\n_exporter.exclude_input_prompt = True # Opposite since excluded\r\n```\r\n",
    "performed_via_github_app": null
  }
]
