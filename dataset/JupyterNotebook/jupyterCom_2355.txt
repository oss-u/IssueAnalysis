[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/290878136",
    "html_url": "https://github.com/jupyter/notebook/issues/2355#issuecomment-290878136",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2355",
    "id": 290878136,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDg3ODEzNg==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-01T00:25:44Z",
    "updated_at": "2017-04-01T00:25:44Z",
    "author_association": "MEMBER",
    "body": "[`code` is the Interpreter base class from Python](https://docs.python.org/3.5/library/code.html) which seems like an import collision. I can't reproduce this locally with the notebook or `ipython`, so I'm not sure how to make this happen.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/290882455",
    "html_url": "https://github.com/jupyter/notebook/issues/2355#issuecomment-290882455",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2355",
    "id": 290882455,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDg4MjQ1NQ==",
    "user": {
      "login": "patrickbreen",
      "id": 5498234,
      "node_id": "MDQ6VXNlcjU0OTgyMzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5498234?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/patrickbreen",
      "html_url": "https://github.com/patrickbreen",
      "followers_url": "https://api.github.com/users/patrickbreen/followers",
      "following_url": "https://api.github.com/users/patrickbreen/following{/other_user}",
      "gists_url": "https://api.github.com/users/patrickbreen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/patrickbreen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/patrickbreen/subscriptions",
      "organizations_url": "https://api.github.com/users/patrickbreen/orgs",
      "repos_url": "https://api.github.com/users/patrickbreen/repos",
      "events_url": "https://api.github.com/users/patrickbreen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/patrickbreen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-01T01:10:32Z",
    "updated_at": "2017-04-01T01:10:32Z",
    "author_association": "NONE",
    "body": "Ok I figured it out. The problem was that somewhere in the sequence of imports there was an `import pdb` (from the stdlib) which in turn imported:\r\n\r\nimport os\r\nimport re\r\nimport sys\r\nimport cmd\r\nimport bdb\r\nimport dis\r\nimport code\r\nimport glob\r\nimport pprint\r\nimport signal\r\nimport inspect\r\nimport traceback\r\nimport linecache\r\n\r\nAnd obviously based on the python module lookup system its going to look for `code.py` in `.` before looking in your site packages. So yes I was able to reproduce the same problem if I had `code.py`, `cmd.py`, `dis.py` etc in my working directory.\r\n\r\nThe moral of the story is: dont name any module in your code the same as a module in the standard lib. A hard thing to do in python with so many standard lib modules.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/290882474",
    "html_url": "https://github.com/jupyter/notebook/issues/2355#issuecomment-290882474",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2355",
    "id": 290882474,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDg4MjQ3NA==",
    "user": {
      "login": "patrickbreen",
      "id": 5498234,
      "node_id": "MDQ6VXNlcjU0OTgyMzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5498234?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/patrickbreen",
      "html_url": "https://github.com/patrickbreen",
      "followers_url": "https://api.github.com/users/patrickbreen/followers",
      "following_url": "https://api.github.com/users/patrickbreen/following{/other_user}",
      "gists_url": "https://api.github.com/users/patrickbreen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/patrickbreen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/patrickbreen/subscriptions",
      "organizations_url": "https://api.github.com/users/patrickbreen/orgs",
      "repos_url": "https://api.github.com/users/patrickbreen/repos",
      "events_url": "https://api.github.com/users/patrickbreen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/patrickbreen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-01T01:10:44Z",
    "updated_at": "2017-04-01T01:10:44Z",
    "author_association": "NONE",
    "body": "The issue is closed.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/290939530",
    "html_url": "https://github.com/jupyter/notebook/issues/2355#issuecomment-290939530",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2355",
    "id": 290939530,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDkzOTUzMA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-01T18:49:17Z",
    "updated_at": "2017-04-01T18:49:17Z",
    "author_association": "MEMBER",
    "body": "Yeah, this is a longstanding annoyance. It's not obvious what module names to avoid. FWIW, in ipykernel  4.6 we've made a change that should allow your kernel to start in these situations.",
    "performed_via_github_app": null
  }
]
