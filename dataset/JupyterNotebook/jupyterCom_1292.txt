[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/204510239",
    "html_url": "https://github.com/jupyter/notebook/issues/1292#issuecomment-204510239",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1292",
    "id": 204510239,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNDUxMDIzOQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-01T18:41:35Z",
    "updated_at": "2016-04-01T18:41:35Z",
    "author_association": "MEMBER",
    "body": "> Is there a better way to create those boxes?\n\nHum, not as far as I am aware, we would have to have some king of markdown `role` like in sphinx/rst.\nHope the common mark folks  come up with a syntax for this soon !\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/204765729",
    "html_url": "https://github.com/jupyter/notebook/issues/1292#issuecomment-204765729",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1292",
    "id": 204765729,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNDc2NTcyOQ==",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-02T17:56:46Z",
    "updated_at": "2016-04-02T17:56:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "As a workaround you could use a python object which implements `_repr_html_` and `_repr_latex_`:\n\n```\nclass Alert():\n    def __init__(self, text):\n        self.text = text\n    def _repr_html_():\n        return '<div class=\"...\">text</div>'\n    def _repr_latex_():\n        return '...'\n```\n\nThis would return both html and latex and would therefore be visible in both. But now you need to remove the cell itself (not sure how that works...)\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/206924325",
    "html_url": "https://github.com/jupyter/notebook/issues/1292#issuecomment-206924325",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1292",
    "id": 206924325,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNjkyNDMyNQ==",
    "user": {
      "login": "mgeier",
      "id": 705404,
      "node_id": "MDQ6VXNlcjcwNTQwNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/705404?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mgeier",
      "html_url": "https://github.com/mgeier",
      "followers_url": "https://api.github.com/users/mgeier/followers",
      "following_url": "https://api.github.com/users/mgeier/following{/other_user}",
      "gists_url": "https://api.github.com/users/mgeier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mgeier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mgeier/subscriptions",
      "organizations_url": "https://api.github.com/users/mgeier/orgs",
      "repos_url": "https://api.github.com/users/mgeier/repos",
      "events_url": "https://api.github.com/users/mgeier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mgeier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-07T14:11:11Z",
    "updated_at": "2016-04-07T14:11:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Carreau Thanks, it's good to know that I didn't overlook anything.\n@janschulz Thanks, but no thanks. I'm looking for a proper solution, not for a work-around.\n\n@Carreau wrote:\n\n> Hope the common mark folks come up with a syntax for this soon !\n\nI don't think this will happen anytime soon. This was discussed over and over for years, but nothing was added to CommonMark. A few proposals are have been collected in the [CommonMark Wiki](https://github.com/jgm/CommonMark/wiki/Proposed-Extensions) under \"Directives\".\n\nWhat about implementing one of them in The Notebook as a Markdown extension?\n\nCould someone please point me to the code where Markdown cells are parsed?\nProbably there is already an extension available for whatever JavaScript library is used for that?\n\nHere are a few more links:\n- admonition support for Python-Markdown: https://pythonhosted.org/Markdown/extensions/admonition.html\n- proposed admonition support in pandoc: https://github.com/jgm/pandoc/issues/2610\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/206991677",
    "html_url": "https://github.com/jupyter/notebook/issues/1292#issuecomment-206991677",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1292",
    "id": 206991677,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNjk5MTY3Nw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-07T16:55:20Z",
    "updated_at": "2016-04-07T16:55:20Z",
    "author_association": "MEMBER",
    "body": "> What about implementing one of them in The Notebook as a Markdown extension?\n\nWell, I doubt we have enough bandwidth to implement our own markdown parser/renderer, in js and then in nbconvert, and then in all the other software that support the notebook format. \n\n> Could someone please point me to the code where Markdown cells are parsed?\n\n`notebook/static/notebook/js/textcell.js` `MarkdownCell.prototype.render` ~ Line 370\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/206993279",
    "html_url": "https://github.com/jupyter/notebook/issues/1292#issuecomment-206993279",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1292",
    "id": 206993279,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNjk5MzI3OQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-07T16:58:00Z",
    "updated_at": "2016-04-07T16:58:00Z",
    "author_association": "MEMBER",
    "body": "Additionally, if everyone gives up on the standard and does their own versions, we end up in the same kind of mess that led to the creation of CommonMark in the first place. So I think we should say no to ad-hoc extensions, and encourage people who don't like that to go and improve CommonMark.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/207022329",
    "html_url": "https://github.com/jupyter/notebook/issues/1292#issuecomment-207022329",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1292",
    "id": 207022329,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNzAyMjMyOQ==",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-07T17:45:11Z",
    "updated_at": "2016-04-07T17:46:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just putting in a few good words for a pandoc based notebook/nbconvert: pandoc because that's used on the R side with knitr/RMarkdown and because it is (next to github) the kind of \"extended standard\". knitr/RMarkdown currently (and more so in the future if e.g. better tables are added to pandoc or the above admonition support) have an advantage on the things they can express vs what can be expressed in the notebook md cells. nbconvert can probably easily switch to pandoc, but the browser would need a md2html webservice (e.g. using pypandoc). Whether it would be worth it?  The tables feature might be a great addition, as it would mean that more richly styled html tables could be translated into pdfs. \n\n@mgeier If you don't need interactivity, just html and latex/PDF support (and after pandoc gets everything you want), you could try to write admonitions into md cells (or raw cells?), ignore the error in the notebook and then convert the ipymd file to md using nbconvert and then the md file to whatever pandoc supports via pandoc.Or use python-markdown now, if that has a commandline util which works like pandoc.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/207396384",
    "html_url": "https://github.com/jupyter/notebook/issues/1292#issuecomment-207396384",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1292",
    "id": 207396384,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNzM5NjM4NA==",
    "user": {
      "login": "mgeier",
      "id": 705404,
      "node_id": "MDQ6VXNlcjcwNTQwNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/705404?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mgeier",
      "html_url": "https://github.com/mgeier",
      "followers_url": "https://api.github.com/users/mgeier/followers",
      "following_url": "https://api.github.com/users/mgeier/following{/other_user}",
      "gists_url": "https://api.github.com/users/mgeier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mgeier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mgeier/subscriptions",
      "organizations_url": "https://api.github.com/users/mgeier/orgs",
      "repos_url": "https://api.github.com/users/mgeier/repos",
      "events_url": "https://api.github.com/users/mgeier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mgeier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-08T11:45:39Z",
    "updated_at": "2016-04-08T11:45:39Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Carreau \n\nI'm not talking about implementing a Markdown parser (or several of them), I'm talking about an extension (or several of them).\n\nThanks for the pointer, here's [a link](https://github.com/jupyter/notebook/blob/cf1e849fc6c294c19c86236d475808227bb7cb1d/notebook/static/notebook/js/textcell.js#L365).\nApparently, there is already some pre-processing being done before [marked](https://github.com/chjj/marked) is used for the actual conversion.\n\nIn the next few days (or weeks) I'll have a closer look how my proposed extension could be added there.\n\n@takluyver \n\nThe goal of CommonMark, as far as I understand, is to have an unambiguous spec for the most \"common\" Markdown features. CommonMark allows, probably even encourages, extensions.\n\nThere are many [proposed extensions (same link as I gave above)](https://github.com/jgm/CommonMark/wiki/Proposed-Extensions), most of them will never be part of CommonMark.\nIn the discussions linked from the wiki page, the CommonMark authors even encourage people to create extensions.\nAnd since extensions like the one i'm suggesting have been discussed for years and not been added to CommonMark, leads me to predict that it ain't gonna happen.\n\nFun fact 1: [marked (and therefore The Notebook) doesn't use CommonMark](https://github.com/chjj/marked/issues/563)\nFun fact 2: The Notebook already uses at least 2 extensions (probably more): inline math with `$...$` and raw LaTeX blocks that are interpreted as math.\n(Just for future reference, the former might be built-in to marked sometime in the future (https://github.com/chjj/marked/pull/180))\n\nI don't see a fundamental problem in adding another extension, if it keeps people from using HTML-exclusive work-arounds.\n\nAnd sure, other tools will have to implement those extensions, too, but that's what happens already, see e.g. https://github.com/spatialaudio/nbsphinx/pull/35.\n\n@janschulz \n\nPandoc is circumstantial to this discussion, it's just another parser.\n\nAnd I don't want to ignore errors in The Notebook. I want this to work correctly in The Notebook and also in all related tools I care about.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/207536368",
    "html_url": "https://github.com/jupyter/notebook/issues/1292#issuecomment-207536368",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1292",
    "id": 207536368,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwNzUzNjM2OA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-08T17:53:42Z",
    "updated_at": "2016-04-08T17:53:42Z",
    "author_association": "MEMBER",
    "body": "I'm fine with extensions once there is a generic extensible syntax (see [this discussion](http://talk.commonmark.org/t/generic-directives-plugins-syntax/444)). What I want to avoid is doing ad-hoc extensions where someone picks some symbols and decides to make them mean a special thing, without regard for compatibility or conflicts.\n\nI know we already make some extensions to the markdown the notebook supports. That does not mean it's OK to add more. Those extensions cause enough headaches, but so many notebooks already rely on them that we can't practically get rid of them.\n\nI'm deliberately being hard on this, because I want to see a generic extension point in CommonMark, and that's not going to happen if we carry on doing ad-hoc extensions.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/211813066",
    "html_url": "https://github.com/jupyter/notebook/issues/1292#issuecomment-211813066",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1292",
    "id": 211813066,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTgxMzA2Ng==",
    "user": {
      "login": "mgeier",
      "id": 705404,
      "node_id": "MDQ6VXNlcjcwNTQwNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/705404?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mgeier",
      "html_url": "https://github.com/mgeier",
      "followers_url": "https://api.github.com/users/mgeier/followers",
      "following_url": "https://api.github.com/users/mgeier/following{/other_user}",
      "gists_url": "https://api.github.com/users/mgeier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mgeier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mgeier/subscriptions",
      "organizations_url": "https://api.github.com/users/mgeier/orgs",
      "repos_url": "https://api.github.com/users/mgeier/repos",
      "events_url": "https://api.github.com/users/mgeier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mgeier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-19T09:02:28Z",
    "updated_at": "2016-04-19T09:02:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "@takluyver Thanks for the pointers. I've read a large part of the discussions (and there's _a lot_ to read!), and it doesn't look like this extensible syntax is happening anytime soon. Development seems to go quite slowly currently, and the \"base\" syntax seems to have highest priority, since version 1.0 of the spec is already overdue.\n\n> I know we already make some extensions [...] we can't practically get rid of them.\n\nAnd you shouldn't!\nThose extensions are great, and the syntax is really simple and easy to use.\nAnd being able to write equations in a straightforward way is one of the most important features of the Jupyter Notebook!\n\nAnyway, I think the first step forward is to get rid of marked and switch to CommonMark. I've created a new issue about that: #1371.\n\nOnce this is done, I think we can continue discussing extensions.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/214670325",
    "html_url": "https://github.com/jupyter/notebook/issues/1292#issuecomment-214670325",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1292",
    "id": 214670325,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNDY3MDMyNQ==",
    "user": {
      "login": "kmuehlbauer",
      "id": 5821660,
      "node_id": "MDQ6VXNlcjU4MjE2NjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5821660?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kmuehlbauer",
      "html_url": "https://github.com/kmuehlbauer",
      "followers_url": "https://api.github.com/users/kmuehlbauer/followers",
      "following_url": "https://api.github.com/users/kmuehlbauer/following{/other_user}",
      "gists_url": "https://api.github.com/users/kmuehlbauer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kmuehlbauer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kmuehlbauer/subscriptions",
      "organizations_url": "https://api.github.com/users/kmuehlbauer/orgs",
      "repos_url": "https://api.github.com/users/kmuehlbauer/repos",
      "events_url": "https://api.github.com/users/kmuehlbauer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kmuehlbauer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-26T08:44:00Z",
    "updated_at": "2016-04-26T08:44:00Z",
    "author_association": "NONE",
    "body": "We recently changed our documentation workflow to integrate jupyter notebooks within our reST-documents. The reasons for that, we wanted to only document once. The notebooks can be utilized by the user and it is synced within the rendered docs (eg. using sphinx).  The transition process went really smooth and we are happy to gain this much from using jupyter notebooks within our project.\n\nHowever, these things can't be accomplished so far: \n- admonitions\n- citations\n\nFor admonitions I proposed some workaround for the 'nbsphinx' package (which we are using to convert the notebooks) spatialaudio/nbsphinx#46, which has it's faults, but works. Also in this issue here, several workarounds and hacks have been proposed, neither of which is really favourable. \n\nFrom the users perspective things should just work. If there weren't the inline math available within the notebooks, this would have been a showstopper. And using `<div>` sections to get alert-boxes is (to some degree) annoying, too. \n\nI understand, that the cleanest solution is to wait for the changes in the standard. But please also consider an interim extension which takes care of this until the changes are incorporated in the standard. Otherwise and this is already under-way, hacks, workarounds, incompatibilities will float around (just my 2c).\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/219213482",
    "html_url": "https://github.com/jupyter/notebook/issues/1292#issuecomment-219213482",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1292",
    "id": 219213482,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTIxMzQ4Mg==",
    "user": {
      "login": "mgeier",
      "id": 705404,
      "node_id": "MDQ6VXNlcjcwNTQwNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/705404?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mgeier",
      "html_url": "https://github.com/mgeier",
      "followers_url": "https://api.github.com/users/mgeier/followers",
      "following_url": "https://api.github.com/users/mgeier/following{/other_user}",
      "gists_url": "https://api.github.com/users/mgeier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mgeier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mgeier/subscriptions",
      "organizations_url": "https://api.github.com/users/mgeier/orgs",
      "repos_url": "https://api.github.com/users/mgeier/repos",
      "events_url": "https://api.github.com/users/mgeier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mgeier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-14T10:41:53Z",
    "updated_at": "2016-05-14T10:41:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "For those who are interested: Since a _proper_ solution will take a long time to come, I've implemented a temporary work-around in `nbsphinx` that converts `<div>` blocks with bootstrap `warning` and `info` classes to Sphinx boxes: http://nbsphinx.readthedocs.io/en/latest/markdown-cells.html#Info/Warning-Boxes\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/297648859",
    "html_url": "https://github.com/jupyter/notebook/issues/1292#issuecomment-297648859",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1292",
    "id": 297648859,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzY0ODg1OQ==",
    "user": {
      "login": "mgeier",
      "id": 705404,
      "node_id": "MDQ6VXNlcjcwNTQwNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/705404?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mgeier",
      "html_url": "https://github.com/mgeier",
      "followers_url": "https://api.github.com/users/mgeier/followers",
      "following_url": "https://api.github.com/users/mgeier/following{/other_user}",
      "gists_url": "https://api.github.com/users/mgeier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mgeier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mgeier/subscriptions",
      "organizations_url": "https://api.github.com/users/mgeier/orgs",
      "repos_url": "https://api.github.com/users/mgeier/repos",
      "events_url": "https://api.github.com/users/mgeier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mgeier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-27T08:30:52Z",
    "updated_at": "2017-04-27T08:30:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "@JamiesHQ Why did you close this?\r\nIs there a solution available?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/297780403",
    "html_url": "https://github.com/jupyter/notebook/issues/1292#issuecomment-297780403",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1292",
    "id": 297780403,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5Nzc4MDQwMw==",
    "user": {
      "login": "JamiesHQ",
      "id": 476301,
      "node_id": "MDQ6VXNlcjQ3NjMwMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/476301?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JamiesHQ",
      "html_url": "https://github.com/JamiesHQ",
      "followers_url": "https://api.github.com/users/JamiesHQ/followers",
      "following_url": "https://api.github.com/users/JamiesHQ/following{/other_user}",
      "gists_url": "https://api.github.com/users/JamiesHQ/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JamiesHQ/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JamiesHQ/subscriptions",
      "organizations_url": "https://api.github.com/users/JamiesHQ/orgs",
      "repos_url": "https://api.github.com/users/JamiesHQ/repos",
      "events_url": "https://api.github.com/users/JamiesHQ/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JamiesHQ/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-27T17:15:15Z",
    "updated_at": "2017-04-27T17:15:15Z",
    "author_association": "MEMBER",
    "body": "@gnestor & @mpacer : what are the next steps on this issue? Thanks!",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/297806297",
    "html_url": "https://github.com/jupyter/notebook/issues/1292#issuecomment-297806297",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1292",
    "id": 297806297,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzgwNjI5Nw==",
    "user": {
      "login": "gnestor",
      "id": 512354,
      "node_id": "MDQ6VXNlcjUxMjM1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/512354?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnestor",
      "html_url": "https://github.com/gnestor",
      "followers_url": "https://api.github.com/users/gnestor/followers",
      "following_url": "https://api.github.com/users/gnestor/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnestor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnestor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnestor/subscriptions",
      "organizations_url": "https://api.github.com/users/gnestor/orgs",
      "repos_url": "https://api.github.com/users/gnestor/repos",
      "events_url": "https://api.github.com/users/gnestor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnestor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-27T18:53:01Z",
    "updated_at": "2017-04-27T18:53:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "There is no plan to implement something like this. However, I have seen several issues related to extending our markdown renderer, so I think the best thing to do is create an issue for implementing a general markdown extension interface so that we can start to act on things like this: https://github.com/jupyter/notebook/issues/2450",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/477152896",
    "html_url": "https://github.com/jupyter/notebook/issues/1292#issuecomment-477152896",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1292",
    "id": 477152896,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NzE1Mjg5Ng==",
    "user": {
      "login": "stevengj",
      "id": 2913679,
      "node_id": "MDQ6VXNlcjI5MTM2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2913679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stevengj",
      "html_url": "https://github.com/stevengj",
      "followers_url": "https://api.github.com/users/stevengj/followers",
      "following_url": "https://api.github.com/users/stevengj/following{/other_user}",
      "gists_url": "https://api.github.com/users/stevengj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stevengj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stevengj/subscriptions",
      "organizations_url": "https://api.github.com/users/stevengj/orgs",
      "repos_url": "https://api.github.com/users/stevengj/repos",
      "events_url": "https://api.github.com/users/stevengj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stevengj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-27T13:26:17Z",
    "updated_at": "2019-03-27T13:26:17Z",
    "author_association": "NONE",
    "body": "Admonitions `!!! foo` are a common extension to Markdown, e.g. [supported by mkdocs](https://squidfunk.github.io/mkdocs-material/extensions/admonition/), in pandoc via an extension (https://github.com/jgm/pandoc/issues/2610), and in flexmark via an [extension](https://github.com/vsch/flexmark-java/wiki/Admonition-Extension).   Julia's [markdown docstrings](https://docs.julialang.org/en/v1/stdlib/Markdown/index.html) commonly use them for warnings etcetera.  Would be nice to have them in notebooks, but I understand that this is more of an upstream issue for you guys.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/570198532",
    "html_url": "https://github.com/jupyter/notebook/issues/1292#issuecomment-570198532",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1292",
    "id": 570198532,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3MDE5ODUzMg==",
    "user": {
      "login": "choldgraf",
      "id": 1839645,
      "node_id": "MDQ6VXNlcjE4Mzk2NDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1839645?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/choldgraf",
      "html_url": "https://github.com/choldgraf",
      "followers_url": "https://api.github.com/users/choldgraf/followers",
      "following_url": "https://api.github.com/users/choldgraf/following{/other_user}",
      "gists_url": "https://api.github.com/users/choldgraf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/choldgraf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/choldgraf/subscriptions",
      "organizations_url": "https://api.github.com/users/choldgraf/orgs",
      "repos_url": "https://api.github.com/users/choldgraf/repos",
      "events_url": "https://api.github.com/users/choldgraf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/choldgraf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-02T12:51:04Z",
    "updated_at": "2020-01-02T12:51:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "Another thought here - perhaps rather than adopting (or defining) a new markdown syntax for \"admonition\" blocks, we could use the cell-level metadata for this.\r\n\r\n*Cell tags* could be a way to tag markdown cells with the metadata needed for a renderer to know what \"kind\" of markdown cell it is. For example, Jupyter Book [uses a \"hide_input\" tag to control whether cells are hidden](https://jupyterbook.org/features/hiding.html). One could similarly imagine a \"warning\" or \"information\" tag with cells.\r\n\r\nA UI for adding / removing tags from cells is now natively in both the Classic notebook UI, as well as JupyterLab (I am not sure about this for Nteract?).\r\n\r\nI think the main thing we'd need in this case is not a new syntax in Markdown, but for Jupyter to formally recommend this as a valid approach, and potentially to define a subset of tags that are recognized as the \"official\" name for a particular thing (e.g. \"warning\" vs. \"warn\", etc). In the future, you could imagine front-ends using these tags to render some cells differently from others.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/570357055",
    "html_url": "https://github.com/jupyter/notebook/issues/1292#issuecomment-570357055",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1292",
    "id": 570357055,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3MDM1NzA1NQ==",
    "user": {
      "login": "zommuter",
      "id": 3686260,
      "node_id": "MDQ6VXNlcjM2ODYyNjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3686260?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zommuter",
      "html_url": "https://github.com/zommuter",
      "followers_url": "https://api.github.com/users/zommuter/followers",
      "following_url": "https://api.github.com/users/zommuter/following{/other_user}",
      "gists_url": "https://api.github.com/users/zommuter/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zommuter/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zommuter/subscriptions",
      "organizations_url": "https://api.github.com/users/zommuter/orgs",
      "repos_url": "https://api.github.com/users/zommuter/repos",
      "events_url": "https://api.github.com/users/zommuter/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zommuter/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-02T21:28:42Z",
    "updated_at": "2020-01-02T21:28:42Z",
    "author_association": "NONE",
    "body": "Nice idea @choldgraf, however what about nested admonitions? The admonition-tag would thus require opening and closing versions I guess",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/570377542",
    "html_url": "https://github.com/jupyter/notebook/issues/1292#issuecomment-570377542",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1292",
    "id": 570377542,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3MDM3NzU0Mg==",
    "user": {
      "login": "choldgraf",
      "id": 1839645,
      "node_id": "MDQ6VXNlcjE4Mzk2NDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1839645?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/choldgraf",
      "html_url": "https://github.com/choldgraf",
      "followers_url": "https://api.github.com/users/choldgraf/followers",
      "following_url": "https://api.github.com/users/choldgraf/following{/other_user}",
      "gists_url": "https://api.github.com/users/choldgraf/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/choldgraf/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/choldgraf/subscriptions",
      "organizations_url": "https://api.github.com/users/choldgraf/orgs",
      "repos_url": "https://api.github.com/users/choldgraf/repos",
      "events_url": "https://api.github.com/users/choldgraf/events{/privacy}",
      "received_events_url": "https://api.github.com/users/choldgraf/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-02T22:24:56Z",
    "updated_at": "2020-01-02T22:24:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "@zommuter yep, that's a good point. I think that out-of-the-box it would be most straightforward to do that without supporting nested admonitions :-/ \r\n\r\nThat said, I feel like if tags were supported for something like this, it doesn't prevent some kind of markup support for this as well (which might be the suggested approach for nested admonitions)",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/570548806",
    "html_url": "https://github.com/jupyter/notebook/issues/1292#issuecomment-570548806",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1292",
    "id": 570548806,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU3MDU0ODgwNg==",
    "user": {
      "login": "mgeier",
      "id": 705404,
      "node_id": "MDQ6VXNlcjcwNTQwNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/705404?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mgeier",
      "html_url": "https://github.com/mgeier",
      "followers_url": "https://api.github.com/users/mgeier/followers",
      "following_url": "https://api.github.com/users/mgeier/following{/other_user}",
      "gists_url": "https://api.github.com/users/mgeier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mgeier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mgeier/subscriptions",
      "organizations_url": "https://api.github.com/users/mgeier/orgs",
      "repos_url": "https://api.github.com/users/mgeier/repos",
      "events_url": "https://api.github.com/users/mgeier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mgeier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-01-03T11:35:23Z",
    "updated_at": "2020-01-03T11:35:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "AFAICT, three possibilities have been suggested:\r\n\r\n1. The `<div class=\"alert alert-info\">` work-around\r\n2. Using cell tags\r\n3. A proper Markdown/CommonMark extension\r\n\r\nIMHO, option (3) would be best, but it might still take a really long time until its time comes.\r\n\r\nOption (1) is not great, but it somewhat works today.\r\n\r\nOption (2) is somewhere in-between. It has fundamental limitations regarding nesting and I'm not sure whether it's worth spending the effort for a feature that's intrinsically flawed (given that a work-around is available and a better solution will be available in the far future).\r\n\r\nI think we should hope for option (3) to come some day, and in the meantime try to improve option (1).\r\n\r\nOption (1) works well in:\r\n\r\n* Classic Notebook (Binder link: https://mybinder.org/v2/gh/spatialaudio/nbsphinx/master?filepath=doc/markdown-cells.ipynb)\r\n* `nbsphinx` (https://nbsphinx.readthedocs.io/en/latest/markdown-cells.html), even with LaTeX (https://readthedocs.org/projects/nbsphinx/downloads/pdf/latest/#section.3)\r\n\r\nIt works well on my local JupyterLab, but for some reason it doesn't seem to work on Binder: https://mybinder.org/v2/gh/spatialaudio/nbsphinx/master?urlpath=lab/tree/doc/markdown-cells.ipynb\r\n\r\nIt also does *not* work very well in:\r\n\r\n* `nbconvert`\r\n\r\n... and I guess by extension in:\r\n\r\n* `nbviewer` (https://nbviewer.jupyter.org/github/spatialaudio/nbsphinx/blob/master/doc/markdown-cells.ipynb)\r\n* Github: https://github.com/spatialaudio/nbsphinx/blob/master/doc/markdown-cells.ipynb\r\n\r\nI think the best short-time investment would be to fix `nbconvert` (and find out what's going wrong in JupyterLab on Binder)!",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/715271928",
    "html_url": "https://github.com/jupyter/notebook/issues/1292#issuecomment-715271928",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1292",
    "id": 715271928,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcxNTI3MTkyOA==",
    "user": {
      "login": "vinipsmaker",
      "id": 865914,
      "node_id": "MDQ6VXNlcjg2NTkxNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/865914?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vinipsmaker",
      "html_url": "https://github.com/vinipsmaker",
      "followers_url": "https://api.github.com/users/vinipsmaker/followers",
      "following_url": "https://api.github.com/users/vinipsmaker/following{/other_user}",
      "gists_url": "https://api.github.com/users/vinipsmaker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vinipsmaker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vinipsmaker/subscriptions",
      "organizations_url": "https://api.github.com/users/vinipsmaker/orgs",
      "repos_url": "https://api.github.com/users/vinipsmaker/repos",
      "events_url": "https://api.github.com/users/vinipsmaker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vinipsmaker/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-23T11:03:07Z",
    "updated_at": "2020-10-23T11:03:07Z",
    "author_association": "NONE",
    "body": "Why not just add  support for asciidoc at once? They are as concise as markdown, but translate semantics directly to docbook, so they had admonition blocks you ask for since forever. Markdown is a kind of a email-thing, not a proper solution to full-blown documentation.",
    "performed_via_github_app": null
  }
]
