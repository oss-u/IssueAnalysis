[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/293025891",
    "html_url": "https://github.com/jupyter/notebook/issues/2389#issuecomment-293025891",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2389",
    "id": 293025891,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzAyNTg5MQ==",
    "user": {
      "login": "gnestor",
      "id": 512354,
      "node_id": "MDQ6VXNlcjUxMjM1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/512354?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnestor",
      "html_url": "https://github.com/gnestor",
      "followers_url": "https://api.github.com/users/gnestor/followers",
      "following_url": "https://api.github.com/users/gnestor/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnestor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnestor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnestor/subscriptions",
      "organizations_url": "https://api.github.com/users/gnestor/orgs",
      "repos_url": "https://api.github.com/users/gnestor/repos",
      "events_url": "https://api.github.com/users/gnestor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnestor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-10T17:47:52Z",
    "updated_at": "2017-04-10T17:47:52Z",
    "author_association": "CONTRIBUTOR",
    "body": "So the issue is that double-clicking an uneditable markdown cell renders it as markdown but doesn't allow the user to render it back as HTML? If so, that doesn't sound right. I would expect to be able to _execute_ it back to HTML. However, I would expect the textarea to have a readonly attribute so that users cannot edit the content.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/293028006",
    "html_url": "https://github.com/jupyter/notebook/issues/2389#issuecomment-293028006",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2389",
    "id": 293028006,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzAyODAwNg==",
    "user": {
      "login": "gnestor",
      "id": 512354,
      "node_id": "MDQ6VXNlcjUxMjM1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/512354?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnestor",
      "html_url": "https://github.com/gnestor",
      "followers_url": "https://api.github.com/users/gnestor/followers",
      "following_url": "https://api.github.com/users/gnestor/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnestor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnestor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnestor/subscriptions",
      "organizations_url": "https://api.github.com/users/gnestor/orgs",
      "repos_url": "https://api.github.com/users/gnestor/repos",
      "events_url": "https://api.github.com/users/gnestor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnestor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-10T17:55:24Z",
    "updated_at": "2017-04-10T17:55:24Z",
    "author_association": "CONTRIBUTOR",
    "body": "I just tested myself and it appears to work as _I would expect_:\r\n\r\n![](http://g.recordit.co/a5lvxENWST.gif)",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/293269683",
    "html_url": "https://github.com/jupyter/notebook/issues/2389#issuecomment-293269683",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2389",
    "id": 293269683,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzI2OTY4Mw==",
    "user": {
      "login": "lexnederbragt",
      "id": 1122351,
      "node_id": "MDQ6VXNlcjExMjIzNTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1122351?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lexnederbragt",
      "html_url": "https://github.com/lexnederbragt",
      "followers_url": "https://api.github.com/users/lexnederbragt/followers",
      "following_url": "https://api.github.com/users/lexnederbragt/following{/other_user}",
      "gists_url": "https://api.github.com/users/lexnederbragt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lexnederbragt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lexnederbragt/subscriptions",
      "organizations_url": "https://api.github.com/users/lexnederbragt/orgs",
      "repos_url": "https://api.github.com/users/lexnederbragt/repos",
      "events_url": "https://api.github.com/users/lexnederbragt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lexnederbragt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-11T13:51:41Z",
    "updated_at": "2017-04-11T13:51:58Z",
    "author_association": "NONE",
    "body": "Yes, that describes my experience. If that is the expected/desired behaviour, then my issue is that I'd like the possibility to prevent markdown cells with metadata 'editable:false' to be rendered as markdown. Maybe a setting 'htmlonly:true'? Could be useful for any type of cell?\r\n\r\nMy usecase is when I want to have students learning programming work from a notebook mixing text and both executable and unexecutable code, with cells they can do assignments in/try out things in. Especially real beginners get confused when they accidentally click in a rendered markdown cell and see it go back to pure markdown.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/293275623",
    "html_url": "https://github.com/jupyter/notebook/issues/2389#issuecomment-293275623",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2389",
    "id": 293275623,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MzI3NTYyMw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-11T14:11:12Z",
    "updated_at": "2017-04-11T14:11:12Z",
    "author_association": "MEMBER",
    "body": "Tricky one. I think I would also expect that non-editable markdown cells are fixed in the rendered view, but I can also see that the unrendered view is useful if you want to copy the raw markdown source. Maybe we should provide a different way to show the source in that case that's less easy to trigger accidentally.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/377616947",
    "html_url": "https://github.com/jupyter/notebook/issues/2389#issuecomment-377616947",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2389",
    "id": 377616947,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NzYxNjk0Nw==",
    "user": {
      "login": "grovduck",
      "id": 1706997,
      "node_id": "MDQ6VXNlcjE3MDY5OTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1706997?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/grovduck",
      "html_url": "https://github.com/grovduck",
      "followers_url": "https://api.github.com/users/grovduck/followers",
      "following_url": "https://api.github.com/users/grovduck/following{/other_user}",
      "gists_url": "https://api.github.com/users/grovduck/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/grovduck/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/grovduck/subscriptions",
      "organizations_url": "https://api.github.com/users/grovduck/orgs",
      "repos_url": "https://api.github.com/users/grovduck/repos",
      "events_url": "https://api.github.com/users/grovduck/events{/privacy}",
      "received_events_url": "https://api.github.com/users/grovduck/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-30T20:35:27Z",
    "updated_at": "2018-03-30T20:35:27Z",
    "author_association": "NONE",
    "body": "This doesn't address the issue within Jupyter notebook itself, but I'd thought I'd add that the `freeze` extension within `jupyter_contrib_nbextensions` works really well for this ([link](https://github.com/ipython-contrib/jupyter_contrib_nbextensions/tree/master/src/jupyter_contrib_nbextensions/nbextensions/freeze)).  My use case sounds very similar to that of @lexnederbragt.  Specifically, it adds these metadata fields to frozen markdown cells:\r\n\r\n```\r\n   \"cell_type\": \"markdown\",\r\n   \"metadata\": {\r\n    \"deletable\": false,\r\n    \"editable\": false,\r\n    \"run_control\": {\r\n     \"frozen\": true\r\n    }\r\n   },\r\n```\r\nMaybe not necessary to address if it's handled within an extension?\r\n\r\n",
    "performed_via_github_app": null
  }
]
