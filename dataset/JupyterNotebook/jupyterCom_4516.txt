[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/476918537",
    "html_url": "https://github.com/jupyter/notebook/issues/4516#issuecomment-476918537",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4516",
    "id": 476918537,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjkxODUzNw==",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-27T01:03:35Z",
    "updated_at": "2019-03-27T01:03:45Z",
    "author_association": "MEMBER",
    "body": "@gutow, good to hear from you!\r\n\r\nI'd suggest looking into writing a jlab plugin to provide such an editor for JupyterLab. I'll try to dig up some links to good places to start in the next day or two (please ping me if I haven't replied...)",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/476918776",
    "html_url": "https://github.com/jupyter/notebook/issues/4516#issuecomment-476918776",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4516",
    "id": 476918776,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjkxODc3Ng==",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-27T01:04:39Z",
    "updated_at": "2019-03-27T01:04:39Z",
    "author_association": "MEMBER",
    "body": "(but please note that the input format really is markdown, not html like Sage - so it would need to be something like ProseMirror that writes out markdown)",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/477148432",
    "html_url": "https://github.com/jupyter/notebook/issues/4516#issuecomment-477148432",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4516",
    "id": 477148432,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NzE0ODQzMg==",
    "user": {
      "login": "gutow",
      "id": 1231317,
      "node_id": "MDQ6VXNlcjEyMzEzMTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1231317?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gutow",
      "html_url": "https://github.com/gutow",
      "followers_url": "https://api.github.com/users/gutow/followers",
      "following_url": "https://api.github.com/users/gutow/following{/other_user}",
      "gists_url": "https://api.github.com/users/gutow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gutow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gutow/subscriptions",
      "organizations_url": "https://api.github.com/users/gutow/orgs",
      "repos_url": "https://api.github.com/users/gutow/repos",
      "events_url": "https://api.github.com/users/gutow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gutow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-27T13:16:11Z",
    "updated_at": "2019-03-27T13:16:11Z",
    "author_association": "NONE",
    "body": "@jasongrout Hi!\r\n\r\nBased on my understanding of the Jupyterlab architecture, I think this would work best inline in the notebook. My understanding is that Jupyterlab embeds the notebook by wrapping it in extensions.\r\nI am also unclear about your comment that the \"real format\" is markdown. Ultimately to be displayed in the browser based notebook html is generated. I am suggesting a new kind of input cell that has a WYSIWYG html editor. Upon being run the editor is hidden and the html is displayed. From examining the DOM I believe that is essentially what the markdown cells do, but the server has to translate the markdown into html. I am suggesting a case where the server would not have to do any translation, just recording.\r\n\r\nI am not sure how much time I have for this. How hard would it be to get a SOC intern?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/500877910",
    "html_url": "https://github.com/jupyter/notebook/issues/4516#issuecomment-500877910",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4516",
    "id": 500877910,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMDg3NzkxMA==",
    "user": {
      "login": "gutow",
      "id": 1231317,
      "node_id": "MDQ6VXNlcjEyMzEzMTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1231317?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gutow",
      "html_url": "https://github.com/gutow",
      "followers_url": "https://api.github.com/users/gutow/followers",
      "following_url": "https://api.github.com/users/gutow/following{/other_user}",
      "gists_url": "https://api.github.com/users/gutow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gutow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gutow/subscriptions",
      "organizations_url": "https://api.github.com/users/gutow/orgs",
      "repos_url": "https://api.github.com/users/gutow/repos",
      "events_url": "https://api.github.com/users/gutow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gutow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-11T14:52:21Z",
    "updated_at": "2019-06-11T14:52:21Z",
    "author_association": "NONE",
    "body": "Have started working on this, but am having trouble with getting the WYSIWYG editor registered properly on a DOM element. I can do proof of method in a notebook, but then the keyboard manager slurps up a lot of the input. Trying to duplicate the cell type code for textcells I am having trouble getting the WYIWYG editor recognized in the JS code, does this have to do with the order things are loaded?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/501120648",
    "html_url": "https://github.com/jupyter/notebook/issues/4516#issuecomment-501120648",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4516",
    "id": 501120648,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTEyMDY0OA==",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-12T04:57:43Z",
    "updated_at": "2019-06-12T04:57:43Z",
    "author_association": "MEMBER",
    "body": "> I am also unclear about your comment that the \"real format\" is markdown.\r\n\r\nThe Jupyter notebook cells are in markdown format. That is how they are stored and interpreted. Lucky for you, though, you can use html in markdown.\r\n\r\n\r\n\r\n> I can do proof of method in a notebook, but then the keyboard manager slurps up a lot of the input.\r\n\r\nAgain, I would suggest using JupyterLab, which is designed to extend with new components. My guess is that embedding a different wysiwyg editor in Jupyter notebook will not be as natural.\r\n\r\nIf you want to try doing this in JupyterLab, I'd suggest opening an issue in the JupyterLab repo for help.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/501398708",
    "html_url": "https://github.com/jupyter/notebook/issues/4516#issuecomment-501398708",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4516",
    "id": 501398708,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMTM5ODcwOA==",
    "user": {
      "login": "gutow",
      "id": 1231317,
      "node_id": "MDQ6VXNlcjEyMzEzMTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1231317?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gutow",
      "html_url": "https://github.com/gutow",
      "followers_url": "https://api.github.com/users/gutow/followers",
      "following_url": "https://api.github.com/users/gutow/following{/other_user}",
      "gists_url": "https://api.github.com/users/gutow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gutow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gutow/subscriptions",
      "organizations_url": "https://api.github.com/users/gutow/orgs",
      "repos_url": "https://api.github.com/users/gutow/repos",
      "events_url": "https://api.github.com/users/gutow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gutow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-12T18:27:51Z",
    "updated_at": "2019-06-12T18:27:51Z",
    "author_association": "NONE",
    "body": "I have looked a little at JupyterLab. I think the basic ideas are good, but it also looks as if it is getting pretty heavy as far as JS that is running, even compared to the notebook. As my first use case is on systems running on lower powered ARM processors and GPUs, I would like to keep the JS load down as low as possible. JupyterLab also appears to be in more flux than I will have time to keep up with after the summer is over. That is why I think doing this at the notebook level is better for me.  I am discovering that the notebook is not quite as modular as it could be. I would like to see a more modular version of the notebook ultimately be embedded in JupyterLab, where the cell type defines the editor and no editor actions are handled or processed at the notebook level. At this point, my understanding of the JupyterLab architecture is that is layers on top of the notebook. Am I misunderstanding how JupyterLab functions?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/516663083",
    "html_url": "https://github.com/jupyter/notebook/issues/4516#issuecomment-516663083",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4516",
    "id": 516663083,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjY2MzA4Mw==",
    "user": {
      "login": "gutow",
      "id": 1231317,
      "node_id": "MDQ6VXNlcjEyMzEzMTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1231317?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gutow",
      "html_url": "https://github.com/gutow",
      "followers_url": "https://api.github.com/users/gutow/followers",
      "following_url": "https://api.github.com/users/gutow/following{/other_user}",
      "gists_url": "https://api.github.com/users/gutow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gutow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gutow/subscriptions",
      "organizations_url": "https://api.github.com/users/gutow/orgs",
      "repos_url": "https://api.github.com/users/gutow/repos",
      "events_url": "https://api.github.com/users/gutow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gutow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-31T02:02:16Z",
    "updated_at": "2019-07-31T02:07:05Z",
    "author_association": "NONE",
    "body": "My son (a likely future computer science major) and I have made considerable progress. As of today we have a working prototype using the [Quill WYSIWYG editor](https://quilljs.com). We still have code cleanup, organizing and tweaking the css, adding Quill to the build tool chain, getting the downgrading of the necessary nbformat working, and unit tests to build.\r\n- How far along do we have to be before others would be willing to test?\r\n- We have also answered many of our earlier questions:\r\n  1. The markdown cells work in an equivalent way to what was proposed and done for these WYSIWYG cells. The markdown is interpreted directly to html in javascript. All that is stored on the server is a json representation of the markdown.\r\n  1. The notebook json format is admirably agnostic about the code/text in a cell. So it works well to store the \"delta\" format that Quill uses. However, the format validation is not so forgiving. Adding this new cell type required adding to the nbformat definitions, essentially creating a v5 notebook format.\r\n\r\nSorry about the closing and reopening below. I have an overly sensitive touch pad badly located on the netbook I am typing this on.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/516685668",
    "html_url": "https://github.com/jupyter/notebook/issues/4516#issuecomment-516685668",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4516",
    "id": 516685668,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjY4NTY2OA==",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-31T04:02:41Z",
    "updated_at": "2019-07-31T04:02:41Z",
    "author_association": "MEMBER",
    "body": "> As my first use case is on systems running on lower powered ARM processors and GPUs\r\n\r\nI (somewhat) regularly use JupyterLab on Raspberry Pi 3B to teach kids how to program. It works great, if that counts as a \"lower powered ARM processor\".\r\n\r\n\r\n\r\n>  I am discovering that the notebook is not quite as modular as it could be.\r\n\r\nThat is part of the reason for JupyterLab.\r\n\r\n> I would like to see a more modular version of the notebook ultimately be embedded in JupyterLab, where the cell type defines the editor and no editor actions are handled or processed at the notebook level. At this point, my understanding of the JupyterLab architecture is that is layers on top of the notebook. Am I misunderstanding how JupyterLab functions?\r\n\r\nJupyterLab is a completely new javascript application that includes a new rewrite of a notebook. However, the notebook component, and even the cell and output components, are completely standalone and can be used outside of JupyterLab. See the examples at https://github.com/jupyterlab/jupyterlab/tree/master/examples/notebook and https://github.com/jupyterlab/jupyterlab/tree/master/examples/cell, for example. People have used these components to build single notebook-on-a-page interfaces, or even just single cells on a page (like SageCell).",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/516686054",
    "html_url": "https://github.com/jupyter/notebook/issues/4516#issuecomment-516686054",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4516",
    "id": 516686054,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjY4NjA1NA==",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-31T04:05:06Z",
    "updated_at": "2019-07-31T04:05:06Z",
    "author_association": "MEMBER",
    "body": "See https://github.com/jupyterlab/jupyterlab/blob/master/CONTRIBUTING.md#build-and-run-the-stand-alone-examples for how to build those standalone examples.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/516884243",
    "html_url": "https://github.com/jupyter/notebook/issues/4516#issuecomment-516884243",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4516",
    "id": 516884243,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjg4NDI0Mw==",
    "user": {
      "login": "gutow",
      "id": 1231317,
      "node_id": "MDQ6VXNlcjEyMzEzMTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1231317?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gutow",
      "html_url": "https://github.com/gutow",
      "followers_url": "https://api.github.com/users/gutow/followers",
      "following_url": "https://api.github.com/users/gutow/following{/other_user}",
      "gists_url": "https://api.github.com/users/gutow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gutow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gutow/subscriptions",
      "organizations_url": "https://api.github.com/users/gutow/orgs",
      "repos_url": "https://api.github.com/users/gutow/repos",
      "events_url": "https://api.github.com/users/gutow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gutow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-31T14:52:53Z",
    "updated_at": "2019-07-31T14:52:53Z",
    "author_association": "NONE",
    "body": "Jason (@jasongrout),\r\n\r\nNow that we have something working in the old notebook, I am considering how to port to JupyterLab as I do like the basic idea. Because I am new to ts-script I will need some real direction as to where things are buried in the code and the actual structure of the working server <-> notebook communications. Below are some of my initial questions:\r\n\r\n1. At this point, from reading the setup.py, it still appears that JupyterLab pulls in and uses the old Jupyter notebook (backend maybe?). Am I misreading that or is that just a bit of legacy code that has not been pulled out?\r\n1. The notebook json validation in the old notebook had to be updated to make the new cell type save without complaining. Does JupyterLab use the same validation tools? From a quick scan of the code it was not obvious to me how this is handled. Can you point me to where notebook json validation occurs?\r\n1. Another issue that needs clarification for my 1st use case is the status of gui widgets that pass data back and forth to the kernel. The code I use for communicating with Pi A-to-D boards presently depends on ipywidgets for user setting of parameters. It appears from the developer docs that these are not yet well supported. Is that true?\r\n1. Another isssue is that the code appears to be significantly heavier browser js code than the old notebook. Because my use case requires running both the back end and the browser on the same Raspberry Pi, I do have issues with the total load on the system. Clearly I will have to try the A-to-D code with JupyterLab to see.\r\n\r\nThanks for any additional direction you can provide.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/516903628",
    "html_url": "https://github.com/jupyter/notebook/issues/4516#issuecomment-516903628",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4516",
    "id": 516903628,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjkwMzYyOA==",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-31T15:38:15Z",
    "updated_at": "2019-07-31T15:38:15Z",
    "author_association": "MEMBER",
    "body": ">     1. At this point, from reading the setup.py, it still appears that JupyterLab pulls in and uses the old Jupyter notebook (backend maybe?). Am I misreading that or is that just a bit of legacy code that has not been pulled out?\r\n\r\nIt only uses the Jupyter notebook tornado server, not the frontend code.\r\n\r\n\r\n\r\n>     2\\. The notebook json validation in the old notebook had to be updated to make the new cell type save without complaining. Does JupyterLab use the same validation tools? From a quick scan of the code it was not obvious to me how this is handled. Can you point me to where notebook json validation occurs?\r\n\r\nDid you change python or js code?\r\n\r\n\r\n\r\n>     3\\. Another issue that needs clarification for my 1st use case is the status of gui widgets that pass data back and forth to the kernel. The code I use for communicating with Pi A-to-D boards presently depends on ipywidgets for user setting of parameters. It appears from the developer docs that these are not yet well supported. Is that true?\r\n\r\nipywidgets is fully supported in JupyterLab 1.0\r\n\r\n\r\n\r\n>     4\\. Another isssue is that the code appears to be significantly heavier browser js code than the old notebook. Because my use case requires running both the back end and the browser on the same Raspberry Pi, I do have issues with the total load on the system. Clearly I will have to try the A-to-D code with JupyterLab to see.\r\n\r\nWhen I mentioned using jlab on a Raspberry Pi, I meant I was running both the server and browser on the pi (hooked up to a screen - completely standalone). I thought it worked rather well.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/516918119",
    "html_url": "https://github.com/jupyter/notebook/issues/4516#issuecomment-516918119",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4516",
    "id": 516918119,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjkxODExOQ==",
    "user": {
      "login": "gutow",
      "id": 1231317,
      "node_id": "MDQ6VXNlcjEyMzEzMTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1231317?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gutow",
      "html_url": "https://github.com/gutow",
      "followers_url": "https://api.github.com/users/gutow/followers",
      "following_url": "https://api.github.com/users/gutow/following{/other_user}",
      "gists_url": "https://api.github.com/users/gutow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gutow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gutow/subscriptions",
      "organizations_url": "https://api.github.com/users/gutow/orgs",
      "repos_url": "https://api.github.com/users/gutow/repos",
      "events_url": "https://api.github.com/users/gutow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gutow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-31T16:14:15Z",
    "updated_at": "2019-07-31T16:14:15Z",
    "author_association": "NONE",
    "body": "Jason (@jasongrout), \r\nThanks for the clarifications. That sounds really good. I will have to set up JupyterLab and see what happens.\r\n\r\nWe had to change python and json validation code in jupyter/nbformat to add an additional cell type, plus some of the hard coded version information in the notebook file handling python. The updated validation checks that the format is appropriate for the WYSIWYG rich text editor we chose, but could be made less restrictive. Otherwise I think we touched only javascript, css (less) and some template files. A major issue was that the old notebook is not cell editor agnostic. We had to write some code to deal with specific calls to codemirror from the notebook. Is codemirror tied to the JupyterLab notebook as tightly?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/516918908",
    "html_url": "https://github.com/jupyter/notebook/issues/4516#issuecomment-516918908",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4516",
    "id": 516918908,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNjkxODkwOA==",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-07-31T16:16:30Z",
    "updated_at": "2019-07-31T16:16:30Z",
    "author_association": "MEMBER",
    "body": "> We had to change python and json validation code in jupyter/nbformat to add an additional cell type, plus some of the hard coded version information in the notebook file handling python.\r\n\r\nThe server-side changes would still be needed, since we are using exactly the same server backend.\r\n\r\n\r\n\r\n> A major issue was that the old notebook is not cell editor agnostic. We had to write some code to deal with specific calls to codemirror from the notebook. Is codemirror tied to the JupyterLab notebook as tightly?\r\n\r\nJupyterLab has the concept of an abstract \"editor\", and provides a default codemirror editor as an implementation. You can implement a different editor that implements the same interface and it should work well.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/517498830",
    "html_url": "https://github.com/jupyter/notebook/issues/4516#issuecomment-517498830",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4516",
    "id": 517498830,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUxNzQ5ODgzMA==",
    "user": {
      "login": "gutow",
      "id": 1231317,
      "node_id": "MDQ6VXNlcjEyMzEzMTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1231317?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gutow",
      "html_url": "https://github.com/gutow",
      "followers_url": "https://api.github.com/users/gutow/followers",
      "following_url": "https://api.github.com/users/gutow/following{/other_user}",
      "gists_url": "https://api.github.com/users/gutow/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gutow/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gutow/subscriptions",
      "organizations_url": "https://api.github.com/users/gutow/orgs",
      "repos_url": "https://api.github.com/users/gutow/repos",
      "events_url": "https://api.github.com/users/gutow/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gutow/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-02T00:01:45Z",
    "updated_at": "2019-08-02T00:01:45Z",
    "author_association": "NONE",
    "body": "Video of what we've implemented so far can be seen attached to the [request for feedback posted on the Jupyter discussion list](https://groups.google.com/forum/#!topic/jupyter/BSk_4yID0KM).",
    "performed_via_github_app": null
  }
]
