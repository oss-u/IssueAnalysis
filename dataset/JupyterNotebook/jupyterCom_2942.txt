[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/337328634",
    "html_url": "https://github.com/jupyter/notebook/issues/2942#issuecomment-337328634",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2942",
    "id": 337328634,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzMyODYzNA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-17T18:41:46Z",
    "updated_at": "2017-10-17T18:41:46Z",
    "author_association": "MEMBER",
    "body": "It looks like the notebook code in `write_error` is doing this:\r\n\r\n```python\r\nif isinstance(e, HTTPError):\r\n     reply['message'] = e.log_message or message\r\nelse:\r\n     reply['message'] = 'Unhandled error'\r\n     reply['traceback'] = ''.join(traceback.format_exception(*exc_info))\r\n```\r\n\r\nWhereas the equivalent code in kernel_gateway (in JSONErrorsMixin) looks like this:\r\n\r\n```python\r\ntry:\r\n     message = exception.log_message % exception.args\r\nexcept Exception:\r\n     pass\r\n```\r\n\r\nI suspect that's the source of the difference.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/337371305",
    "html_url": "https://github.com/jupyter/notebook/issues/2942#issuecomment-337371305",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2942",
    "id": 337371305,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzM3MTMwNQ==",
    "user": {
      "login": "kevin-bates",
      "id": 22599560,
      "node_id": "MDQ6VXNlcjIyNTk5NTYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/22599560?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevin-bates",
      "html_url": "https://github.com/kevin-bates",
      "followers_url": "https://api.github.com/users/kevin-bates/followers",
      "following_url": "https://api.github.com/users/kevin-bates/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevin-bates/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevin-bates/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevin-bates/subscriptions",
      "organizations_url": "https://api.github.com/users/kevin-bates/orgs",
      "repos_url": "https://api.github.com/users/kevin-bates/repos",
      "events_url": "https://api.github.com/users/kevin-bates/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevin-bates/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-17T21:05:39Z",
    "updated_at": "2017-10-17T21:05:39Z",
    "author_association": "MEMBER",
    "body": "Thanks @takluyver (and congratulations on your recent recognition!)\r\n\r\nSo if I understand your response, it seems to imply that the `JSONErrorsMixin` code had been previously bypassed due to the presence of `@json_errors` and, now that the deprecation has taken place, `JSONErrorsMixin` is not performing a compatible response that now causes the unit test to break.  Correct?\r\n\r\nAs a result, are you suggesting the kernel gateway code get updated?\r\n\r\nThanks.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/337489828",
    "html_url": "https://github.com/jupyter/notebook/issues/2942#issuecomment-337489828",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2942",
    "id": 337489828,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzQ4OTgyOA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-18T07:49:38Z",
    "updated_at": "2017-10-18T07:49:38Z",
    "author_association": "MEMBER",
    "body": "I haven't really followed kernel_gateway closely, and I don't know exactly how the deprecation of `json_errors` has affected it. But the `write_errors` method is meant to be used instead of the decorator, and it looks like that method in notebook is putting more information into the JSON than the method in kernel_gateway.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/337696555",
    "html_url": "https://github.com/jupyter/notebook/issues/2942#issuecomment-337696555",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2942",
    "id": 337696555,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzY5NjU1NQ==",
    "user": {
      "login": "kevin-bates",
      "id": 22599560,
      "node_id": "MDQ6VXNlcjIyNTk5NTYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/22599560?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevin-bates",
      "html_url": "https://github.com/kevin-bates",
      "followers_url": "https://api.github.com/users/kevin-bates/followers",
      "following_url": "https://api.github.com/users/kevin-bates/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevin-bates/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevin-bates/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevin-bates/subscriptions",
      "organizations_url": "https://api.github.com/users/kevin-bates/orgs",
      "repos_url": "https://api.github.com/users/kevin-bates/repos",
      "events_url": "https://api.github.com/users/kevin-bates/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevin-bates/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-18T19:07:42Z",
    "updated_at": "2017-10-18T19:07:42Z",
    "author_association": "MEMBER",
    "body": "Thanks @takluyver.  I'm pretty sure I see what's going on here - adding @minrk and @parente for comment.\r\n\r\nOnce the `json_errors` decorator was removed, this caused the `JSONErrorsMixin.write_error` to be called in JKG instead of `APIHandler.write_error` due to inheritance rules.  However, `JSONErrorsMixin` doesn't deal with tracebacks and essentially ignores any non-HTTP kinds of exceptions - like NoSuchKernel - leading to test failures.\r\n\r\nSince `APIHandler` is in the handler class hierarchy of JKG classes, it stands to reason that we could now get rid of `JSONErrorsMixin.write_error` now that `APIHandler.write_error` exists and handles both HTTP and non-HTTP exceptions.  However, there's one issue that I believe was an oversight in the #2853 and that's that `APIHandler.write_error` does not set the `reason` for the reply, whereas `@json_errors` did that before.\r\n\r\nI stumbled upon this when looking at another test failure where the reason field for a 403 exception was not the expected `Forbidden` but instead `None`.  In looking at `JSONErrorsMixin` it makes the following call: `reason = responses.get(status_code, 'Unknown HTTP Error')`.  But, `APIHandler.write_error` essentially does the equivalent when initializing the `message` field, only to overwrite that field with info from the exc_info structure (if it exists).  As a result, I need to ask if `APIHandler.write_error` should be using `reason` where `message` is used in these lines: https://github.com/jupyter/notebook/blob/master/notebook/base/handlers.py#L461-L464\r\n\r\nIf I make that change, then all JKG tests pass when `JSONErrorsMixin` is removed from the class hierarchy.\r\n\r\nThe other approach is to apply the content of `APIHandler.write_error` - along with the \"reason update\" I raised - directly into `JSONErrorsMixin.write_error` and just live with retaining `JSONErrorsMixin` in JKG.  I think we'll need to do this anyway in order to bridge this gap from a release perspective in the near term anyway.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/337934505",
    "html_url": "https://github.com/jupyter/notebook/issues/2942#issuecomment-337934505",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2942",
    "id": 337934505,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzkzNDUwNQ==",
    "user": {
      "login": "kevin-bates",
      "id": 22599560,
      "node_id": "MDQ6VXNlcjIyNTk5NTYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/22599560?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevin-bates",
      "html_url": "https://github.com/kevin-bates",
      "followers_url": "https://api.github.com/users/kevin-bates/followers",
      "following_url": "https://api.github.com/users/kevin-bates/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevin-bates/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevin-bates/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevin-bates/subscriptions",
      "organizations_url": "https://api.github.com/users/kevin-bates/orgs",
      "repos_url": "https://api.github.com/users/kevin-bates/repos",
      "events_url": "https://api.github.com/users/kevin-bates/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevin-bates/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-19T14:56:23Z",
    "updated_at": "2017-10-19T14:56:23Z",
    "author_association": "MEMBER",
    "body": "Sorry for all the ramble (that's what I do :-) ).  Now that this has been narrowed down and I'm convinced the notebook portion is just a matter of establishing the `reason` in the error, I'm going to close this issue and open a new one that is more succinct and to the point.  This will be followed up with a pull request.",
    "performed_via_github_app": null
  }
]
