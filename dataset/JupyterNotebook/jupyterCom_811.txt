[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/165045361",
    "html_url": "https://github.com/jupyter/notebook/issues/811#issuecomment-165045361",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/811",
    "id": 165045361,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTA0NTM2MQ==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-16T09:28:20Z",
    "updated_at": "2015-12-16T09:28:20Z",
    "author_association": "MEMBER",
    "body": "Do you want the reference to work in the live notebook itself, or a PDF export?\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/165153927",
    "html_url": "https://github.com/jupyter/notebook/issues/811#issuecomment-165153927",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/811",
    "id": 165153927,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTE1MzkyNw==",
    "user": {
      "login": "amueller",
      "id": 449558,
      "node_id": "MDQ6VXNlcjQ0OTU1OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/449558?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amueller",
      "html_url": "https://github.com/amueller",
      "followers_url": "https://api.github.com/users/amueller/followers",
      "following_url": "https://api.github.com/users/amueller/following{/other_user}",
      "gists_url": "https://api.github.com/users/amueller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amueller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amueller/subscriptions",
      "organizations_url": "https://api.github.com/users/amueller/orgs",
      "repos_url": "https://api.github.com/users/amueller/repos",
      "events_url": "https://api.github.com/users/amueller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amueller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-16T15:56:38Z",
    "updated_at": "2015-12-16T15:56:38Z",
    "author_association": "NONE",
    "body": "Ideally both. For me the PDF export (and markup export) are more important.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/173003702",
    "html_url": "https://github.com/jupyter/notebook/issues/811#issuecomment-173003702",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/811",
    "id": 173003702,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3MzAwMzcwMg==",
    "user": {
      "login": "amueller",
      "id": 449558,
      "node_id": "MDQ6VXNlcjQ0OTU1OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/449558?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amueller",
      "html_url": "https://github.com/amueller",
      "followers_url": "https://api.github.com/users/amueller/followers",
      "following_url": "https://api.github.com/users/amueller/following{/other_user}",
      "gists_url": "https://api.github.com/users/amueller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amueller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amueller/subscriptions",
      "organizations_url": "https://api.github.com/users/amueller/orgs",
      "repos_url": "https://api.github.com/users/amueller/repos",
      "events_url": "https://api.github.com/users/amueller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amueller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-19T22:08:22Z",
    "updated_at": "2016-01-19T22:11:54Z",
    "author_association": "NONE",
    "body": "FYI, this is for a book I'm writing. Other authors have similar problems. What I didn't realize when posting the original issue is that ideally you'd be able to reference across multiple notebooks, which seems quite tricky.\nIf it would possible to solve this for a single notebook, maybe there would be a way to say \"this is chapter X\" so that figures would be numerated Figure X.Y.\n\nThere are a bunch of people writing books, for example for O'Reilly, and running in similar issues.\nMaybe O'Reilly could help with this? You worked with them before, right?\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/176858998",
    "html_url": "https://github.com/jupyter/notebook/issues/811#issuecomment-176858998",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/811",
    "id": 176858998,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3Njg1ODk5OA==",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-29T16:55:56Z",
    "updated_at": "2016-01-29T16:59:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "One idea to do this is adding a new image writer (see IPython.display.set_matplotlib_formats and what it does...), which wraps the matplotlib image by sending markdown/HTML down the wire instead of the image itself. This markdown would embedded the image in a data URL (which currently does not diplay in the notebook: https://github.com/jupyter/notebook/issues/789) and get the caption from a global variable.\n\nlike `\n\n```\nset_caption(\"...\")\nplot(...)\n...\n```\n\nAnother idea is to add a special function which does the image display. So producing a plot becomes:\n\n```\n# without `%%maptlotlib inline`!\ndisplay_plot(fig, \"Caption\")\n```\n\nAnd this would then produce a html/markdown string with the image embedded in the data URL and this is then displayed.\n\nIf it is possible to add a context while doing the nbconvert, then you could --as a workaround for the markdown data URL problem form above--  send the caption as html and the image as normal image while in a normal notebook and while in the nbconvert process sent a markdown with the embedded data URL formatted like knitr does it. This then becomes a ipnb -> markdown -> latex -> pdf (the last steps via pandoc).\n\n[Or maybe I misread the bugreport and it is possible to send data URLs with html/markdown content from the kernel, but not from the markdown cells]\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/176968956",
    "html_url": "https://github.com/jupyter/notebook/issues/811#issuecomment-176968956",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/811",
    "id": 176968956,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3Njk2ODk1Ng==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-29T21:04:01Z",
    "updated_at": "2016-01-29T21:06:58Z",
    "author_association": "MEMBER",
    "body": "So what I would suggest is writing a custom display-formatter that specialize figures. \n\nTechnically we can likely add the equivalent of a `_repr_rst_` if rest is the thing you like to use. THen you can do whatever you like from your code. You could even inject this repr in startup.py, so no need to instanciate it in the notebook. \n\nNbconvert will  need to be modifed to pick-up the rst format at conversion time, buts that's likely doable. \n\nBeyond generating only the rest repr, you can also attach metadata to the object, to \"fix\" the rst at conversion time.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/176978278",
    "html_url": "https://github.com/jupyter/notebook/issues/811#issuecomment-176978278",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/811",
    "id": 176978278,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3Njk3ODI3OA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-29T21:32:11Z",
    "updated_at": "2016-01-29T21:32:11Z",
    "author_association": "MEMBER",
    "body": "``` python\nfrom IPython.core.formatters import BaseFormatter\nfrom traitlets import Unicode\n\nclass RESTFormatter(BaseFormatter):\n    \"\"\"An ReST formatter.\n    \"\"\"\n    format_type = Unicode('text/rst')\n    #print_method = ObjectName('_repr_rest_') #optionnal if custom object later\n\nrf = RESTFormatter()\n\nip = get_ipython()\nip.display_formatter.formatters['text/rst'] = rf\n\nclass Foo():pass\n\ndef f(*args, **kwargs):\n    return \"\"\"\n.. figure::\n    :your:\n\n    Figure here\n\"\"\", {'meta':'data'}\n\nrf.for_type(Foo, f)\n```\n\n(too be adapted)\n\nwill make the following:\n\n```\nIn[1]: Foo()\n```\n\nto be the following in the ipynb:\n\n```\n  \"outputs\": [\n    {\n     \"data\": {\n      ...\n      \"text/rst\": [\n       \"\\n\",\n       \".. figure::\\n\",\n       \"    :your:\\n\",\n       \"\\n\",\n       \"    Figure here\\n\"\n      ]\n     },\n     ...\n     \"metadata\": {\n      \"text/rst\": {\n       \"meta\": \"data\"\n      }\n     },\n    ...\n    }\n   ],\n   \"source\": [\n    \"ff\"\n   ]\n  }\n```\n\nThat would be your part to do I guess (or even publish a ipython-RST-formatter on PyPI)\n\nNext step need custom templates/exporter for nbviewer, possibly using master; is using master a problem ?\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/176981119",
    "html_url": "https://github.com/jupyter/notebook/issues/811#issuecomment-176981119",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/811",
    "id": 176981119,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3Njk4MTExOQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-29T21:41:40Z",
    "updated_at": "2016-01-29T21:41:40Z",
    "author_association": "MEMBER",
    "body": "I'm going to tag this as \"Docs\", \nit's technically not notebook, it's both kernelside (in your case IPython)  coupled with nbconvert,\nbut it's likely a good place to start for someone who wants to improve the docs, and a nice use case.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/178024829",
    "html_url": "https://github.com/jupyter/notebook/issues/811#issuecomment-178024829",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/811",
    "id": 178024829,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3ODAyNDgyOQ==",
    "user": {
      "login": "amueller",
      "id": 449558,
      "node_id": "MDQ6VXNlcjQ0OTU1OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/449558?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amueller",
      "html_url": "https://github.com/amueller",
      "followers_url": "https://api.github.com/users/amueller/followers",
      "following_url": "https://api.github.com/users/amueller/following{/other_user}",
      "gists_url": "https://api.github.com/users/amueller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amueller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amueller/subscriptions",
      "organizations_url": "https://api.github.com/users/amueller/orgs",
      "repos_url": "https://api.github.com/users/amueller/repos",
      "events_url": "https://api.github.com/users/amueller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amueller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-01T15:35:26Z",
    "updated_at": "2016-02-01T15:35:26Z",
    "author_association": "NONE",
    "body": "I'm already using nbconvert master (that's what you meant, right)? I needed to fix some bugs ;)\nI need to think through your solution, but that sounds doable.\n\nPossibly stupid question: If this is done in the RST formater, then other output formats couldn't use the info, right?\n(clickable?) figure references make sense for latex, html and RST, at least.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/191963836",
    "html_url": "https://github.com/jupyter/notebook/issues/811#issuecomment-191963836",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/811",
    "id": 191963836,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MTk2MzgzNg==",
    "user": {
      "login": "amueller",
      "id": 449558,
      "node_id": "MDQ6VXNlcjQ0OTU1OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/449558?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amueller",
      "html_url": "https://github.com/amueller",
      "followers_url": "https://api.github.com/users/amueller/followers",
      "following_url": "https://api.github.com/users/amueller/following{/other_user}",
      "gists_url": "https://api.github.com/users/amueller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amueller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amueller/subscriptions",
      "organizations_url": "https://api.github.com/users/amueller/orgs",
      "repos_url": "https://api.github.com/users/amueller/repos",
      "events_url": "https://api.github.com/users/amueller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amueller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-03T21:08:28Z",
    "updated_at": "2016-03-03T21:08:28Z",
    "author_association": "NONE",
    "body": "So I'm probably gonna do this for latex first.\n@Carreau, I have to admit I don't understand what is going on in your example.\nHow would I use the formatter?\nIn a custom preprocessor?\nI tried understanding this solution:\nhttp://blog.juliusschulz.de/blog/ultimate-ipython-notebook\nbut that requires manually adding metadata in the cell for each figure (and then changing the latex template).\n\nIs there any documentation on this?\nI was hoping to find some here: http://ipython.readthedocs.org/en/stable/development/index.html but didn't...\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/285851814",
    "html_url": "https://github.com/jupyter/notebook/issues/811#issuecomment-285851814",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/811",
    "id": 285851814,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTg1MTgxNA==",
    "user": {
      "login": "jni",
      "id": 492549,
      "node_id": "MDQ6VXNlcjQ5MjU0OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/492549?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jni",
      "html_url": "https://github.com/jni",
      "followers_url": "https://api.github.com/users/jni/followers",
      "following_url": "https://api.github.com/users/jni/following{/other_user}",
      "gists_url": "https://api.github.com/users/jni/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jni/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jni/subscriptions",
      "organizations_url": "https://api.github.com/users/jni/orgs",
      "repos_url": "https://api.github.com/users/jni/repos",
      "events_url": "https://api.github.com/users/jni/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jni/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-11T08:09:43Z",
    "updated_at": "2017-03-11T08:09:43Z",
    "author_association": "NONE",
    "body": "Is there still no movement on figure captions in jupyter notebooks? Note that I disagree with @Carreau that this is a kernel issue. ReST is also not the only output one would want to support that — it is also useful for [html](https://www.w3schools.com/tags/tag_figcaption.asp). imho [this post](http://blog.juliusschulz.de/blog/ultimate-ipython-notebook#figures) by Julius Schulz comes closest to what one would want: captions for arbitrary cells that *any* converter could come and deal with as it pleases. All we would need is:\r\n\r\n- official approval by the Jupyter team of the \"caption\" cell metadata for figure captions, and\r\n- a first-class markdown editor for said metadata (rather than having to use the metadata JSON editor.\r\n\r\nThe converters would follow. Are there any prospects for such support?",
    "performed_via_github_app": null
  }
]
