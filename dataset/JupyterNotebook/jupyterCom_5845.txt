[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/721830340",
    "html_url": "https://github.com/jupyter/notebook/pull/5845#issuecomment-721830340",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5845",
    "id": 721830340,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMTgzMDM0MA==",
    "user": {
      "login": "bollwyvl",
      "id": 45380,
      "node_id": "MDQ6VXNlcjQ1Mzgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/45380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bollwyvl",
      "html_url": "https://github.com/bollwyvl",
      "followers_url": "https://api.github.com/users/bollwyvl/followers",
      "following_url": "https://api.github.com/users/bollwyvl/following{/other_user}",
      "gists_url": "https://api.github.com/users/bollwyvl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bollwyvl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bollwyvl/subscriptions",
      "organizations_url": "https://api.github.com/users/bollwyvl/orgs",
      "repos_url": "https://api.github.com/users/bollwyvl/repos",
      "events_url": "https://api.github.com/users/bollwyvl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bollwyvl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-04T16:20:48Z",
    "updated_at": "2020-11-04T16:20:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the speedy review!\r\n\r\nI definitely see a future where wasm plays a _major_ role in Jupyter. While there's still some [HR shuffling](https://bytecodealliance.org/articles/1-year-update#the-lucet-and-wasmtime-teams-join-forces) going on, there's some weight by some significant players to do some really cool stuff.\r\n\r\nWaxing a bit more poetic than my flippant postmortem about browser-based stuff on that other PR: I feel like wasm may actually deliver some of the things we've dreamed about, and have had to realize suboptimally with  increasing complexity (read: docker)... a good example is [enarx](https://github.com/enarx/enarx/wiki/Enarx-Introduction) which doesn't take too much squinting to see as a fantastic way to achieve the dream of secure-by-default kernels.\r\n\r\nThe most ludicrous end state of reproducible, literate computing I see:\r\n- fart around in a jupyter client, get your environment/ui where you want it to be\r\n  - use wasm in your browser, or computer, or deploy to HPC\r\n- hit the \"archive\" button \r\n  - dump the entire experience (UI, need wasm runtimes and libraries, data sets)\r\n  - generate a pixel-perfect, archival-grade PDF/A2, and embed the entire experience inside that\r\n- host on dumb web server\r\n  - or put on P2P networks (dat/ipfs) that can deduplicate these enormous things\r\n- profit? \r\n  - at least SCIENCE!",
    "performed_via_github_app": null
  }
]
