[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/495402188",
    "html_url": "https://github.com/jupyter/notebook/issues/4640#issuecomment-495402188",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4640",
    "id": 495402188,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NTQwMjE4OA==",
    "user": {
      "login": "dhirschfeld",
      "id": 881019,
      "node_id": "MDQ6VXNlcjg4MTAxOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881019?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhirschfeld",
      "html_url": "https://github.com/dhirschfeld",
      "followers_url": "https://api.github.com/users/dhirschfeld/followers",
      "following_url": "https://api.github.com/users/dhirschfeld/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhirschfeld/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhirschfeld/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhirschfeld/subscriptions",
      "organizations_url": "https://api.github.com/users/dhirschfeld/orgs",
      "repos_url": "https://api.github.com/users/dhirschfeld/repos",
      "events_url": "https://api.github.com/users/dhirschfeld/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhirschfeld/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-23T22:06:08Z",
    "updated_at": "2019-05-23T22:06:08Z",
    "author_association": "CONTRIBUTOR",
    "body": "Copying over my [comment](https://github.com/jupyterlab/jupyterlab/issues/5051#issuecomment-495399845):\r\n> *From a UX perspective, I'd like the to be able to open files by copying and pasting paths - which on Windows means accepting standard backslashes. It's very painful (and Windows hostile) to force users to manually change every backslash to a forward-slash.*",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/495404357",
    "html_url": "https://github.com/jupyter/notebook/issues/4640#issuecomment-495404357",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4640",
    "id": 495404357,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NTQwNDM1Nw==",
    "user": {
      "login": "dhirschfeld",
      "id": 881019,
      "node_id": "MDQ6VXNlcjg4MTAxOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881019?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhirschfeld",
      "html_url": "https://github.com/dhirschfeld",
      "followers_url": "https://api.github.com/users/dhirschfeld/followers",
      "following_url": "https://api.github.com/users/dhirschfeld/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhirschfeld/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhirschfeld/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhirschfeld/subscriptions",
      "organizations_url": "https://api.github.com/users/dhirschfeld/orgs",
      "repos_url": "https://api.github.com/users/dhirschfeld/repos",
      "events_url": "https://api.github.com/users/dhirschfeld/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhirschfeld/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-23T22:14:54Z",
    "updated_at": "2019-05-23T22:14:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "> *Jupyter does not map directly to file system paths on purpose, because your \"file system\" could be a remote database*\r\n\r\nI think this is an important abstraction *but* in my use cases it's *extremely* important for users debugging to be able to open the files. e.g. when an exception occurs the line and filename are printed and so I'd like users to be able to paste the filename (as shown in the Python traceback) to open the file in the editor.\r\n\r\nI consider it critical for users (particularly unsophisticated users) to be able to view the context and understand the code that was running so opening the files should be as painless as possible.\r\n\r\nAn example of the importance of this is in spyder they go to the lengths to parse and format the tracebacks so that the filenames reported are hyperlinks which will open the file (at the correct line number) in the editor. This is one of my favourite features of the spyder IDE.\r\n\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/495405339",
    "html_url": "https://github.com/jupyter/notebook/issues/4640#issuecomment-495405339",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4640",
    "id": 495405339,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NTQwNTMzOQ==",
    "user": {
      "login": "dhirschfeld",
      "id": 881019,
      "node_id": "MDQ6VXNlcjg4MTAxOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881019?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhirschfeld",
      "html_url": "https://github.com/dhirschfeld",
      "followers_url": "https://api.github.com/users/dhirschfeld/followers",
      "following_url": "https://api.github.com/users/dhirschfeld/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhirschfeld/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhirschfeld/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhirschfeld/subscriptions",
      "organizations_url": "https://api.github.com/users/dhirschfeld/orgs",
      "repos_url": "https://api.github.com/users/dhirschfeld/repos",
      "events_url": "https://api.github.com/users/dhirschfeld/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhirschfeld/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-23T22:18:53Z",
    "updated_at": "2019-05-23T22:18:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "Because of the importance of this capability, to me (but also to my less sophisticated users who wouldn't open an issue on GitHub) I think perhaps, if it works, simply let it pass. It does break the abstraction but IMHO gives a huge benefit in terms of usability/UX.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/495410088",
    "html_url": "https://github.com/jupyter/notebook/issues/4640#issuecomment-495410088",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4640",
    "id": 495410088,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NTQxMDA4OA==",
    "user": {
      "login": "dhirschfeld",
      "id": 881019,
      "node_id": "MDQ6VXNlcjg4MTAxOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881019?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhirschfeld",
      "html_url": "https://github.com/dhirschfeld",
      "followers_url": "https://api.github.com/users/dhirschfeld/followers",
      "following_url": "https://api.github.com/users/dhirschfeld/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhirschfeld/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhirschfeld/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhirschfeld/subscriptions",
      "organizations_url": "https://api.github.com/users/dhirschfeld/orgs",
      "repos_url": "https://api.github.com/users/dhirschfeld/repos",
      "events_url": "https://api.github.com/users/dhirschfeld/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhirschfeld/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-23T22:40:10Z",
    "updated_at": "2019-05-23T22:40:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "So it's all in one place I'll copy over my other comments:\r\n<hr>\r\nI don't think you need any fancy translation since passing an absolute path actually works - all I would suggest is normalising `\\` to `/` and for security possibly check that the path starts with the server root so you can't \"break out\" - e.g. pseudo-python-code:\r\n\r\n```python\r\npath = path.replace('\\\\', '/')\r\nif not path.startswith('/'):\r\n\tassert path.startswith(self.serverRoot)\r\ncontents = self.get_contents(path)\r\nname = os.path.basename(path)\r\n```\r\n\r\nThe fact that `C:\\test.txt` returns `{\"name\": \"C:\\test.txt\"}` whereas `C:/test.txt` returns `{\"name\": \"test.txt\"}` seems like an api which doesn't recognise Windows paths *but* that should hopefully be fixed by simply normalising the backslashes to begin with.",
    "performed_via_github_app": null
  }
]
