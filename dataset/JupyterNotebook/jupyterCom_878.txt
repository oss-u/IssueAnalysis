[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/165336911",
    "html_url": "https://github.com/jupyter/notebook/issues/878#issuecomment-165336911",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/878",
    "id": 165336911,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTMzNjkxMQ==",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-17T04:56:11Z",
    "updated_at": "2015-12-17T05:11:50Z",
    "author_association": "MEMBER",
    "body": "Another pain point, which I don't know if it could be addressed for the 4.x series is the fact that certain nbextensions depend on (a certain version) kernel-side code such as custom interactive widgets libraries.\n\nAt the moment, it is impossible to have two kernels with two different versions of ipywidgets, or bqplot, installed because they will look for the JavaScript at the same location.\n\nTherefore, I think that the extension mechanism should acknowledge that there are two categories of extensions:\n1. Global notebook application extensions, which is not dependent on kernel code (like a spell-check).\n2. Kernel-dependent extensions.\n\nA proposal to solve this would be to have the kernelspec contain one more information: a uuid which would typically be generated when the kernelspec is installed. When running a notebook with this kernel, `nbextension_base_path/u-u-i-d/` would then become a search path, and the one we use for custom widgets.\n\ncc @jdfreder \n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/165357048",
    "html_url": "https://github.com/jupyter/notebook/issues/878#issuecomment-165357048",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/878",
    "id": 165357048,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTM1NzA0OA==",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-17T06:38:38Z",
    "updated_at": "2015-12-17T06:38:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "Here is a _super_ rough draft of a PR that addresses the first pain point: #879 \n\nSome questions that this bring up:\n- Do we need separate `config=True` traitlets on `NotebookApp` for enabling common, notebook, tree and terminal nbextensions?\n- What are they named?\n- How do we handle multiple config files that define those? Last wins? Try to merge?\n- Our `.py` config files allow lists to be appended/extended, but `.json` doesn't.\n- How will folks at Continuum write these config files programatically?\n\nThere are some design decisions to make, but the good news is that it is simple code and logic to add this. Let's discuss more tomorrow.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/165384793",
    "html_url": "https://github.com/jupyter/notebook/issues/878#issuecomment-165384793",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/878",
    "id": 165384793,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTM4NDc5Mw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-17T08:42:46Z",
    "updated_at": "2015-12-17T08:42:46Z",
    "author_association": "MEMBER",
    "body": "> Release the fixes quickly in a 4.2 release.\n\nI don't agree with \"quickly\". I would prefer \"thoroughly tested\" with \"with good documentation and example\".\n\n> Don't standardize specifically where in the python package they are. This allows existing packages such as nbgrader to not have to change anything.\n\nI would still like if you make extensions in python packages to be able to activate them per submodule: `jupyter activate nbgrader.student` / `jupyter activate nbgrader.teacher`\n\n> throwing that data into the page.html template itself\n\nDoes that implicate you need to restart the server on loading extensions ?\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/165385119",
    "html_url": "https://github.com/jupyter/notebook/issues/878#issuecomment-165385119",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/878",
    "id": 165385119,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTM4NTExOQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-17T08:44:48Z",
    "updated_at": "2015-12-17T08:44:48Z",
    "author_association": "MEMBER",
    "body": "Extra note, if the packages are Python and have versions, we should be able to \nserve multiple versions at differents url like `/nbextension/<extension>/<version>/`, if version is omitted latest is implied. \n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/165394553",
    "html_url": "https://github.com/jupyter/notebook/issues/878#issuecomment-165394553",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/878",
    "id": 165394553,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTM5NDU1Mw==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-17T09:30:54Z",
    "updated_at": "2015-12-17T09:30:54Z",
    "author_association": "MEMBER",
    "body": "Re: @SylvainCorlay's point, also during that discussion, we proposed a kernel-specific nbextension path, which we never got around to implementing. I feel bad about that. I think we ended up proposing an nbextensions dir inside the kernelspec that kernel-specific extensions could go in.\n\nIt seems a bit worrisome that we would officially bless Python packages as the temporary solution for 4.x nbextensions, and then turn 180º and say that it's all npm, and not Python packages as fast as we can. But if we want to make it more convenient, adding a flag for 'install js from a Python package':\n\n```\njupyter nbextension install --py nbgrader\n```\n\nseems like a better middle ground than breaking `jupyter nbextension install [path]`, or guessing whether `[path]` is a path or a package.\n\n> Do we need separate config=True traitlets on NotebookApp for enabling common, notebook, tree and terminal nbextensions?\n\nI don't think so. What would these common nbextensions be?\n\n> How do we handle multiple config files that define those? Last wins? Try to merge?\n\nI would do it the same way we do with the rest of config, where the more specific config has priority: user > env > system. I think that's the only thing that's missing from nbconfig for this to work.\n\n> How will folks at Continuum write these config files programmatically?\n\nDuring the nbextension discussion a year ago, it was concluded that we must not activate extensions as part of installing them - that install & activate **must** be two separate actions. Are we changing our minds on that?\n\nIf someone wants to _enable_ nbextensions via conda packages, the biggest hurdle is that all enabling currently resides in a single file, and conda packages should only write, not modify files. To support this, the only idea I have is a `config.d`-style directory of config files, so that packages could drop a file in there, and all such files are loaded.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/165399615",
    "html_url": "https://github.com/jupyter/notebook/issues/878#issuecomment-165399615",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/878",
    "id": 165399615,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTM5OTYxNQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-17T09:41:41Z",
    "updated_at": "2015-12-17T09:41:41Z",
    "author_association": "MEMBER",
    "body": "> Re: @SylvainCorlay's point, also during that discussion, we proposed a kernel-specific nbextension path, which we never got around to implementing.\n\nYou can load extension from kernelspec directory using kernel.js, you just need to do relative requires. \n\n> It seems a bit worrisome that we would officially bless Python packages as the temporary solution for 4.x nbextensions, and then turn 180º and say that it's all npm, and not Python packages as fast as we can. But if we want to make it more convenient, adding a flag for 'install js from a Python package':\n\nWhat about \"just\" adding `npm` global dir to the search path ?\n\n> I would do it the same way we do with the rest of config, where the more specific config has priority: user > env > system. I think that's the only thing that's missing from nbconfig for this to work.\n\nFor general frontend config, it's hard to merge JSON, though for list of extension, that might be easier. \n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/165399760",
    "html_url": "https://github.com/jupyter/notebook/issues/878#issuecomment-165399760",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/878",
    "id": 165399760,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTM5OTc2MA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-17T09:42:32Z",
    "updated_at": "2015-12-17T09:42:32Z",
    "author_association": "MEMBER",
    "body": "> that install & activate must be two separate actions. Are we changing our minds on that?\n\nI don't think so, I think the setup.py list is to **discover** extensions. \n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/165438901",
    "html_url": "https://github.com/jupyter/notebook/issues/878#issuecomment-165438901",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/878",
    "id": 165438901,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTQzODkwMQ==",
    "user": {
      "login": "jankatins",
      "id": 890156,
      "node_id": "MDQ6VXNlcjg5MDE1Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/890156?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jankatins",
      "html_url": "https://github.com/jankatins",
      "followers_url": "https://api.github.com/users/jankatins/followers",
      "following_url": "https://api.github.com/users/jankatins/following{/other_user}",
      "gists_url": "https://api.github.com/users/jankatins/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jankatins/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jankatins/subscriptions",
      "organizations_url": "https://api.github.com/users/jankatins/orgs",
      "repos_url": "https://api.github.com/users/jankatins/repos",
      "events_url": "https://api.github.com/users/jankatins/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jankatins/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-17T12:22:00Z",
    "updated_at": "2015-12-17T12:42:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just that I understand it correctly: \n\nThis:\n\n> embrace npm as our package format and manager\n\njust means that developers of packages need to use npm, not that users of the package need to install npm in addition to python+python package manager?\n\nIf not: I don't think it's good for the adoption of extensions if e.g. a julia user has to install a python environment to get a python package manager to install a jupyter notebook and then start installing node and npm to get extensions. Learning python (the language, the tools, the libs...) instead of using a preinstalled SPSS/STATA/... is already hard for students and researchers, so don't add on learning another packaging ecosystem to get notebook extensions.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/165445231",
    "html_url": "https://github.com/jupyter/notebook/issues/878#issuecomment-165445231",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/878",
    "id": 165445231,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTQ0NTIzMQ==",
    "user": {
      "login": "parente",
      "id": 153745,
      "node_id": "MDQ6VXNlcjE1Mzc0NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/153745?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/parente",
      "html_url": "https://github.com/parente",
      "followers_url": "https://api.github.com/users/parente/followers",
      "following_url": "https://api.github.com/users/parente/following{/other_user}",
      "gists_url": "https://api.github.com/users/parente/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/parente/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/parente/subscriptions",
      "organizations_url": "https://api.github.com/users/parente/orgs",
      "repos_url": "https://api.github.com/users/parente/repos",
      "events_url": "https://api.github.com/users/parente/events{/privacy}",
      "received_events_url": "https://api.github.com/users/parente/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-17T12:51:53Z",
    "updated_at": "2015-12-17T12:54:25Z",
    "author_association": "MEMBER",
    "body": "Maybe this belongs in a separate issue, but it seems like the right time to fix it along with these other problems. Installing **server-side** extensions suffers from a similar pain point about `jupyter_notebook_config.py` vs `jupyter_notebook_config.json` configs.\n\nWe found out the hard way that the JSON config takes precedence over the Python config in jupyter-incubator/dashboards#153. So if some server-side extensions ask users to add themselves to the .py config like `c.NotebookApp.server_extensions = ['my.extension']` (currently: nbexamples, dashboards, declarativewidgets) while others use the `ConfigManager` class to add themselves to the .json config (nbgrader, anything using the nbsetuptools), only the .json ones will wind up getting enabled.\n\nI have no problem switching over to one or the other, but, which is the correct one? Or does something need to change so that both are supported and the lists of extensions are merged across the config types?\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/165454940",
    "html_url": "https://github.com/jupyter/notebook/issues/878#issuecomment-165454940",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/878",
    "id": 165454940,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTQ1NDk0MA==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-17T13:37:06Z",
    "updated_at": "2015-12-17T13:37:06Z",
    "author_association": "MEMBER",
    "body": "> I have no problem switching over to one or the other, but, which is the correct one?\n\nIt's probably correct for .py config files to have higher priority, since they are generally human-edited and more powerful, while .json config files should always and only be programmatically edited. .py files can be considered 'manual overrides'.\n\nIn Python, it makes sense to do `c.NotebookApp.server_extensions.append('my.extension')`. The JSON config files cannot do this, since they are a simple dict-dump. And further, they don't generally need to, because opening and appending to a list in a JSON file is doable, unlike in Python. A further point in favor of .py files having higher priority.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/165461993",
    "html_url": "https://github.com/jupyter/notebook/issues/878#issuecomment-165461993",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/878",
    "id": 165461993,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTQ2MTk5Mw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-17T14:12:12Z",
    "updated_at": "2015-12-17T14:12:12Z",
    "author_association": "MEMBER",
    "body": "> In Python, it makes sense to do c.NotebookApp.server_extensions.append('my.extension'). The JSON config files cannot do this, since they are a simple dict-dump. And further, they don't generally need to, because opening and appending to a list in a JSON file is doable, unlike in Python. A further point in favor of .py files having higher priority.\n\nWe already had a long discussion on which one between py an json should take precedence and decided on Json, as we want at some point to edit configuration only through UI. Having `.py` taking precedence would mean in many cases that if a user does: `c.NotebookApp.server_extensions = ['my.extension']` no automatic tool can ever activate an extension. So which one takes precedence is still not obvious to me, and I'm not sure a single case like this one change the balance. \n\nJson  could perfectly have append also, as long as we decide that an append or prepend keys become a LazyAppend/LazyPrepend.\n\nWe maybe should just warn more loudly if one file erase the settings of another, or put some time in looking at tools like [redbaron](https://github.com/psycojoker/redbaron) to modify a Python config file in obvious case when a config option is **not** dynamic. \n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/165466480",
    "html_url": "https://github.com/jupyter/notebook/issues/878#issuecomment-165466480",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/878",
    "id": 165466480,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTQ2NjQ4MA==",
    "user": {
      "login": "parente",
      "id": 153745,
      "node_id": "MDQ6VXNlcjE1Mzc0NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/153745?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/parente",
      "html_url": "https://github.com/parente",
      "followers_url": "https://api.github.com/users/parente/followers",
      "following_url": "https://api.github.com/users/parente/following{/other_user}",
      "gists_url": "https://api.github.com/users/parente/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/parente/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/parente/subscriptions",
      "organizations_url": "https://api.github.com/users/parente/orgs",
      "repos_url": "https://api.github.com/users/parente/repos",
      "events_url": "https://api.github.com/users/parente/events{/privacy}",
      "received_events_url": "https://api.github.com/users/parente/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-17T14:32:49Z",
    "updated_at": "2015-12-17T14:32:49Z",
    "author_association": "MEMBER",
    "body": "> We maybe should just warn more loudly if one file erase the settings of another ...\n\nThe warning is definitely there and pretty loud on server start:\n\n```\n[W 14:29:11.533 NotebookApp] Unrecognized JSON config file version, assuming version 1\n[W 14:29:11.536 NotebookApp] Collisions detected in jupyter_notebook_config.py and jupyter_notebook_config.json config files. jupyter_notebook_config.json has higher priority: {\n      \"NotebookApp\": {\n        \"server_extensions\": \"<traitlets.config.loader.LazyConfigValue object at 0x7f15cc47dc18> ignored, using ['urth.dashboard.nbexts']\"\n      }\n    }\n```\n\nBut I'll admit @jtyberg and I missed it for some time when debugging the issue I linked above. Even when we did see it, we only knew what to do because we're expert-amateurs in how the Jupyter config system works. I'd bet a typical notebook user wouldn't have an easy time rectifying the problem.\n\n> Json could perfectly have append also, as long as we decide that an append or prepend keys become a LazyAppend/LazyPrepend.\n\nIf you wanted to scope it down to prepending/appending sequence values instead of having to merge arbitrary config objects, that would still solve the extension problem specifically without growing into a general purpose \"merge all the configs!\" solution.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/165469317",
    "html_url": "https://github.com/jupyter/notebook/issues/878#issuecomment-165469317",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/878",
    "id": 165469317,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTQ2OTMxNw==",
    "user": {
      "login": "ijstokes",
      "id": 293525,
      "node_id": "MDQ6VXNlcjI5MzUyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/293525?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ijstokes",
      "html_url": "https://github.com/ijstokes",
      "followers_url": "https://api.github.com/users/ijstokes/followers",
      "following_url": "https://api.github.com/users/ijstokes/following{/other_user}",
      "gists_url": "https://api.github.com/users/ijstokes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ijstokes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ijstokes/subscriptions",
      "organizations_url": "https://api.github.com/users/ijstokes/orgs",
      "repos_url": "https://api.github.com/users/ijstokes/repos",
      "events_url": "https://api.github.com/users/ijstokes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ijstokes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-17T14:42:50Z",
    "updated_at": "2015-12-17T14:42:50Z",
    "author_association": "NONE",
    "body": "What is the non-Continuum-camp feeling about the importance of being able to support \"sandboxing\" of extensions?  For us (at Continuum) that means having a clean mechanism to be able to use conda environments to sandbox different sets of extensions and perhaps different versions of the same extension.  From our work which has mixed both JS and Python code in the extensions conda packaging and conda environments have worked really well.\n\nI'm not clear on how this works in either a pure-Python-package or pure-NPM-package world.  If there is a good and clean solution that doesn't include conda, great.  But is there scope to discuss how conda can fill the need here to manage cross-language packaging, or has that ship already sailed?\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/165481557",
    "html_url": "https://github.com/jupyter/notebook/issues/878#issuecomment-165481557",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/878",
    "id": 165481557,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTQ4MTU1Nw==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-17T15:20:24Z",
    "updated_at": "2015-12-17T15:20:35Z",
    "author_association": "MEMBER",
    "body": "> We maybe should just warn more loudly if one file erase the settings of another, or put some time in looking at tools like redbaron to modify a Python config file in obvious case when a config option is not dynamic.\n\nIf redbaron would allow us to write and update Python config files programmatically, I would be pretty happy to drop json config files altogether, since they would no longer solve a problem. But that's a long-term idea.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/165482329",
    "html_url": "https://github.com/jupyter/notebook/issues/878#issuecomment-165482329",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/878",
    "id": 165482329,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTQ4MjMyOQ==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-17T15:23:25Z",
    "updated_at": "2015-12-17T15:27:29Z",
    "author_association": "MEMBER",
    "body": "> But is there scope to discuss how conda can fill the need here to manage cross-language packaging, or has that ship already sailed?\n\nWe can never _rely_ on conda for this, so it's always going to be the case for us to use standard language packaging in multiple languages with some manual steps for stitching the two together, and then it can be 'simpler' for conda users, where packages can properly express cross-language dependencies. But whatever we come up with, it has to work outside conda.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/165493701",
    "html_url": "https://github.com/jupyter/notebook/issues/878#issuecomment-165493701",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/878",
    "id": 165493701,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTQ5MzcwMQ==",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-17T15:59:38Z",
    "updated_at": "2015-12-17T15:59:38Z",
    "author_association": "MEMBER",
    "body": "> Re: @SylvainCorlay's point, also during that discussion, we proposed a kernel-specific nbextension path, which we never got around to implementing. I feel bad about that. I think we ended up proposing an nbextensions dir inside the kernelspec that kernel-specific extensions could go in.\n\nI would be ok to give it a try if you guys are ok with the proposal described earlier.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/165512685",
    "html_url": "https://github.com/jupyter/notebook/issues/878#issuecomment-165512685",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/878",
    "id": 165512685,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTUxMjY4NQ==",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-17T17:00:32Z",
    "updated_at": "2015-12-17T17:00:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "How is everyone's availability for a video chat later today? I am free after 10 am PST.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/165513377",
    "html_url": "https://github.com/jupyter/notebook/issues/878#issuecomment-165513377",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/878",
    "id": 165513377,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTUxMzM3Nw==",
    "user": {
      "login": "sccolbert",
      "id": 137289,
      "node_id": "MDQ6VXNlcjEzNzI4OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137289?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sccolbert",
      "html_url": "https://github.com/sccolbert",
      "followers_url": "https://api.github.com/users/sccolbert/followers",
      "following_url": "https://api.github.com/users/sccolbert/following{/other_user}",
      "gists_url": "https://api.github.com/users/sccolbert/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sccolbert/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sccolbert/subscriptions",
      "organizations_url": "https://api.github.com/users/sccolbert/orgs",
      "repos_url": "https://api.github.com/users/sccolbert/repos",
      "events_url": "https://api.github.com/users/sccolbert/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sccolbert/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-17T17:01:46Z",
    "updated_at": "2015-12-17T17:01:46Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm free any time.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/165514743",
    "html_url": "https://github.com/jupyter/notebook/issues/878#issuecomment-165514743",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/878",
    "id": 165514743,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTUxNDc0Mw==",
    "user": {
      "login": "ijstokes",
      "id": 293525,
      "node_id": "MDQ6VXNlcjI5MzUyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/293525?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ijstokes",
      "html_url": "https://github.com/ijstokes",
      "followers_url": "https://api.github.com/users/ijstokes/followers",
      "following_url": "https://api.github.com/users/ijstokes/following{/other_user}",
      "gists_url": "https://api.github.com/users/ijstokes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ijstokes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ijstokes/subscriptions",
      "organizations_url": "https://api.github.com/users/ijstokes/orgs",
      "repos_url": "https://api.github.com/users/ijstokes/repos",
      "events_url": "https://api.github.com/users/ijstokes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ijstokes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-17T17:04:24Z",
    "updated_at": "2015-12-17T17:04:24Z",
    "author_association": "NONE",
    "body": "11am PT, 2pm ET would be good for me or\n12pm PT, 3pm ET\n\nAn our later is \"possible\" but sub-optimal.  Friday AM-midday ET also WFM.  Afternoon not so great.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/165517065",
    "html_url": "https://github.com/jupyter/notebook/issues/878#issuecomment-165517065",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/878",
    "id": 165517065,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTUxNzA2NQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-17T17:10:04Z",
    "updated_at": "2015-12-17T17:10:04Z",
    "author_association": "MEMBER",
    "body": "I probably can make it too. \n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/165519726",
    "html_url": "https://github.com/jupyter/notebook/issues/878#issuecomment-165519726",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/878",
    "id": 165519726,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTUxOTcyNg==",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-17T17:20:26Z",
    "updated_at": "2015-12-17T17:20:26Z",
    "author_association": "MEMBER",
    "body": "If I have to choose I would do it tomorrow, so we give another 24 hs to the things raised here (in other discussion and the PR itself), but if we are doing it today, I would prefer around/after 12pm PT.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/165520129",
    "html_url": "https://github.com/jupyter/notebook/issues/878#issuecomment-165520129",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/878",
    "id": 165520129,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTUyMDEyOQ==",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-17T17:22:13Z",
    "updated_at": "2015-12-17T17:22:13Z",
    "author_association": "MEMBER",
    "body": "Is there a hackpad for this meeting?\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/165521341",
    "html_url": "https://github.com/jupyter/notebook/issues/878#issuecomment-165521341",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/878",
    "id": 165521341,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTUyMTM0MQ==",
    "user": {
      "login": "parente",
      "id": 153745,
      "node_id": "MDQ6VXNlcjE1Mzc0NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/153745?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/parente",
      "html_url": "https://github.com/parente",
      "followers_url": "https://api.github.com/users/parente/followers",
      "following_url": "https://api.github.com/users/parente/following{/other_user}",
      "gists_url": "https://api.github.com/users/parente/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/parente/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/parente/subscriptions",
      "organizations_url": "https://api.github.com/users/parente/orgs",
      "repos_url": "https://api.github.com/users/parente/repos",
      "events_url": "https://api.github.com/users/parente/events{/privacy}",
      "received_events_url": "https://api.github.com/users/parente/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-17T17:27:06Z",
    "updated_at": "2015-12-17T17:27:20Z",
    "author_association": "MEMBER",
    "body": "Friday would be better here too if possible.\n\n/cc @lbustelo\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/165523411",
    "html_url": "https://github.com/jupyter/notebook/issues/878#issuecomment-165523411",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/878",
    "id": 165523411,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTUyMzQxMQ==",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-17T17:35:44Z",
    "updated_at": "2015-12-17T17:35:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "I like Damian's idea of having the meeting tomorrow. That will give me\ntoday to work on the implementation and allow more discussion.n We also may\nget more turn out with the extra day notice.\n\nI propose 10am PST on appear.in or bluejeans to allow our \"further east\"\nfolks to participate more easily. How does that sound?\n\nOn Thu, Dec 17, 2015 at 9:27 AM, Peter Parente notifications@github.com\nwrote:\n\n> Friday would be better here too if possible.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/jupyter/notebook/issues/878#issuecomment-165521341.\n\n## \n\nBrian E. Granger\nAssociate Professor of Physics and Data Science\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/165545589",
    "html_url": "https://github.com/jupyter/notebook/issues/878#issuecomment-165545589",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/878",
    "id": 165545589,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTU0NTU4OQ==",
    "user": {
      "login": "blink1073",
      "id": 2096628,
      "node_id": "MDQ6VXNlcjIwOTY2Mjg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2096628?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blink1073",
      "html_url": "https://github.com/blink1073",
      "followers_url": "https://api.github.com/users/blink1073/followers",
      "following_url": "https://api.github.com/users/blink1073/following{/other_user}",
      "gists_url": "https://api.github.com/users/blink1073/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blink1073/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blink1073/subscriptions",
      "organizations_url": "https://api.github.com/users/blink1073/orgs",
      "repos_url": "https://api.github.com/users/blink1073/repos",
      "events_url": "https://api.github.com/users/blink1073/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blink1073/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-17T18:48:55Z",
    "updated_at": "2015-12-17T18:51:27Z",
    "author_association": "MEMBER",
    "body": "I will be unavailable for tomorrow, but would like to suggest the model used by git for chaining configuration files together:\n\n\"If not set explicitly with --file, there are four files where git config will search for configuration options:\n\n`$(prefix)/etc/gitconfig`\nSystem-wide configuration file.\n\n`$XDG_CONFIG_HOME/git/config`\nSecond user-specific configuration file. If $XDG_CONFIG_HOME is not set or empty, \n$HOME/.config/git/config will be used. Any single-valued variable set in this file will be overwritten by \nwhatever is in ~/.gitconfig. It is a good idea not to create this file if you sometimes use older versions of Git, as support for this file was added fairly recently.\n\n`~/.gitconfig`\nUser-specific configuration file. Also called \"global\" configuration file.\n\n`$GIT_DIR/config`\nRepository specific configuration file.\n\nIf no further options are given, all reading options will read all of these files that are available.\nIf the global or the system-wide configuration file are not available they will be ignored. \nIf the repository configuration file is not available or readable, git config will exit with a non-zero \nerror code. However, in neither case will an error message be issued.\n\nThe files are read in the order given above, with last value found taking precedence over values \nread earlier. When multiple values are taken then all values of a key from all files will be used.\n\nAll writing options will per default write to the repository specific configuration file. Note that this \nalso affects options like --replace-all and --unset. git config will only ever change one file at a time.\n\nYou can override these rules either by command-line options or by environment variables. \nThe --global and the --system options will limit the file used to the global or system-wide file respectively. \nThe GIT_CONFIG environment variable has a similar effect, but you can specify any filename you want.\"\n\nhttps://www.kernel.org/pub/software/scm/git/docs/git-config.html\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/165577320",
    "html_url": "https://github.com/jupyter/notebook/issues/878#issuecomment-165577320",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/878",
    "id": 165577320,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTU3NzMyMA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-17T20:45:01Z",
    "updated_at": "2015-12-17T20:45:01Z",
    "author_association": "MEMBER",
    "body": "We can also push that a few days down the road, I'm not sure there is an urgent need to do that now, as 4.1 is not yet out. \n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/165578113",
    "html_url": "https://github.com/jupyter/notebook/issues/878#issuecomment-165578113",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/878",
    "id": 165578113,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTU3ODExMw==",
    "user": {
      "login": "bollwyvl",
      "id": 45380,
      "node_id": "MDQ6VXNlcjQ1Mzgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/45380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bollwyvl",
      "html_url": "https://github.com/bollwyvl",
      "followers_url": "https://api.github.com/users/bollwyvl/followers",
      "following_url": "https://api.github.com/users/bollwyvl/following{/other_user}",
      "gists_url": "https://api.github.com/users/bollwyvl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bollwyvl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bollwyvl/subscriptions",
      "organizations_url": "https://api.github.com/users/bollwyvl/orgs",
      "repos_url": "https://api.github.com/users/bollwyvl/repos",
      "events_url": "https://api.github.com/users/bollwyvl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bollwyvl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-17T20:48:47Z",
    "updated_at": "2015-12-17T20:48:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'll try to make it, but have a company event.\n\nSo we're going to use `npm` Real Soon Now, but need to at least _work with_ `virtualenv/pip` and `conda` now. For the end user, that's all they want to do, or maybe some GUI stuff, not touch magic named files in five places or run a bunch of CLI.\n\nLet's also try to make developers happy, and ease them into the npm world (lotta bower out there right now).\n\nAnd let's try to make sysadmins happy. A surrogate for this is: how simply can I use binder to make a demo of my software? If you are doing a py/js job and `requirements.txt` or `environment.yml` isn't enough and you need a `Dockerfile`, it's too hard.\n\nI am :+1: allowing enabling extensions from all the places, as suggested... and would like to see this wrapped as a switch to `nbextension install`, even if it its included elsewhere. I would prefer to see a data-first approach, have never liked the python config files. JSON is validatable, and has implementations everywhere.\n\nAs to the chaining: I almost would rather see the behavior like lodash's `_.merge`, but the lists are still a problem. Germaine, here: `server_extensions` should really be a hash :) Then, you could opt out into or out of an extension by setting it to `True/False`\n\nThe version stuff is scary, and treading on what a real package manager should do, but if it's an identified need, we should go ahead and address it.\n\nSo, with the those assumptions and:\n- you have a real `setup.py` package that has already been installed\n- somewhere in that package, you have a folder which contains:\n  - `package.json`...\n    - with _at least_ `name`, `version` and `main`\n  - and `__init__.py` so that python can find it (`setuptools.path:style`)\n\n...changing the command to make the positional argument optional, and accept `--py`:\n\n``` shell\n$> jupyter nbextension install --prefix=\"${CONDA_ENV_PATH}\" \\\n  --py=nbgrader.nbextensions.assignment_list.static \\\n  --enable\n\nInstalling and enabling nbextension to `{prefix}` from python package `nbgrader`...\n... found package.json\n  ... found name `nbgrader.assignment_list`\n  ... found version `0.2.0`\n    ... creating `nbgrader.assignment_list@0.2.0`\n       ... `0.2.0` is newer than previous version in `nbgrader.assignment_list` (`0.1.0`)\n         ... removing `nbgrader.assignment_list`\n         ... copying `nbgrader.assignment_list@0.2.0` to `nbgrader.assignment_list`   \n  ... found main `main.js`\n    ... `nbgrader.assignment_list/main` already enabled\n```\n\nSpeaking of \"standard package management\"... being able to communicate all of that at install time with setuptools `entry_points` would be an option:\n\n``` py\n#setup.py\nsetup(\n    #...\n    entry_points={\n        'jupyter.nbextension': [\n            'nbgrader.assignment_list = nbgrader.nbextensions.assignment_list.static',\n        ],\n        'jupyter.server_extension': [\n            'nbgrader = nbgrader.nbextensions.assignment_list:load_jupyter_server_extension',\n        ],\n        #...\n)\n```\n\n...but there are probably complexities i am missing: environments (should be detectable), hub deployments, etc. I would really rather see the config files as a way to _opt out of_ or _customize_ what happens at the package manager level, rather than a necessary step for every single installed package.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/165578924",
    "html_url": "https://github.com/jupyter/notebook/issues/878#issuecomment-165578924",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/878",
    "id": 165578924,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTU3ODkyNA==",
    "user": {
      "login": "sccolbert",
      "id": 137289,
      "node_id": "MDQ6VXNlcjEzNzI4OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/137289?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sccolbert",
      "html_url": "https://github.com/sccolbert",
      "followers_url": "https://api.github.com/users/sccolbert/followers",
      "following_url": "https://api.github.com/users/sccolbert/following{/other_user}",
      "gists_url": "https://api.github.com/users/sccolbert/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sccolbert/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sccolbert/subscriptions",
      "organizations_url": "https://api.github.com/users/sccolbert/orgs",
      "repos_url": "https://api.github.com/users/sccolbert/repos",
      "events_url": "https://api.github.com/users/sccolbert/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sccolbert/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-17T20:52:13Z",
    "updated_at": "2015-12-17T20:52:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "fyi - the original authors of Bower abandoned the project. Last I heard, they were looking for new maintainers.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/165865326",
    "html_url": "https://github.com/jupyter/notebook/issues/878#issuecomment-165865326",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/878",
    "id": 165865326,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTg2NTMyNg==",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-18T18:33:09Z",
    "updated_at": "2015-12-18T18:33:09Z",
    "author_association": "MEMBER",
    "body": "FYI, it does appear that people are taking Bower up, as evidenced by the first several blog posts at http://bower.io/blog/\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/165904777",
    "html_url": "https://github.com/jupyter/notebook/issues/878#issuecomment-165904777",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/878",
    "id": 165904777,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTkwNDc3Nw==",
    "user": {
      "login": "fperez",
      "id": 57394,
      "node_id": "MDQ6VXNlcjU3Mzk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/57394?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fperez",
      "html_url": "https://github.com/fperez",
      "followers_url": "https://api.github.com/users/fperez/followers",
      "following_url": "https://api.github.com/users/fperez/following{/other_user}",
      "gists_url": "https://api.github.com/users/fperez/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fperez/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fperez/subscriptions",
      "organizations_url": "https://api.github.com/users/fperez/orgs",
      "repos_url": "https://api.github.com/users/fperez/repos",
      "events_url": "https://api.github.com/users/fperez/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fperez/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-18T21:46:56Z",
    "updated_at": "2015-12-18T21:46:56Z",
    "author_association": "MEMBER",
    "body": "For reference, notes of the Dec. 18 meeting are [in this hackpad](https://jupyter.hackpad.com/NBextensions-4.x-improvements-cJeFDgYhaLY).\n",
    "performed_via_github_app": null
  }
]
