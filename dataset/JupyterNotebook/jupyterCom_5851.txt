[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/722715228",
    "html_url": "https://github.com/jupyter/notebook/issues/5851#issuecomment-722715228",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5851",
    "id": 722715228,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMjcxNTIyOA==",
    "user": {
      "login": "kevin-bates",
      "id": 22599560,
      "node_id": "MDQ6VXNlcjIyNTk5NTYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/22599560?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevin-bates",
      "html_url": "https://github.com/kevin-bates",
      "followers_url": "https://api.github.com/users/kevin-bates/followers",
      "following_url": "https://api.github.com/users/kevin-bates/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevin-bates/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevin-bates/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevin-bates/subscriptions",
      "organizations_url": "https://api.github.com/users/kevin-bates/orgs",
      "repos_url": "https://api.github.com/users/kevin-bates/repos",
      "events_url": "https://api.github.com/users/kevin-bates/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevin-bates/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-06T00:03:18Z",
    "updated_at": "2020-11-06T00:03:18Z",
    "author_association": "MEMBER",
    "body": "@noah1510 - thank you for opening this issue and the great detail.\r\n\r\nIn stepping through the [`gettext.translation()`](https://github.com/python/cpython/blob/3.6/Lib/gettext.py#L506-L534) method that [notebook uses](https://github.com/jupyter/notebook/blob/master/notebook/transutils.py#L12) I think the crux of the issue is that notebook doesn't provide a set of English locales in `notebook/i18n/en/LC_MESSAGES/`.  Were that the case, then you'd get the correct behavior relative to the LANGUAGE env.\r\n\r\nThat is, you'd get English translations using `LANGUAGE=en:ja jupyter notebook --help` and Japanese translations using `LANGUAGE=ja:en jupyter notebook --help`.\r\n\r\n> After some experimentation I noticed that for example if Japanese (ja) is somewhere in the list of languages, it is always preferred and the order is completely ignored.\r\n\r\nIf you run `LANGUAGE=ru:zh:ja jupyter notebook --help` you'll find that Russian help strings are produced.  Removing `ru` then yields Chinese strings, etc.  Only embedded 'en' entries (prior to a supported locale) are problematic since there are no `en` files.\r\n\r\nWith respect to this case:\r\n```\r\nLC_ALL=ja_JP.UTF-8 LANGUAGE=de jupyter notebook --help\r\n```\r\n_should not_ yield Japanese when German translations are not available - at least per the code in `gettext.find` since it looks for the [_first_ env containing a value](https://github.com/python/cpython/blob/3.6/Lib/gettext.py#L472-L476) using the order you gave (LANGUAGE > LC_ALL [> LC_MESSAGES] > LANG).  So because it used the LANGUAGE value and because `de` has no entries, it winds up returning the `NullTranslations` class instance, which (I'm assuming) just returns what string is passed as an argument to `_()` (the returned translation class's `gettext` method) and resulting in English text.\r\n\r\nIn order to provide a message indicating that a user's language is not available we'd have to know that  one of `LANGUAGE, LC_ALL, LC_MESSAGES, LANG` is set - which, today, is completely hidden from notebook - then determine that the NullTranslations instance is in use in order to log such a message.  \r\n\r\nI really don't think it's worth our while to maintain a duplicate set of strings for `en` so I'm not sure how to address multiple LANGUAGE entries that embed `'en'`.\r\n\r\nDid you want to take a crack at providing a message if no desired translations are found?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/722949200",
    "html_url": "https://github.com/jupyter/notebook/issues/5851#issuecomment-722949200",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5851",
    "id": 722949200,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMjk0OTIwMA==",
    "user": {
      "login": "noah1510",
      "id": 14131388,
      "node_id": "MDQ6VXNlcjE0MTMxMzg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/14131388?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/noah1510",
      "html_url": "https://github.com/noah1510",
      "followers_url": "https://api.github.com/users/noah1510/followers",
      "following_url": "https://api.github.com/users/noah1510/following{/other_user}",
      "gists_url": "https://api.github.com/users/noah1510/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/noah1510/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/noah1510/subscriptions",
      "organizations_url": "https://api.github.com/users/noah1510/orgs",
      "repos_url": "https://api.github.com/users/noah1510/repos",
      "events_url": "https://api.github.com/users/noah1510/events{/privacy}",
      "received_events_url": "https://api.github.com/users/noah1510/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-06T08:31:05Z",
    "updated_at": "2020-11-06T08:31:05Z",
    "author_association": "NONE",
    "body": "> Did you want to take a crack at providing a message if no desired translations are found?\r\n\r\nI would like to but I don't have time for that at the moment to learn more python and make myself familiar with a new codebase.\r\n\r\n> I really don't think it's worth our while to maintain a duplicate set of strings for en so I'm not sure how to address multiple LANGUAGE entries that embed 'en'.\r\n\r\nWould it be possible to simply use the NullTranslation if en is the requested language?\r\n\r\n> should not yield Japanese when German translations are not available - at least per the code in gettext.find since it looks for the first env containing a value using the order you gave (LANGUAGE > LC_ALL [> LC_MESSAGES] > LANG).\r\n\r\nI didn't look at the code at all and was just talking about the behavior I expected.\r\n\r\nI noticed that when I look through the [code](https://github.com/python/cpython/blob/3.6/Lib/gettext.py#L474-L476) that changing two lines by removing the break and by appending the rest, should result in the expected behavior for that case:\r\n\r\n```\r\n            if val:\r\n                languages = languages + val.split(':')\r\n                \r\n```\r\n\r\ninstead of:\r\n\r\n\r\n```\r\n            if val:\r\n                languages = val.split(':')\r\n                break\r\n```",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/723186920",
    "html_url": "https://github.com/jupyter/notebook/issues/5851#issuecomment-723186920",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5851",
    "id": 723186920,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyMzE4NjkyMA==",
    "user": {
      "login": "kevin-bates",
      "id": 22599560,
      "node_id": "MDQ6VXNlcjIyNTk5NTYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/22599560?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevin-bates",
      "html_url": "https://github.com/kevin-bates",
      "followers_url": "https://api.github.com/users/kevin-bates/followers",
      "following_url": "https://api.github.com/users/kevin-bates/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevin-bates/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevin-bates/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevin-bates/subscriptions",
      "organizations_url": "https://api.github.com/users/kevin-bates/orgs",
      "repos_url": "https://api.github.com/users/kevin-bates/repos",
      "events_url": "https://api.github.com/users/kevin-bates/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevin-bates/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-06T16:55:48Z",
    "updated_at": "2020-11-06T16:55:48Z",
    "author_association": "MEMBER",
    "body": "> Would it be possible to simply use the NullTranslation if en is the requested language?\r\n\r\nThat's what happens today if `en` was the only language in the list - just as when there are no translations for language 'xx'.  The issue appears to be that the `gettext` implementation is only considering existing files, so when language 'xx' (which includes 'en' in this case) has no translation files (`notebook.mo`) that language is dropped out of the list.  To preserve its presence, fairly significant changes would be required to the `find` and `translation` methods.  In addition, you'd need to convey that this behavior is desired for 'en' - which would probably be akin to introducing the idea of a \"default\" language, etc.\r\n\r\n> I noticed that when I look through the code that changing two lines by removing the break and by appending the rest, should result in the expected behavior for that case:\r\n\r\nThat's correct, but I think the bigger issues occur when actually processing the hierarchy of found languages and the requirement that each be associated with a .mo file.\r\n\r\nLooking at how these .mo files get created, they are produced during the build via `pybabel` (see [`CompileBackendTranslation`](https://github.com/jupyter/notebook/blob/master/setupbase.py#L337)) and I suppose that could be extended to use `pybabel extract` and `pybabel init` to produce `en_US` entries on the fly - although we'd need to understand the impact to the build relative to the likelihood users are adding multiple languages to `LANGUAGE` where one entry is an embedded `en` - and prior entries have no translations (which I would guess is rare).  That said, it might be worth determining the impact of an extract/init/compile sequence for `en_US` to the build - since that kind of thing is not entirely time-critical and existence of `en_US` would likely solve these issues.  \r\n\r\nWe'd still have the message to display, but even that gets much easier since you could then assume that a `NullTranslations` instance truly means 'no translations were found'.",
    "performed_via_github_app": null
  }
]
