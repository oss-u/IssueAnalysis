[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/530126632",
    "html_url": "https://github.com/jupyter/notebook/issues/4873#issuecomment-530126632",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4873",
    "id": 530126632,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDEyNjYzMg==",
    "user": {
      "login": "bollwyvl",
      "id": 45380,
      "node_id": "MDQ6VXNlcjQ1Mzgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/45380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bollwyvl",
      "html_url": "https://github.com/bollwyvl",
      "followers_url": "https://api.github.com/users/bollwyvl/followers",
      "following_url": "https://api.github.com/users/bollwyvl/following{/other_user}",
      "gists_url": "https://api.github.com/users/bollwyvl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bollwyvl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bollwyvl/subscriptions",
      "organizations_url": "https://api.github.com/users/bollwyvl/orgs",
      "repos_url": "https://api.github.com/users/bollwyvl/repos",
      "events_url": "https://api.github.com/users/bollwyvl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bollwyvl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-10T21:24:23Z",
    "updated_at": "2019-09-10T21:24:23Z",
    "author_association": "CONTRIBUTOR",
    "body": "Very close!\n\nfrom notebook.notebookapp import NotebookApp\n\napp = NotebookApp()\n\napp.initialize([])\n\n\nSquare brackets are the command line arguments. Might want to set port and\ntoken, if you actually want to talk to it.\n\nI've never given it a custom io_loop, though... Probably have to overload\n.start, as it always use the current one.\n\nMore:\n\nhttps://gist.github.com/bollwyvl/bd56b58ba0a078534272043327c52bd1\n\nOn Tue, Sep 10, 2019, 13:27 Matthew Rocklin <notifications@github.com>\nwrote:\n\n> I have an existing Python process running a Tornado web application (Dask)\n> and I would like to run a Jupyter notebook server from within this process,\n> on the same event loop. I looked around and couldn't find any good\n> documentation on how to start Jupyter from within Python. Is this easy?\n>\n> Ideally I would do something like the following:\n>\n> from notebook import Server\n>\n> io_loop = tornado.ioloop.IOLoop.current()\n>\n> server = Server(io_loop=io_loop)await server.start()\n>\n> â€”\n> You are receiving this because you are subscribed to this thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/jupyter/notebook/issues/4873?email_source=notifications&email_token=AAALCRHIHL3ZSSM5VAMXR5DQI7KJTA5CNFSM4IVKQCT2YY3PNVWWK3TUL52HS4DFUVEXG43VMWVGG33NNVSW45C7NFSM4HKQKPZA>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AAALCRCWQ7HVOUGTH3PYDWDQI7KJTANCNFSM4IVKQCTQ>\n> .\n>\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/530156687",
    "html_url": "https://github.com/jupyter/notebook/issues/4873#issuecomment-530156687",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4873",
    "id": 530156687,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDE1NjY4Nw==",
    "user": {
      "login": "mrocklin",
      "id": 306380,
      "node_id": "MDQ6VXNlcjMwNjM4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mrocklin",
      "html_url": "https://github.com/mrocklin",
      "followers_url": "https://api.github.com/users/mrocklin/followers",
      "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
      "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
      "organizations_url": "https://api.github.com/users/mrocklin/orgs",
      "repos_url": "https://api.github.com/users/mrocklin/repos",
      "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mrocklin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-10T23:19:59Z",
    "updated_at": "2019-09-10T23:19:59Z",
    "author_association": "NONE",
    "body": "That works!  Nice.\r\n\r\nOK, so if providing an event loop is hard, I imagine that it's also quite hard to provide my own, already running Tornado HTTPServer.  True?  It would be interesting to have only one of these running, assuming that Dask and Jupyter don't have any overlapping routes.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/530171349",
    "html_url": "https://github.com/jupyter/notebook/issues/4873#issuecomment-530171349",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4873",
    "id": 530171349,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDE3MTM0OQ==",
    "user": {
      "login": "bollwyvl",
      "id": 45380,
      "node_id": "MDQ6VXNlcjQ1Mzgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/45380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bollwyvl",
      "html_url": "https://github.com/bollwyvl",
      "followers_url": "https://api.github.com/users/bollwyvl/followers",
      "following_url": "https://api.github.com/users/bollwyvl/following{/other_user}",
      "gists_url": "https://api.github.com/users/bollwyvl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bollwyvl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bollwyvl/subscriptions",
      "organizations_url": "https://api.github.com/users/bollwyvl/orgs",
      "repos_url": "https://api.github.com/users/bollwyvl/repos",
      "events_url": "https://api.github.com/users/bollwyvl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bollwyvl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-11T00:35:11Z",
    "updated_at": "2019-09-11T00:35:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think one could...\r\n- ... overload [NotebookApp.init_webapp](https://github.com/jupyter/notebook/blob/6.0.1/notebook/notebookapp.py#L1434) to inject an existing http_server... \r\n  - `init_webapp` could be broken up to not conflate the initialization of `NotebookApp.web_app` and `NotebookApp.http_server` (which pretty much just owns the port and the SSL)\r\n    - but the relationship has been 1:1 to date, as far as i can tell\r\n- ... and teach the originally-launched [`Application.__call__`](https://github.com/tornadoweb/tornado/blob/v6.0.3/tornado/web.py#L2164) how to (sometimes) dispatch to this new `NotebookApp.__call__` (which i've never seen overload, but...)\r\n    - ... or use the [not-exactly-newfangled](https://github.com/tornadoweb/tornado/pull/1806) [callable adapter](https://github.com/tornadoweb/tornado/blob/v6.0.3/tornado/httpserver.py#L237) to multiplex\r\n    - ... or somehow bolt them all together with inheritance\r\n      - do you have a `web.Application` subclass someplace?\r\n\r\ni've usually been interested in taking the already-running, [somewhat idiosyncratic](https://github.com/jupyter/notebook/blob/6.0.1/notebook/notebookapp.py#L47) notebook tornado loop/server/app to run other things in process so i can muck about with their workings in response to yet other things (usually, kernels, contents, and nb/lab extension-interfacing REST APIs). I must confess, dask has not been one of them, preferring to leave it on the other side of the proxy :P",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/530172840",
    "html_url": "https://github.com/jupyter/notebook/issues/4873#issuecomment-530172840",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4873",
    "id": 530172840,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMDE3Mjg0MA==",
    "user": {
      "login": "mrocklin",
      "id": 306380,
      "node_id": "MDQ6VXNlcjMwNjM4MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/306380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mrocklin",
      "html_url": "https://github.com/mrocklin",
      "followers_url": "https://api.github.com/users/mrocklin/followers",
      "following_url": "https://api.github.com/users/mrocklin/following{/other_user}",
      "gists_url": "https://api.github.com/users/mrocklin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mrocklin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mrocklin/subscriptions",
      "organizations_url": "https://api.github.com/users/mrocklin/orgs",
      "repos_url": "https://api.github.com/users/mrocklin/repos",
      "events_url": "https://api.github.com/users/mrocklin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mrocklin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-11T00:43:30Z",
    "updated_at": "2019-09-11T00:43:30Z",
    "author_association": "NONE",
    "body": "It's always better to keep out the riff raff :)\n\nOn Tue, Sep 10, 2019, 5:35 PM Nicholas Bollweg <notifications@github.com>\nwrote:\n\n> I think one could...\n>\n>    - ... overload NotebookApp.init_webapp\n>    <https://github.com/jupyter/notebook/blob/6.0.1/notebook/notebookapp.py#L1434>\n>    to inject an existing http_server...\n>       - init_webapp could be broken up to not conflate the initialization\n>       of NotebookApp.web_app and NotebookApp.http_server (which pretty\n>       much just owns the port and the SSL)\n>          - but the relationship has been 1:1 to date, as far as i can tell\n>       - ... and teach the originally-launched Application.__call__\n>    <https://github.com/tornadoweb/tornado/blob/v6.0.3/tornado/web.py#L2164>\n>    how to (sometimes) dispatch to this new NotebookApp.__call__ (which\n>    i've never seen overload, but...)\n>       - ... or use the not-exactly-newfangled\n>       <https://github.com/tornadoweb/tornado/pull/1806> callable adapter\n>       <https://github.com/tornadoweb/tornado/blob/v6.0.3/tornado/httpserver.py#L237>\n>       to multiplex\n>       - ... or somehow bolt them all together with inheritance\n>          - do you have a web.Application subclass someplace?\n>\n> i've usually been interested in taking the already-running, somewhat\n> idiosyncratic\n> <https://github.com/jupyter/notebook/blob/6.0.1/notebook/notebookapp.py#L47>\n> notebook tornado loop/server/app to run other things in process so i can\n> muck about with their workings in response to yet other things (usually,\n> kernels, contents, and nb/lab extension-interfacing REST APIs). I must\n> confess, dask has not been one of them, preferring to leave it on the other\n> side of the proxy :P\n>\n> â€”\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/jupyter/notebook/issues/4873?email_source=notifications&email_token=AACKZTCZ7UZGCVYBFCN7JVTQJA4M7A5CNFSM4IVKQCT2YY3PNVWWK3TUL52HS4DFVREXG43VMVBW63LNMVXHJKTDN5WW2ZLOORPWSZGOD6M4LVI#issuecomment-530171349>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AACKZTGQPSRQFBQPSUZN4MTQJA4M7ANCNFSM4IVKQCTQ>\n> .\n>\n",
    "performed_via_github_app": null
  }
]
