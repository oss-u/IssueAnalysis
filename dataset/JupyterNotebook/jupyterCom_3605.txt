[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/389179885",
    "html_url": "https://github.com/jupyter/notebook/issues/3605#issuecomment-389179885",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3605",
    "id": 389179885,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTE3OTg4NQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-15T14:07:18Z",
    "updated_at": "2018-05-15T14:07:18Z",
    "author_association": "MEMBER",
    "body": "Does the new URL work if you use that in your browser?\r\n\r\nThis was changed in #3356 and refined in #3593. The idea is that when it's asked to listen on all interfaces, it shows the hostname of the computer it's running on, which can work from another computer.\r\n\r\nYour docker command maps the container port to a port on localhost, but the notebook running in the container doesn't know about that. E.g. you could ask Docker to put it on a different port, like 8889, and it would print out the URL with `8888`, because that's what the notebook server knows about. So it's kind of a coincidence that the `localhost:8888` URL works, albeit a fairly common coincidence.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/389204793",
    "html_url": "https://github.com/jupyter/notebook/issues/3605#issuecomment-389204793",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3605",
    "id": 389204793,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTIwNDc5Mw==",
    "user": {
      "login": "max-sixty",
      "id": 5635139,
      "node_id": "MDQ6VXNlcjU2MzUxMzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5635139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/max-sixty",
      "html_url": "https://github.com/max-sixty",
      "followers_url": "https://api.github.com/users/max-sixty/followers",
      "following_url": "https://api.github.com/users/max-sixty/following{/other_user}",
      "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions",
      "organizations_url": "https://api.github.com/users/max-sixty/orgs",
      "repos_url": "https://api.github.com/users/max-sixty/repos",
      "events_url": "https://api.github.com/users/max-sixty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/max-sixty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-15T15:15:39Z",
    "updated_at": "2018-05-15T15:15:39Z",
    "author_association": "NONE",
    "body": "Right, that description makes sense\r\n\r\n> Does the new URL work if you use that in your browser?\r\n\r\nUnfortunately not. IIRC `localhost` also did not work (though that doesn't seem consistent from your description, and I've reverted the upgrade so can't easily retest)\r\n\r\nCould we print an address that's likely to work? Or a config for the address to print?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/389208467",
    "html_url": "https://github.com/jupyter/notebook/issues/3605#issuecomment-389208467",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3605",
    "id": 389208467,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTIwODQ2Nw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-15T15:25:56Z",
    "updated_at": "2018-05-15T15:25:56Z",
    "author_association": "MEMBER",
    "body": "> Could we print an address that's likely to work?\r\n\r\nThat's what this is trying to do! It's hard to get right, though. The server doesn't know what name or IP address you need to reach the system it's running on - especially when there's port forwarding, tunnelling or proxying involved.\r\n\r\n> Or a config for the address to print?\r\n\r\nIt's probably reasonable to have a way to override this. Do you want to make a PR?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/389220445",
    "html_url": "https://github.com/jupyter/notebook/issues/3605#issuecomment-389220445",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3605",
    "id": 389220445,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTIyMDQ0NQ==",
    "user": {
      "login": "max-sixty",
      "id": 5635139,
      "node_id": "MDQ6VXNlcjU2MzUxMzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5635139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/max-sixty",
      "html_url": "https://github.com/max-sixty",
      "followers_url": "https://api.github.com/users/max-sixty/followers",
      "following_url": "https://api.github.com/users/max-sixty/following{/other_user}",
      "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions",
      "organizations_url": "https://api.github.com/users/max-sixty/orgs",
      "repos_url": "https://api.github.com/users/max-sixty/repos",
      "events_url": "https://api.github.com/users/max-sixty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/max-sixty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-15T15:59:35Z",
    "updated_at": "2018-05-15T15:59:35Z",
    "author_association": "NONE",
    "body": ">  It's hard to get right, though.\r\n\r\n👍 \r\n\r\nWe could know that a hash is unlikely to be correct, but could we in a systematic way? I'm not up on my networking - is my local called `localhost`?\r\n\r\n> Do you want to make a PR?\r\n\r\nYes. I'm going on vacation for ten days now, but let's see if anyone has any improvement over the config, and then I will.\r\n\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/389227237",
    "html_url": "https://github.com/jupyter/notebook/issues/3605#issuecomment-389227237",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3605",
    "id": 389227237,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTIyNzIzNw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-15T16:20:20Z",
    "updated_at": "2018-05-15T16:20:20Z",
    "author_association": "MEMBER",
    "body": "> We could know that a hash is unlikely to be correct, but could we in a systematic way?\r\n\r\nI don't even know that it's unlikely to be correct. If you're managing a lot of machines, maybe you automatically assign hostnames in that format. I suspect that's what docker is doing, but you need some extra option to make them reachable at that name.\r\n\r\n> I'm not up on my networking - is my local called localhost?\r\n\r\nYup, localhost is a special name for the computer to access itself. But I think in the case of docker, each container counts as a separate machine, so something running in docker is not on 'localhost', unless you use the `-p` option to forward the port.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/389230701",
    "html_url": "https://github.com/jupyter/notebook/issues/3605#issuecomment-389230701",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3605",
    "id": 389230701,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4OTIzMDcwMQ==",
    "user": {
      "login": "max-sixty",
      "id": 5635139,
      "node_id": "MDQ6VXNlcjU2MzUxMzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5635139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/max-sixty",
      "html_url": "https://github.com/max-sixty",
      "followers_url": "https://api.github.com/users/max-sixty/followers",
      "following_url": "https://api.github.com/users/max-sixty/following{/other_user}",
      "gists_url": "https://api.github.com/users/max-sixty/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/max-sixty/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/max-sixty/subscriptions",
      "organizations_url": "https://api.github.com/users/max-sixty/orgs",
      "repos_url": "https://api.github.com/users/max-sixty/repos",
      "events_url": "https://api.github.com/users/max-sixty/events{/privacy}",
      "received_events_url": "https://api.github.com/users/max-sixty/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-15T16:31:39Z",
    "updated_at": "2018-05-15T16:31:45Z",
    "author_association": "NONE",
    "body": "Thanks for the replies\r\n\r\n> But I think in the case of docker, each container counts as a separate machine, so something running in docker is not on 'localhost', unless you use the -p option to forward the port.\r\n\r\nTBC, this was forwarding the port (otherwise I don't see how it could work with `localhost` either)",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/391014236",
    "html_url": "https://github.com/jupyter/notebook/issues/3605#issuecomment-391014236",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3605",
    "id": 391014236,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MTAxNDIzNg==",
    "user": {
      "login": "ftobia",
      "id": 144146,
      "node_id": "MDQ6VXNlcjE0NDE0Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/144146?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ftobia",
      "html_url": "https://github.com/ftobia",
      "followers_url": "https://api.github.com/users/ftobia/followers",
      "following_url": "https://api.github.com/users/ftobia/following{/other_user}",
      "gists_url": "https://api.github.com/users/ftobia/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ftobia/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ftobia/subscriptions",
      "organizations_url": "https://api.github.com/users/ftobia/orgs",
      "repos_url": "https://api.github.com/users/ftobia/repos",
      "events_url": "https://api.github.com/users/ftobia/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ftobia/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-22T14:36:28Z",
    "updated_at": "2018-05-22T14:36:28Z",
    "author_association": "NONE",
    "body": "I am running into this issue as well. A bugfix that would work for me is adding a param where the base URL can be overridden.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/392227346",
    "html_url": "https://github.com/jupyter/notebook/issues/3605#issuecomment-392227346",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3605",
    "id": 392227346,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjIyNzM0Ng==",
    "user": {
      "login": "brasie",
      "id": 29240784,
      "node_id": "MDQ6VXNlcjI5MjQwNzg0",
      "avatar_url": "https://avatars.githubusercontent.com/u/29240784?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brasie",
      "html_url": "https://github.com/brasie",
      "followers_url": "https://api.github.com/users/brasie/followers",
      "following_url": "https://api.github.com/users/brasie/following{/other_user}",
      "gists_url": "https://api.github.com/users/brasie/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brasie/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brasie/subscriptions",
      "organizations_url": "https://api.github.com/users/brasie/orgs",
      "repos_url": "https://api.github.com/users/brasie/repos",
      "events_url": "https://api.github.com/users/brasie/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brasie/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-26T01:56:18Z",
    "updated_at": "2018-05-26T01:56:18Z",
    "author_association": "NONE",
    "body": "Borrowing from discussion in a [StackOverflow thread](https://stackoverflow.com/questions/166506/finding-local-ip-addresses-using-pythons-stdlib), one could replace the [`ip = socket.gethostname()`](https://github.com/jupyter/notebook/blob/459b92cd239762d0a6cbb89d2ae0722eca19f182/notebook/notebookapp.py#L1343) with something like:\r\n\r\n```python\r\nwith socket.socket(socket.AF_INET, socket.SOCK_DGRAM) as s:\r\n    s.setsockopt(socket.SOL_SOCKET, socket.SO_BROADCAST, 1)\r\n    s.connect(('<broadcast>', 0))\r\n    ip = s.getsockname()[0]\r\n```\r\n\r\nWhen running within Docker, this gives a URL of `http://172.17.0.2:8888/?token=...`.  The `172.17.0.2` address is the container's IP within its Docker network, and I am able to connect to the URL in my browser running on the same physical machine (without doing any `-p` port forwarding, even).",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/392313450",
    "html_url": "https://github.com/jupyter/notebook/issues/3605#issuecomment-392313450",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3605",
    "id": 392313450,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5MjMxMzQ1MA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-27T08:06:42Z",
    "updated_at": "2018-05-27T08:06:42Z",
    "author_association": "MEMBER",
    "body": "Thanks, that's interesting. A few concerns:\r\n\r\n-  Is it reliably quick? We've run into some issues before where certain operations involving sockets can be very slow (30 or 60 seconds) depending on the network configuration and state.\r\n- If the machine has multiple IPs, how likely is it that it's getting the one we will want to use? I don't think there's any way to get that 100% assured, but I don't know how to make the best guess.\r\n- The SO answer with that snippet says \"This should work on any LAN that allows UDP broadcast\". What's the failure mode if UDP broadcast is not allowed? And how common is that?\r\n\r\n@minrk you understand this stuff better than I do, could you take a look at the suggestion above?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/393873923",
    "html_url": "https://github.com/jupyter/notebook/issues/3605#issuecomment-393873923",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3605",
    "id": 393873923,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5Mzg3MzkyMw==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-01T13:04:03Z",
    "updated_at": "2018-06-01T13:04:03Z",
    "author_association": "MEMBER",
    "body": "I don't believe it's possible to get the right answer every time, or even most of the time, inside a container because the container doesn't know what port or ip is accessible from the outside:\r\n\r\n- the port may not match (and typically doesn't), and the actual accessible port cannot be retrieved from inside the container unless we add something explicit like a `PUBLIC_PORT` or `PUBLIC_URL` env.\r\n- the ip may not match, and there are lots of different right answers, depending on context not available inside the container:\r\n  - localhost generally works for `--net host` and local docker\r\n  - docker ip is right if docker network is local (not with docker-machine)\r\n  - with docker-machine, the `docker-machine ip` is what should be used, not localhost or any local ip discoverable from inside the container\r\n\r\nThe only general solution, I think, is to have a \"connect_host\" config that overrides the connectable address to be echoed here. It should include both the hostname and port in order to handle the fact that the port cannot be known from inside the container. This would have to come from the user manually at start time. With that, we could have:\r\n\r\n    docker run --rm -e JUPYTER_CONNECT_HOST=http://$(docker-machine ip mymachine):9999 -p9999:8888 -it jupyter/base-notebook\r\n\r\necho the correct URL:\r\n\r\n    http://192.168.99.100:9999/?token=...\r\n\r\nFrom the utilities we already have, we can change the default something like what @BradenAtSiemens proposes, by echoing the first or all of `jupyter_client.localinterfaces.public_ips()`, which gives\r\n\r\n    ['172.17.0.3']\r\n\r\nin a docker container. However, for me (on macOS), this ip does *not* work, only localhost does, so we could either show *both* this ip and localhost, or just go back to using localhost in this case.\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/394102369",
    "html_url": "https://github.com/jupyter/notebook/issues/3605#issuecomment-394102369",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3605",
    "id": 394102369,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDEwMjM2OQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-02T17:10:13Z",
    "updated_at": "2018-06-02T17:10:13Z",
    "author_association": "MEMBER",
    "body": "I've tagged this as 'help wanted' for someone to have a go at implementing @minrk 's suggestion in the message above, to make a configurable connect_host option.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/395335489",
    "html_url": "https://github.com/jupyter/notebook/issues/3605#issuecomment-395335489",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3605",
    "id": 395335489,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTMzNTQ4OQ==",
    "user": {
      "login": "tomjorquera",
      "id": 4150873,
      "node_id": "MDQ6VXNlcjQxNTA4NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4150873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tomjorquera",
      "html_url": "https://github.com/tomjorquera",
      "followers_url": "https://api.github.com/users/tomjorquera/followers",
      "following_url": "https://api.github.com/users/tomjorquera/following{/other_user}",
      "gists_url": "https://api.github.com/users/tomjorquera/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tomjorquera/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tomjorquera/subscriptions",
      "organizations_url": "https://api.github.com/users/tomjorquera/orgs",
      "repos_url": "https://api.github.com/users/tomjorquera/repos",
      "events_url": "https://api.github.com/users/tomjorquera/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tomjorquera/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-07T08:22:14Z",
    "updated_at": "2018-06-07T13:42:34Z",
    "author_association": "NONE",
    "body": "If I understood @minrk proposal correctly, the proposal would be to add a new option to `NotebookApp` to override the url string in `display_url`. Is that right?\r\n\r\nSeems to me that in the general case, it would be useful for this option to also override the protocol part (also the `base_url` maybe?). For example, when running the service as http behind a https proxy. What do you think?\r\n\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/395350952",
    "html_url": "https://github.com/jupyter/notebook/issues/3605#issuecomment-395350952",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3605",
    "id": 395350952,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTM1MDk1Mg==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-07T09:13:24Z",
    "updated_at": "2018-06-07T09:13:24Z",
    "author_association": "MEMBER",
    "body": "Basically, yes. Set the display_url directly, without anything being generated from other values.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/395428121",
    "html_url": "https://github.com/jupyter/notebook/issues/3605#issuecomment-395428121",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3605",
    "id": 395428121,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTQyODEyMQ==",
    "user": {
      "login": "tomjorquera",
      "id": 4150873,
      "node_id": "MDQ6VXNlcjQxNTA4NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4150873?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tomjorquera",
      "html_url": "https://github.com/tomjorquera",
      "followers_url": "https://api.github.com/users/tomjorquera/followers",
      "following_url": "https://api.github.com/users/tomjorquera/following{/other_user}",
      "gists_url": "https://api.github.com/users/tomjorquera/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tomjorquera/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tomjorquera/subscriptions",
      "organizations_url": "https://api.github.com/users/tomjorquera/orgs",
      "repos_url": "https://api.github.com/users/tomjorquera/repos",
      "events_url": "https://api.github.com/users/tomjorquera/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tomjorquera/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-07T13:53:19Z",
    "updated_at": "2018-06-07T13:53:19Z",
    "author_association": "NONE",
    "body": "Ok so I created PR #3668  to implement this. I kept the `connect_host` name for now, but maybe it could be changed to something more explicity like `override_display_host`.\r\n\r\nNote that I also implemented it to override the `protocol` and `base_url` parts of the URL (as with my previous comment).",
    "performed_via_github_app": null
  }
]
