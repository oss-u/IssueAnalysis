[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/145018074",
    "html_url": "https://github.com/jupyter/notebook/issues/518#issuecomment-145018074",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/518",
    "id": 145018074,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTAxODA3NA==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-02T13:19:09Z",
    "updated_at": "2015-10-02T13:19:09Z",
    "author_association": "MEMBER",
    "body": "This is a known issue in the IPython kernel that it tracks the parent header as global state, so async output shows up in the most recently executed cell, rather than the 'origin' cell. Tracking the origin is hard to do in general for Python, since you can pass events back and forth between threads, and then it's ambiguous who 'owns' a thread's output. The current behavior is most similar to async output from threads in the terminal, where it just keeps writing, wherever the current 'cursor' output is.\n\nFor kernels that actually do keep track of parents associated with threaded output, they should not send the `status: idle` message until _all threads_ associated with that execution have completed, and the output is fully resolved. IPython specifically chooses to not do this, but that is a choice IPython makes, not Jupyter.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/146553323",
    "html_url": "https://github.com/jupyter/notebook/issues/518#issuecomment-146553323",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/518",
    "id": 146553323,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NjU1MzMyMw==",
    "user": {
      "login": "wellecks",
      "id": 680489,
      "node_id": "MDQ6VXNlcjY4MDQ4OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/680489?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wellecks",
      "html_url": "https://github.com/wellecks",
      "followers_url": "https://api.github.com/users/wellecks/followers",
      "following_url": "https://api.github.com/users/wellecks/following{/other_user}",
      "gists_url": "https://api.github.com/users/wellecks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wellecks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wellecks/subscriptions",
      "organizations_url": "https://api.github.com/users/wellecks/orgs",
      "repos_url": "https://api.github.com/users/wellecks/repos",
      "events_url": "https://api.github.com/users/wellecks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wellecks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-08T13:56:22Z",
    "updated_at": "2015-10-08T13:56:22Z",
    "author_association": "NONE",
    "body": "Ok thanks - good to know. For the Spark kernel we'll look into sending the `idle` message later, or changing it to behave like the Python kernel\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/296861548",
    "html_url": "https://github.com/jupyter/notebook/issues/518#issuecomment-296861548",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/518",
    "id": 296861548,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5Njg2MTU0OA==",
    "user": {
      "login": "JamiesHQ",
      "id": 476301,
      "node_id": "MDQ6VXNlcjQ3NjMwMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/476301?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JamiesHQ",
      "html_url": "https://github.com/JamiesHQ",
      "followers_url": "https://api.github.com/users/JamiesHQ/followers",
      "following_url": "https://api.github.com/users/JamiesHQ/following{/other_user}",
      "gists_url": "https://api.github.com/users/JamiesHQ/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JamiesHQ/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JamiesHQ/subscriptions",
      "organizations_url": "https://api.github.com/users/JamiesHQ/orgs",
      "repos_url": "https://api.github.com/users/JamiesHQ/repos",
      "events_url": "https://api.github.com/users/JamiesHQ/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JamiesHQ/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-25T00:57:37Z",
    "updated_at": "2017-04-25T00:57:37Z",
    "author_association": "MEMBER",
    "body": "@wellecks : We're doing a little housekeeping on our issue log and I noticed this thread from 2015. Has this issue been resolved to your satisfaction and can it be closed? I'll be adding a \"Reference\" label to the closed issue to note its importance and to help other users who may have a similar question. \r\n\r\nYou may also be interested in this Spark discussion on our mailing list: https://groups.google.com/forum/#!searchin/jupyter/Spark%7Csort:relevance/jupyter/O1KnaEPqCM4/1B1vGkbwEAAJ\r\n\r\nthanks!",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/296871590",
    "html_url": "https://github.com/jupyter/notebook/issues/518#issuecomment-296871590",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/518",
    "id": 296871590,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5Njg3MTU5MA==",
    "user": {
      "login": "wellecks",
      "id": 680489,
      "node_id": "MDQ6VXNlcjY4MDQ4OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/680489?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wellecks",
      "html_url": "https://github.com/wellecks",
      "followers_url": "https://api.github.com/users/wellecks/followers",
      "following_url": "https://api.github.com/users/wellecks/following{/other_user}",
      "gists_url": "https://api.github.com/users/wellecks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wellecks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wellecks/subscriptions",
      "organizations_url": "https://api.github.com/users/wellecks/orgs",
      "repos_url": "https://api.github.com/users/wellecks/repos",
      "events_url": "https://api.github.com/users/wellecks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wellecks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-25T02:11:38Z",
    "updated_at": "2017-04-25T02:11:38Z",
    "author_association": "NONE",
    "body": "Sure, this can be closed - thanks",
    "performed_via_github_app": null
  }
]
