[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/134601374",
    "html_url": "https://github.com/jupyter/notebook/issues/332#issuecomment-134601374",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/332",
    "id": 134601374,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNDYwMTM3NA==",
    "user": {
      "login": "dsblank",
      "id": 168568,
      "node_id": "MDQ6VXNlcjE2ODU2OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/168568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsblank",
      "html_url": "https://github.com/dsblank",
      "followers_url": "https://api.github.com/users/dsblank/followers",
      "following_url": "https://api.github.com/users/dsblank/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsblank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsblank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsblank/subscriptions",
      "organizations_url": "https://api.github.com/users/dsblank/orgs",
      "repos_url": "https://api.github.com/users/dsblank/repos",
      "events_url": "https://api.github.com/users/dsblank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsblank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-25T14:19:19Z",
    "updated_at": "2015-08-25T14:19:19Z",
    "author_association": "MEMBER",
    "body": "This would be very useful in the classroom.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/134640355",
    "html_url": "https://github.com/jupyter/notebook/issues/332#issuecomment-134640355",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/332",
    "id": 134640355,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNDY0MDM1NQ==",
    "user": {
      "login": "ghost",
      "id": 10137,
      "node_id": "MDQ6VXNlcjEwMTM3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghost",
      "html_url": "https://github.com/ghost",
      "followers_url": "https://api.github.com/users/ghost/followers",
      "following_url": "https://api.github.com/users/ghost/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
      "organizations_url": "https://api.github.com/users/ghost/orgs",
      "repos_url": "https://api.github.com/users/ghost/repos",
      "events_url": "https://api.github.com/users/ghost/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghost/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-25T15:49:57Z",
    "updated_at": "2015-08-25T15:49:57Z",
    "author_association": "NONE",
    "body": "+1 This would be great for those us of who use Jupyter for education and teaching.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/134669246",
    "html_url": "https://github.com/jupyter/notebook/issues/332#issuecomment-134669246",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/332",
    "id": 134669246,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNDY2OTI0Ng==",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-25T16:55:01Z",
    "updated_at": "2015-08-25T16:57:30Z",
    "author_association": "MEMBER",
    "body": "What do you think the right place for the templates directory should be. `~/.jupyter/templates`?\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/134671190",
    "html_url": "https://github.com/jupyter/notebook/issues/332#issuecomment-134671190",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/332",
    "id": 134671190,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNDY3MTE5MA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-25T17:02:37Z",
    "updated_at": "2015-08-25T17:02:37Z",
    "author_association": "MEMBER",
    "body": "If template there is, then it should not be a directory, but on a per file basis. \nThe question is if template file there is, we probably want to fork the file at opening time, but then where to put the new one ?\n\nI'm ok on API to do that, we can bikeshed on when to trigger it. But I think it's basically a \"make a copy\" dialog that should get enhanced with name and location of new copy. \n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/134677546",
    "html_url": "https://github.com/jupyter/notebook/issues/332#issuecomment-134677546",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/332",
    "id": 134677546,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNDY3NzU0Ng==",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-25T17:25:23Z",
    "updated_at": "2015-08-25T17:25:23Z",
    "author_association": "MEMBER",
    "body": "To clarify, my proposal was, on the one hand to have the handler for the new template file extension to behave in the following way: create a copy in the current working directory. So it would be a per-file basis as you proposed.\nOn the other hand, the second part of the proposal is to create a means (like a new tab in the current dashboard) to access installed templates, independently of the current working directory.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/134677990",
    "html_url": "https://github.com/jupyter/notebook/issues/332#issuecomment-134677990",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/332",
    "id": 134677990,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNDY3Nzk5MA==",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-25T17:27:32Z",
    "updated_at": "2015-08-25T17:27:44Z",
    "author_association": "MEMBER",
    "body": "The extension could be `name.tpl.ipynb` so that older versions of ipython, and GitHub would still render and open templates it as regular notebooks files.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/134760773",
    "html_url": "https://github.com/jupyter/notebook/issues/332#issuecomment-134760773",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/332",
    "id": 134760773,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNDc2MDc3Mw==",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-25T22:31:41Z",
    "updated_at": "2015-08-25T22:31:41Z",
    "author_association": "MEMBER",
    "body": "Besides it would be a very simple way to get people started on https://try.jupyter.org/ and all.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/134881639",
    "html_url": "https://github.com/jupyter/notebook/issues/332#issuecomment-134881639",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/332",
    "id": 134881639,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzNDg4MTYzOQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-26T07:42:33Z",
    "updated_at": "2015-08-26T07:42:33Z",
    "author_association": "MEMBER",
    "body": "Ah, my though was that any file on the system could be template. Not on a specific dir. That the case of debian docs in /usr/share/docs/.\n\nYou actually don't really need an extension you can just assume that any read-only file is a template. \n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/145956939",
    "html_url": "https://github.com/jupyter/notebook/issues/332#issuecomment-145956939",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/332",
    "id": 145956939,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE0NTk1NjkzOQ==",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-10-06T18:31:13Z",
    "updated_at": "2015-10-06T18:31:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think this goes under the much broader area of documentation. Really, any python, R, Julia project might want to ship notebooks that have documentation, examples, etc.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/158824294",
    "html_url": "https://github.com/jupyter/notebook/issues/332#issuecomment-158824294",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/332",
    "id": 158824294,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1ODgyNDI5NA==",
    "user": {
      "login": "danielballan",
      "id": 2279598,
      "node_id": "MDQ6VXNlcjIyNzk1OTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2279598?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danielballan",
      "html_url": "https://github.com/danielballan",
      "followers_url": "https://api.github.com/users/danielballan/followers",
      "following_url": "https://api.github.com/users/danielballan/following{/other_user}",
      "gists_url": "https://api.github.com/users/danielballan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danielballan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danielballan/subscriptions",
      "organizations_url": "https://api.github.com/users/danielballan/orgs",
      "repos_url": "https://api.github.com/users/danielballan/repos",
      "events_url": "https://api.github.com/users/danielballan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danielballan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-23T01:03:30Z",
    "updated_at": "2015-11-23T01:07:35Z",
    "author_association": "NONE",
    "body": "@SylvainCorlay  We need something along these lines at BNL to distribute templates to visiting users. I implemented [nbexamples](https://github.com/danielballan/nbexamples) this weekend. Unfortunately I only found this GH issue after the fact; but fortunately, it is very much along the lines of your proposal, especially:\n\n> The second part of the proposal is to create a means (like a new tab in the current dashboard) to access installed templates, independently of the current working directory.\n\nTake a look. The code is rough, but I'd be interested in anyone's thoughts on the approach.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/190296487",
    "html_url": "https://github.com/jupyter/notebook/issues/332#issuecomment-190296487",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/332",
    "id": 190296487,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MDI5NjQ4Nw==",
    "user": {
      "login": "brazilbean",
      "id": 73453,
      "node_id": "MDQ6VXNlcjczNDUz",
      "avatar_url": "https://avatars.githubusercontent.com/u/73453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brazilbean",
      "html_url": "https://github.com/brazilbean",
      "followers_url": "https://api.github.com/users/brazilbean/followers",
      "following_url": "https://api.github.com/users/brazilbean/following{/other_user}",
      "gists_url": "https://api.github.com/users/brazilbean/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brazilbean/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brazilbean/subscriptions",
      "organizations_url": "https://api.github.com/users/brazilbean/orgs",
      "repos_url": "https://api.github.com/users/brazilbean/repos",
      "events_url": "https://api.github.com/users/brazilbean/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brazilbean/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-29T17:16:34Z",
    "updated_at": "2016-02-29T17:16:34Z",
    "author_association": "NONE",
    "body": "I would love this feature. I want to use it because I use Jupyter notebooks to create experimental reports. The experiment is the same, and at the end of the experiment I have the same format of report. I use the notebook to create plots, charts, etc. specific to that experiment, and then export as an html document. \n\nRight now I have a notebook that serves as a template, which I copy each time. It would be more convenient if I could simply select File -> New -> [Some template I created]. \n\nThe other major use case in my workflow is to be able to create new notebooks with my typical imports already included. Right now I have a script I execute using a %run statement to set up my environment, but then I can't share the notebook without sharing the script. The alternative is to keep other notebooks open so I can paste in the import/setup code every time I start a new notebook. \n\nFor example, whenever I do machine learning stuff, I have the same setup code (import scipy, sklearn, etc.) It would be awesome to make a notebook called MachineLearning.ipynb with all the setup code, save that notebook as a template (i.e. File -> Save -> Save as Template). Then I can select File -> New -> MachineLearning and I get a new notebook in my working directory that is a copy of the template. \n\nIn such a design, I think it makes sense to have a designated location for notebook templates (call it notebook_templates to avoid confusion with Jinja templates, etc.). Any .ipynb in this directory would show up as an option in the New menu. Selecting a template from the New menu would create a copy of that template in the working directory, just as selecting a kernel creates an empty notebook in the working directory. \n\nThe Save menu would also include an option for \"Save as template\", which would copy the notebook (or move it from the working directory) to the notebook_templates directory. Perhaps nbconvert (or other programatic tool) could also have an options for converting an ipynb to a template (i.e. putting a copy in the directory).\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/191534284",
    "html_url": "https://github.com/jupyter/notebook/issues/332#issuecomment-191534284",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/332",
    "id": 191534284,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MTUzNDI4NA==",
    "user": {
      "login": "tsailiming",
      "id": 1571401,
      "node_id": "MDQ6VXNlcjE1NzE0MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1571401?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tsailiming",
      "html_url": "https://github.com/tsailiming",
      "followers_url": "https://api.github.com/users/tsailiming/followers",
      "following_url": "https://api.github.com/users/tsailiming/following{/other_user}",
      "gists_url": "https://api.github.com/users/tsailiming/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tsailiming/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tsailiming/subscriptions",
      "organizations_url": "https://api.github.com/users/tsailiming/orgs",
      "repos_url": "https://api.github.com/users/tsailiming/repos",
      "events_url": "https://api.github.com/users/tsailiming/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tsailiming/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-03T01:43:56Z",
    "updated_at": "2016-03-03T01:43:56Z",
    "author_association": "NONE",
    "body": "My use case is similar to Gordon. \n\nI want to be able create a notebook (PySpark/Python in my case) from a template with all the import statements. Currently, I have to copy and paste them into new notebooks. \n\n```\nfrom pyspark import SparkContext, SparkConf\nfrom pyspark.sql import SQLContext, HiveContext\nimport py4j\n\nconf = SparkConf().setAppName(\"Example\").setMaster(\"local[1]\")\nsc = SparkContext(conf=conf)\n\ntry:\n     # Try to access HiveConf, it will raise exception if Hive is not added\n    sc._jvm.org.apache.hadoop.hive.conf.HiveConf()\n    sqlContext = HiveContext(sc)\nexcept py4j.protocol.Py4JError:\n    sqlContext = SQLContext(sc)\nexcept TypeError:\n     sqlContext = SQLContext(sc)\n```\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/218683768",
    "html_url": "https://github.com/jupyter/notebook/issues/332#issuecomment-218683768",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/332",
    "id": 218683768,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxODY4Mzc2OA==",
    "user": {
      "login": "richierocks",
      "id": 197589,
      "node_id": "MDQ6VXNlcjE5NzU4OQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/197589?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/richierocks",
      "html_url": "https://github.com/richierocks",
      "followers_url": "https://api.github.com/users/richierocks/followers",
      "following_url": "https://api.github.com/users/richierocks/following{/other_user}",
      "gists_url": "https://api.github.com/users/richierocks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/richierocks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/richierocks/subscriptions",
      "organizations_url": "https://api.github.com/users/richierocks/orgs",
      "repos_url": "https://api.github.com/users/richierocks/repos",
      "events_url": "https://api.github.com/users/richierocks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/richierocks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-12T07:44:53Z",
    "updated_at": "2016-05-12T07:44:53Z",
    "author_association": "NONE",
    "body": "More enthusiasm for this feature on Stack Overflow:\n\nhttps://stackoverflow.com/questions/34002326/default-template-for-ipython-notebook-using-jupyter\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/223863171",
    "html_url": "https://github.com/jupyter/notebook/issues/332#issuecomment-223863171",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/332",
    "id": 223863171,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyMzg2MzE3MQ==",
    "user": {
      "login": "JaimieMurdock",
      "id": 666240,
      "node_id": "MDQ6VXNlcjY2NjI0MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/666240?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JaimieMurdock",
      "html_url": "https://github.com/JaimieMurdock",
      "followers_url": "https://api.github.com/users/JaimieMurdock/followers",
      "following_url": "https://api.github.com/users/JaimieMurdock/following{/other_user}",
      "gists_url": "https://api.github.com/users/JaimieMurdock/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JaimieMurdock/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JaimieMurdock/subscriptions",
      "organizations_url": "https://api.github.com/users/JaimieMurdock/orgs",
      "repos_url": "https://api.github.com/users/JaimieMurdock/repos",
      "events_url": "https://api.github.com/users/JaimieMurdock/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JaimieMurdock/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-06T03:47:56Z",
    "updated_at": "2016-06-06T03:47:56Z",
    "author_association": "NONE",
    "body": "I've been working on a very similar use case for a text analysis tool - the [InPhO Topic Explorer](http://github.com/inpho/topic-explorer). I did the following:\n1. Created a directory called [`ipynb`](https://github.com/inpho/topic-explorer/tree/master/ipynb) in my source which contains a default tutorial notebook without output. It also contains `corpus.tmpl.py` which contains all the setup code, similar to @tsailiming's example.\n2. The [`vsm notebook`](https://github.com/inpho/topic-explorer/blob/master/topicexplorer/notebook.py) command then copies the notebooks from the `ipynb` file to the working directory and populates the `corpus.tmpl.py` with values from a config file and copies it into the folder as `corpus.py`.\n3. In the sample notebooks I use `from corpus import *` to get all my variables in the global namespace.\n\nFor educational use, a quick-start scaffold is a great help - we were able to get a classroom of historians and philosophers using the text analysis tools very quickly.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/235718437",
    "html_url": "https://github.com/jupyter/notebook/issues/332#issuecomment-235718437",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/332",
    "id": 235718437,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNTcxODQzNw==",
    "user": {
      "login": "mattayes",
      "id": 8622473,
      "node_id": "MDQ6VXNlcjg2MjI0NzM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8622473?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mattayes",
      "html_url": "https://github.com/mattayes",
      "followers_url": "https://api.github.com/users/mattayes/followers",
      "following_url": "https://api.github.com/users/mattayes/following{/other_user}",
      "gists_url": "https://api.github.com/users/mattayes/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mattayes/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mattayes/subscriptions",
      "organizations_url": "https://api.github.com/users/mattayes/orgs",
      "repos_url": "https://api.github.com/users/mattayes/repos",
      "events_url": "https://api.github.com/users/mattayes/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mattayes/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-27T20:57:19Z",
    "updated_at": "2016-07-27T20:57:19Z",
    "author_association": "NONE",
    "body": "These templates would be a really nice feature. The approach I currently use (`cp path/to/my/template.ipynb path/to/my/analysis.ipynb`) works well enough, but being able to choose `New from Template` would be better. Also having a dedicated spot those these (`~/.jupyter/templates`, for example) would be nice.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/239804629",
    "html_url": "https://github.com/jupyter/notebook/issues/332#issuecomment-239804629",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/332",
    "id": 239804629,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzOTgwNDYyOQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-15T13:42:48Z",
    "updated_at": "2016-08-15T13:42:48Z",
    "author_association": "MEMBER",
    "body": "I don't think we need a distinct format or file extension for templates: the main thing is to provide ways to open a copy of a notebook that will be saved to a new file.\n\nAs Brian suggested, this concept goes beyond the standard notion of a 'template' because it can also be used to provide examples in documentation, so that when you open an example you get a fresh, editable and savable copy. This will likely use the same underlying mechanism as 'templates' but with a different UI.\n\nFor the template UI, would a practical approach be to save notebooks in a special folder (e.g. `~/.jupyter/templates`)? Then I imagine these would be presented in a separate section of the _New_ menu.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/240059973",
    "html_url": "https://github.com/jupyter/notebook/issues/332#issuecomment-240059973",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/332",
    "id": 240059973,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MDA1OTk3Mw==",
    "user": {
      "login": "Teagum",
      "id": 11088297,
      "node_id": "MDQ6VXNlcjExMDg4Mjk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/11088297?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Teagum",
      "html_url": "https://github.com/Teagum",
      "followers_url": "https://api.github.com/users/Teagum/followers",
      "following_url": "https://api.github.com/users/Teagum/following{/other_user}",
      "gists_url": "https://api.github.com/users/Teagum/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Teagum/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Teagum/subscriptions",
      "organizations_url": "https://api.github.com/users/Teagum/orgs",
      "repos_url": "https://api.github.com/users/Teagum/repos",
      "events_url": "https://api.github.com/users/Teagum/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Teagum/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-16T10:02:57Z",
    "updated_at": "2016-08-16T10:06:21Z",
    "author_association": "NONE",
    "body": "I was looking for a feature like this all the time. Since I commonly use notebooks in two different ways,  either for data analysis or module debugging, I also need different setups for each task. Thus, some kind of template system would naturally support my workflow. \n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/241361593",
    "html_url": "https://github.com/jupyter/notebook/issues/332#issuecomment-241361593",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/332",
    "id": 241361593,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTM2MTU5Mw==",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-22T09:37:03Z",
    "updated_at": "2016-08-22T09:37:03Z",
    "author_association": "MEMBER",
    "body": "> I don't think we need a distinct format or file extension for templates: the main thing is to provide ways to open a copy of a notebook that will be saved to a new file.\n\nAgreed. Besides ipynb is rendered by github and we probably want example notebooks to be rendered!\n\n> For the template UI, would a practical approach be to save notebooks in a special folder (e.g. ~/.jupyter/templates)? Then I imagine these would be presented in a separate section of the New menu.\n\n👍 on the subdirectory of jupyter. In doing so we would have a possible path under sys-prefix... which would make example notebook installable as part of a wheel.\n\nRegarding the extension, we could still encode something into the filename, like `foobar.tmpl.ipynb` so that package authors can avoid having notebook files always modified in their repository...\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/241389579",
    "html_url": "https://github.com/jupyter/notebook/issues/332#issuecomment-241389579",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/332",
    "id": 241389579,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTM4OTU3OQ==",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-22T11:48:33Z",
    "updated_at": "2016-08-22T11:49:02Z",
    "author_association": "MEMBER",
    "body": "@takluyver how do you think we could distinguish the different paths in case of conflict (user, sys-prefix, global...)\n\nShould they be overloaded in the usual order?\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/241522117",
    "html_url": "https://github.com/jupyter/notebook/issues/332#issuecomment-241522117",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/332",
    "id": 241522117,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTUyMjExNw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-22T19:25:49Z",
    "updated_at": "2016-08-22T19:25:49Z",
    "author_association": "MEMBER",
    "body": "> Regarding the extension, we could still encode something into the filename, like foobar.tmpl.ipynb so that package authors can avoid having notebook files always modified in their repository...\n\nHmm, maybe, but they also want to be able to update the examples easily. I'd think more along the lines of using something like entrypoints to discover 'example' notebooks from installed packages. That needs a bit more thought, though, because it shouldn't be Python specific.\n\n> :+1: on the subdirectory of jupyter. In doing so we would have a possible path under sys-prefix... which would make example notebook installable as part of a wheel.\n\nI'm thinking of the `~/.jupyter/templates` directory being for notebooks the user thinks of as _templates_, distinct from 'example notebooks'. I imagine these will be relatively few, and I don't want to make it too easy for packages to install them - especially before we've worked out a proper system for example notebooks. E.g. 'templates' could be an additional section of the 'New' menu in the notebook interface - but this only works if there aren't too many.\n\nExample notebooks could be provided using the standard jupyter data files search path - so the precedence goes: explicit overrides, user, environment, systemwide. However, we'd need to think about how to organise them within those directories, and how to present them from the UI.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/241523827",
    "html_url": "https://github.com/jupyter/notebook/issues/332#issuecomment-241523827",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/332",
    "id": 241523827,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MTUyMzgyNw==",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-22T19:32:30Z",
    "updated_at": "2016-08-22T19:32:30Z",
    "author_association": "MEMBER",
    "body": "> Example notebooks could be provided using the standard jupyter data files search path - so the precedence goes: explicit overrides, user, environment, systemwide. However, we'd need to think about how to organise them within those directories, and how to present them from the UI.\n\nYes that was my question. \n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/242609407",
    "html_url": "https://github.com/jupyter/notebook/issues/332#issuecomment-242609407",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/332",
    "id": 242609407,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0MjYwOTQwNw==",
    "user": {
      "login": "brazilbean",
      "id": 73453,
      "node_id": "MDQ6VXNlcjczNDUz",
      "avatar_url": "https://avatars.githubusercontent.com/u/73453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brazilbean",
      "html_url": "https://github.com/brazilbean",
      "followers_url": "https://api.github.com/users/brazilbean/followers",
      "following_url": "https://api.github.com/users/brazilbean/following{/other_user}",
      "gists_url": "https://api.github.com/users/brazilbean/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brazilbean/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brazilbean/subscriptions",
      "organizations_url": "https://api.github.com/users/brazilbean/orgs",
      "repos_url": "https://api.github.com/users/brazilbean/repos",
      "events_url": "https://api.github.com/users/brazilbean/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brazilbean/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-26T02:31:46Z",
    "updated_at": "2016-08-26T02:31:46Z",
    "author_association": "NONE",
    "body": "> E.g. 'templates' could be an additional section of the 'New' menu in the notebook interface - but this only works if there aren't too many.\n\nWhen I think of my use-case for notebook templates, I think of them as essentially _kernels that come with some notebook data pre-populated_. This concept lends itself to including templates in the \"New\" menu.\n\nPerhaps some heavy users will have so many kernels and templates that the New menu becomes unwieldy, but my intuition at this point says that this should be the exception, not the rule. \n\nWe also need to consider how to create templates. At first pass, it is probably fine to require the user (or package installer) to copy an .ipynb to the templates folder. Eventually, it may be nice to allow users to \"Save as template\", making it easy for someone to save the boiler-plate notebook code unique to their workflow.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/281957666",
    "html_url": "https://github.com/jupyter/notebook/issues/332#issuecomment-281957666",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/332",
    "id": 281957666,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MTk1NzY2Ng==",
    "user": {
      "login": "akaihola",
      "id": 13725,
      "node_id": "MDQ6VXNlcjEzNzI1",
      "avatar_url": "https://avatars.githubusercontent.com/u/13725?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/akaihola",
      "html_url": "https://github.com/akaihola",
      "followers_url": "https://api.github.com/users/akaihola/followers",
      "following_url": "https://api.github.com/users/akaihola/following{/other_user}",
      "gists_url": "https://api.github.com/users/akaihola/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/akaihola/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/akaihola/subscriptions",
      "organizations_url": "https://api.github.com/users/akaihola/orgs",
      "repos_url": "https://api.github.com/users/akaihola/repos",
      "events_url": "https://api.github.com/users/akaihola/events{/privacy}",
      "received_events_url": "https://api.github.com/users/akaihola/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-23T10:40:52Z",
    "updated_at": "2017-02-23T10:40:52Z",
    "author_association": "NONE",
    "body": "We at Eniram have a couple dozen people collaborating on notebooks on our JupyterHub based server. We would benefit from this feature as well.\r\n\r\nWe actually have two distinct use cases:\r\n1. every newly created notebook should have one Markdown cell with headings for metadata we use by convention (creator, description, instructions, history) – this is what I'd call a \"skeleton\"\r\n2. \"template\" report notebooks with pre-defined computations and plots – intended to be cloned, modified (filling in e.g. time intervals and data sources) and executed by users\r\n\r\nOne hack we've thought about would be to include in \"template\" notebooks an \"open as a copy\" widget with accompanying Python code. There would be a text field for the destination directory and notebook file name, and it would be pre-populated with a sane default (e.g. the user's home notebook directory and the current date as a prefix for the notebook name). Clicking on the submit button would simply run Python code which makes a copy of the notebook in the filesystem and renders an HTML link to the new notebook.\r\n\r\nI imagine the use cases for a template/skeleton notebook are so varied that a one-size-fits-all solution is difficult to come up with. Maybe providing the necessary building blocks, hooks and examples is a better approach?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/288153143",
    "html_url": "https://github.com/jupyter/notebook/issues/332#issuecomment-288153143",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/332",
    "id": 288153143,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4ODE1MzE0Mw==",
    "user": {
      "login": "brazilbean",
      "id": 73453,
      "node_id": "MDQ6VXNlcjczNDUz",
      "avatar_url": "https://avatars.githubusercontent.com/u/73453?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brazilbean",
      "html_url": "https://github.com/brazilbean",
      "followers_url": "https://api.github.com/users/brazilbean/followers",
      "following_url": "https://api.github.com/users/brazilbean/following{/other_user}",
      "gists_url": "https://api.github.com/users/brazilbean/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brazilbean/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brazilbean/subscriptions",
      "organizations_url": "https://api.github.com/users/brazilbean/orgs",
      "repos_url": "https://api.github.com/users/brazilbean/repos",
      "events_url": "https://api.github.com/users/brazilbean/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brazilbean/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-21T17:21:02Z",
    "updated_at": "2017-03-21T17:21:02Z",
    "author_association": "NONE",
    "body": "I think @akaihola's use case could be accomplished via a new-from-template approach. The \"skeleton\" example is just a notebook with a markdown cell - they could call that template \"Eniram Notebook\", i.e. New -> Eniram Notebook. While this doesn't force ALL new notebooks to have the markdown header, it does provide a straightforward way to get the desired behavior. Use-case # 2 are just notebook templates with more content. \r\n\r\nIf the \"New\" menu could support nested menus that reflect the file system, then organizing large numbers of templates would not be difficult (addressing one of my thoughts from earlier).\r\n\r\nI do agree with @akaihola that a good start would be providing the building blocks, etc.\r\n\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/350109615",
    "html_url": "https://github.com/jupyter/notebook/issues/332#issuecomment-350109615",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/332",
    "id": 350109615,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDEwOTYxNQ==",
    "user": {
      "login": "gnestor",
      "id": 512354,
      "node_id": "MDQ6VXNlcjUxMjM1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/512354?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnestor",
      "html_url": "https://github.com/gnestor",
      "followers_url": "https://api.github.com/users/gnestor/followers",
      "following_url": "https://api.github.com/users/gnestor/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnestor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnestor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnestor/subscriptions",
      "organizations_url": "https://api.github.com/users/gnestor/orgs",
      "repos_url": "https://api.github.com/users/gnestor/repos",
      "events_url": "https://api.github.com/users/gnestor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnestor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-07T22:08:37Z",
    "updated_at": "2017-12-07T22:08:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "@ellisonbg @minrk @SylvainCorlay What are your current thoughts on this?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/350954280",
    "html_url": "https://github.com/jupyter/notebook/issues/332#issuecomment-350954280",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/332",
    "id": 350954280,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDk1NDI4MA==",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-12T06:04:32Z",
    "updated_at": "2017-12-12T06:04:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gnestor Looks like there is pretty strong support for the notebook template scenario and usage case. I myself (N=1) would also use it at times.\r\n\r\nI would consider expanding the idea it beyond notebooks to all file types (why not an Markdown file). I don't really have opinions on *how* the feature gets implemented. Given the strong interest and the potential for this to span multiple repos (server, frontends) would it make sense to begin an enhancement proposal for it?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/381624503",
    "html_url": "https://github.com/jupyter/notebook/issues/332#issuecomment-381624503",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/332",
    "id": 381624503,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTYyNDUwMw==",
    "user": {
      "login": "timkpaine",
      "id": 3105306,
      "node_id": "MDQ6VXNlcjMxMDUzMDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3105306?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/timkpaine",
      "html_url": "https://github.com/timkpaine",
      "followers_url": "https://api.github.com/users/timkpaine/followers",
      "following_url": "https://api.github.com/users/timkpaine/following{/other_user}",
      "gists_url": "https://api.github.com/users/timkpaine/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/timkpaine/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/timkpaine/subscriptions",
      "organizations_url": "https://api.github.com/users/timkpaine/orgs",
      "repos_url": "https://api.github.com/users/timkpaine/repos",
      "events_url": "https://api.github.com/users/timkpaine/events{/privacy}",
      "received_events_url": "https://api.github.com/users/timkpaine/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-16T14:45:23Z",
    "updated_at": "2018-04-16T14:45:23Z",
    "author_association": "NONE",
    "body": "https://github.com/timkpaine/jupyterlab_templates",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/381655919",
    "html_url": "https://github.com/jupyter/notebook/issues/332#issuecomment-381655919",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/332",
    "id": 381655919,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTY1NTkxOQ==",
    "user": {
      "login": "gnestor",
      "id": 512354,
      "node_id": "MDQ6VXNlcjUxMjM1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/512354?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnestor",
      "html_url": "https://github.com/gnestor",
      "followers_url": "https://api.github.com/users/gnestor/followers",
      "following_url": "https://api.github.com/users/gnestor/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnestor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnestor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnestor/subscriptions",
      "organizations_url": "https://api.github.com/users/gnestor/orgs",
      "repos_url": "https://api.github.com/users/gnestor/repos",
      "events_url": "https://api.github.com/users/gnestor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnestor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-16T15:57:50Z",
    "updated_at": "2018-04-16T15:57:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "@timkpaine This is fantastic!! Your implementation is in line with what I was imagining. It would be nice to be able to configure the template directory(ies) from the JupyterLab settings editor (to make it accessible to users who are not comfortable in the terminal or who don't have ssh access to the server). @afshin Can a server extension access the JupyterLab settings?\r\n\r\n@ellisonbg Care to try this out? ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/381660177",
    "html_url": "https://github.com/jupyter/notebook/issues/332#issuecomment-381660177",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/332",
    "id": 381660177,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTY2MDE3Nw==",
    "user": {
      "login": "timkpaine",
      "id": 3105306,
      "node_id": "MDQ6VXNlcjMxMDUzMDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3105306?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/timkpaine",
      "html_url": "https://github.com/timkpaine",
      "followers_url": "https://api.github.com/users/timkpaine/followers",
      "following_url": "https://api.github.com/users/timkpaine/following{/other_user}",
      "gists_url": "https://api.github.com/users/timkpaine/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/timkpaine/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/timkpaine/subscriptions",
      "organizations_url": "https://api.github.com/users/timkpaine/orgs",
      "repos_url": "https://api.github.com/users/timkpaine/repos",
      "events_url": "https://api.github.com/users/timkpaine/events{/privacy}",
      "received_events_url": "https://api.github.com/users/timkpaine/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-16T16:10:48Z",
    "updated_at": "2018-04-16T16:10:48Z",
    "author_association": "NONE",
    "body": "@gnestor agreed, sounds useful. speaking with @jasongrout on a different thread about how to save templates on the fly",
    "performed_via_github_app": null
  }
]
