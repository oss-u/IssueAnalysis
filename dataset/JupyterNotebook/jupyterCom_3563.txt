[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/384210729",
    "html_url": "https://github.com/jupyter/notebook/issues/3563#issuecomment-384210729",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3563",
    "id": 384210729,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDIxMDcyOQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-25T08:47:58Z",
    "updated_at": "2018-04-25T08:47:58Z",
    "author_association": "MEMBER",
    "body": "The checkpoint is updated whenever you save manually; the only difference is that the checkpoint isn't updated by autosave.\r\n\r\nWe don't want to try to support multiple checkpoints by default, because that would be reinventing version control badly.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/384480342",
    "html_url": "https://github.com/jupyter/notebook/issues/3563#issuecomment-384480342",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3563",
    "id": 384480342,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDQ4MDM0Mg==",
    "user": {
      "login": "orangeSi",
      "id": 12126846,
      "node_id": "MDQ6VXNlcjEyMTI2ODQ2",
      "avatar_url": "https://avatars.githubusercontent.com/u/12126846?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/orangeSi",
      "html_url": "https://github.com/orangeSi",
      "followers_url": "https://api.github.com/users/orangeSi/followers",
      "following_url": "https://api.github.com/users/orangeSi/following{/other_user}",
      "gists_url": "https://api.github.com/users/orangeSi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/orangeSi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/orangeSi/subscriptions",
      "organizations_url": "https://api.github.com/users/orangeSi/orgs",
      "repos_url": "https://api.github.com/users/orangeSi/repos",
      "events_url": "https://api.github.com/users/orangeSi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/orangeSi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-26T01:05:32Z",
    "updated_at": "2018-04-26T01:06:40Z",
    "author_association": "NONE",
    "body": "I agreed with your opinion before a few days ago, but sometimes I deleted some cells of codes and didn't realize that and save auto or manually, So missing the lost code forever. I just want to do some things in case of missing  some cell of codes~\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/384622682",
    "html_url": "https://github.com/jupyter/notebook/issues/3563#issuecomment-384622682",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3563",
    "id": 384622682,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDYyMjY4Mg==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-26T12:27:54Z",
    "updated_at": "2018-04-26T12:27:54Z",
    "author_association": "MEMBER",
    "body": "We recommend using version control - which usually means git these days. Github has some tutorials if you're not familiar with git: https://help.github.com/ . You can also setup [nbdime](http://nbdime.readthedocs.io/en/stable/) to make a better experience with notebooks in version control.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/384643327",
    "html_url": "https://github.com/jupyter/notebook/issues/3563#issuecomment-384643327",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3563",
    "id": 384643327,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDY0MzMyNw==",
    "user": {
      "login": "orangeSi",
      "id": 12126846,
      "node_id": "MDQ6VXNlcjEyMTI2ODQ2",
      "avatar_url": "https://avatars.githubusercontent.com/u/12126846?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/orangeSi",
      "html_url": "https://github.com/orangeSi",
      "followers_url": "https://api.github.com/users/orangeSi/followers",
      "following_url": "https://api.github.com/users/orangeSi/following{/other_user}",
      "gists_url": "https://api.github.com/users/orangeSi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/orangeSi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/orangeSi/subscriptions",
      "organizations_url": "https://api.github.com/users/orangeSi/orgs",
      "repos_url": "https://api.github.com/users/orangeSi/repos",
      "events_url": "https://api.github.com/users/orangeSi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/orangeSi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-26T13:36:29Z",
    "updated_at": "2018-04-26T13:36:29Z",
    "author_association": "NONE",
    "body": "ok, I will try nbdime later~\r\nThanks~",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/384676055",
    "html_url": "https://github.com/jupyter/notebook/issues/3563#issuecomment-384676055",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3563",
    "id": 384676055,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDY3NjA1NQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-26T15:08:51Z",
    "updated_at": "2018-04-26T15:08:51Z",
    "author_association": "MEMBER",
    "body": "No problem :-)",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/451292675",
    "html_url": "https://github.com/jupyter/notebook/issues/3563#issuecomment-451292675",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3563",
    "id": 451292675,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MTI5MjY3NQ==",
    "user": {
      "login": "gnumoksha",
      "id": 696797,
      "node_id": "MDQ6VXNlcjY5Njc5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/696797?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnumoksha",
      "html_url": "https://github.com/gnumoksha",
      "followers_url": "https://api.github.com/users/gnumoksha/followers",
      "following_url": "https://api.github.com/users/gnumoksha/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnumoksha/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnumoksha/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnumoksha/subscriptions",
      "organizations_url": "https://api.github.com/users/gnumoksha/orgs",
      "repos_url": "https://api.github.com/users/gnumoksha/repos",
      "events_url": "https://api.github.com/users/gnumoksha/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnumoksha/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-03T22:06:29Z",
    "updated_at": "2019-01-03T22:06:29Z",
    "author_association": "NONE",
    "body": "I will really appreciate a feature like this since as far as I know the undo functionality is limited to undo deleted cells.\r\nBTW, a VCS usually does not replace a undo tree.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/536225294",
    "html_url": "https://github.com/jupyter/notebook/issues/3563#issuecomment-536225294",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3563",
    "id": 536225294,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNjIyNTI5NA==",
    "user": {
      "login": "vlbrown",
      "id": 703084,
      "node_id": "MDQ6VXNlcjcwMzA4NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/703084?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vlbrown",
      "html_url": "https://github.com/vlbrown",
      "followers_url": "https://api.github.com/users/vlbrown/followers",
      "following_url": "https://api.github.com/users/vlbrown/following{/other_user}",
      "gists_url": "https://api.github.com/users/vlbrown/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vlbrown/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vlbrown/subscriptions",
      "organizations_url": "https://api.github.com/users/vlbrown/orgs",
      "repos_url": "https://api.github.com/users/vlbrown/repos",
      "events_url": "https://api.github.com/users/vlbrown/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vlbrown/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-28T21:03:53Z",
    "updated_at": "2019-09-28T21:10:52Z",
    "author_association": "NONE",
    "body": "> > We recommend using version control - which usually means git these days.\r\n\r\nYes, but I don't want a big fancy official save of changes. I'm not going to publish this. I want a checkpoint. This is safety net, not version control.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/548414007",
    "html_url": "https://github.com/jupyter/notebook/issues/3563#issuecomment-548414007",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3563",
    "id": 548414007,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0ODQxNDAwNw==",
    "user": {
      "login": "smartm13",
      "id": 16520754,
      "node_id": "MDQ6VXNlcjE2NTIwNzU0",
      "avatar_url": "https://avatars.githubusercontent.com/u/16520754?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/smartm13",
      "html_url": "https://github.com/smartm13",
      "followers_url": "https://api.github.com/users/smartm13/followers",
      "following_url": "https://api.github.com/users/smartm13/following{/other_user}",
      "gists_url": "https://api.github.com/users/smartm13/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/smartm13/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/smartm13/subscriptions",
      "organizations_url": "https://api.github.com/users/smartm13/orgs",
      "repos_url": "https://api.github.com/users/smartm13/repos",
      "events_url": "https://api.github.com/users/smartm13/events{/privacy}",
      "received_events_url": "https://api.github.com/users/smartm13/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-31T14:53:09Z",
    "updated_at": "2019-10-31T14:53:09Z",
    "author_association": "NONE",
    "body": "Inspired from @orangeSi extended his code for creating local git repos in every `.ipynb_checkpoints` directory.\r\nIt will create commit whenever someone saves a notebook and the author of commit will be the hostname of machine that is available along with the ip.\r\n\r\n\r\n```\r\n#jupyter_git_patch.py\r\n# jupyter-git-patch start\r\n\r\ndef copy2_safe(src, dst, log=None):\r\n    \"\"\"copy src to dst\r\n\r\n    like shutil.copy2, but log errors in copystat instead of raising\r\n    \"\"\"\r\n    shutil.copyfile(src, dst)\r\n    try:\r\n        if dst.count('{0}.ipynb_checkpoints{0}'.format(os.sep)):\r\n            chkpoint = dst.split(__import__(\"os\").sep)[-1]\r\n            ipydir = dst.rstrip(chkpoint)\r\n            r = 0\r\n            try:\r\n                r = __import__(\"git\").Repo(ipydir)\r\n            except __import__(\"git\").exc.InvalidGitRepositoryError:\r\n                r = __import__(\"git\").Repo.init(ipydir)\r\n            if [1 for d in r.index.diff(None) if chkpoint in d.a_path] or chkpoint in r.untracked_files:\r\n                saviuser,saviuserr = \"defaulter\",\"defaulterr\"\r\n                try:\r\n                    frameno=4#py3\r\n                    saviuser = __import__(\"inspect\").getouterframes(__import__(\"inspect\").currentframe())[frameno][0].f_locals['self'].request.remote_ip\r\n                    saviuserr = __import__(\"socket\").gethostbyaddr(saviuser)[0]\r\n                except Exception as e:\r\n                    print(\"Attempt remote user detection: py3 failed:{} Trying py2 now.\".format(e))\r\n                    try:\r\n                        frameno=10#py2\r\n                        saviuser = __import__(\"inspect\").getouterframes(__import__(\"inspect\").currentframe())[frameno][0].f_locals['self'].request.remote_ip\r\n                        saviuserr = __import__(\"socket\").gethostbyaddr(saviuser)[0]\r\n                    except Exception as e2:\r\n                        print(\"Failed in remote user detection:\", e2)\r\n                r.config_writer().set_value(\"user\", \"name\", saviuserr).release()\r\n                r.config_writer().set_value(\"user\", \"email\", saviuser).release()\r\n                try:\r\n                    r.git.add(chkpoint)\r\n                except (__import__(\"git\").exc.GitCommandError, IOError):\r\n                    if sum(__import__(\"traceback\").format_exc().count(_c) for _c in \"Unable to create,index.lock,: File exists.\".split(','))>2:\r\n                        # index.lock needs to be deleted.\r\n                        __import__(\"time\").sleep(1)\r\n                        to_delete=__import__(\"os\").sep.join([ipydir, \".git\", \"index.lock\"])\r\n                        __import__(\"os\").remove(to_delete)\r\n                        print(\"Git commit: Deleted older existing git-locks.. Retrying to commit..[{}]\".format(to_delete))\r\n                    r.git.add(chkpoint)\r\n                r.index.commit(chkpoint.rstrip('checkpoint.ipynb') + __import__(\"datetime\").datetime.now().isoformat())\r\n    except Exception as e:\r\n        print (\"Git commiting failed as:\", e,'\\n',__import__(\"traceback\").format_exc())\r\n    try:\r\n        shutil.copystat(src, dst)\r\n    except OSError:\r\n        if log:\r\n            log.debug(\"copystat on %s failed\", dst, exc_info=True)\r\n\r\n\r\n# jupyter-git-patch end\r\n```\r\n\r\n> PS: Commit shall contain only the particular file and not the whole directory.\r\n\r\nIn Dockerfile (for those using jupyter out of docker):\r\n```\r\n#apply auto-git patch of jupyter\r\nCOPY jupyter_git_patch.py /tmp/jupyter_git_patch.py\r\nRUN /opt/conda/bin/pip install gitpython\r\nRUN cat /tmp/jupyter_git_patch.py >> /opt/conda/lib/python3.7/site-packages/notebook/services/contents/fileio.py\r\n```\r\n\r\nAlthough, this is not a recommended approach, I used in this in my project to track which user did what changes in a notebook. \r\nTo revert, one would have to go the .ipynb_checkpoints directory and git revert that particular commit.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/653109684",
    "html_url": "https://github.com/jupyter/notebook/issues/3563#issuecomment-653109684",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3563",
    "id": 653109684,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1MzEwOTY4NA==",
    "user": {
      "login": "rodfloripa",
      "id": 29576125,
      "node_id": "MDQ6VXNlcjI5NTc2MTI1",
      "avatar_url": "https://avatars.githubusercontent.com/u/29576125?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rodfloripa",
      "html_url": "https://github.com/rodfloripa",
      "followers_url": "https://api.github.com/users/rodfloripa/followers",
      "following_url": "https://api.github.com/users/rodfloripa/following{/other_user}",
      "gists_url": "https://api.github.com/users/rodfloripa/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rodfloripa/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rodfloripa/subscriptions",
      "organizations_url": "https://api.github.com/users/rodfloripa/orgs",
      "repos_url": "https://api.github.com/users/rodfloripa/repos",
      "events_url": "https://api.github.com/users/rodfloripa/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rodfloripa/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-02T16:34:59Z",
    "updated_at": "2020-07-02T16:34:59Z",
    "author_association": "NONE",
    "body": "The full code from OrangeSi:\r\n\r\ndef copy2_safe(src, dst, log=None):\r\n    \"\"\"copy src to dst\r\n\r\n    like shutil.copy2, but log errors in copystat instead of raising\r\n    \"\"\"\r\n    shutil.copyfile(src, dst)\r\n    try:\r\n        shutil.copystat(src, dst)\r\n    except OSError:\r\n        if log:\r\n            log.debug(\"copystat on %s failed\", dst, exc_info=True)\r\n    if re.search(\".ipynb_checkpoints\",dst):\r\n        now= datetime.datetime.now()\r\n        now = re.sub(':','.',now.isoformat())\r\n        now = re.sub('-','.',now)\r\n        dst = dst+\".\"+now\r\n        shutil.copyfile(src,dst)\r\n        try:\r\n            shutil.copystat(src,dst)\r\n        except OSError:\r\n            if log:\r\n                log.debug(\"copystat on %s failed\",dst,exc_info=True)",
    "performed_via_github_app": null
  }
]
