[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/334225253",
    "html_url": "https://github.com/jupyter/notebook/issues/2898#issuecomment-334225253",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2898",
    "id": 334225253,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDIyNTI1Mw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-04T17:12:34Z",
    "updated_at": "2017-10-04T17:12:34Z",
    "author_association": "MEMBER",
    "body": "Short answer: if you delete `/usr/local/share/jupyter/kernels/python3`, Jupyter should find a default Python kernel using the same Python running Jupyter itself (i.e. Anaconda).\r\n\r\n-----\r\n\r\nIf you just want to fix it, that should be all you need. If you're interested in what's going on, keep reading.\r\n\r\nThe path you see from `jupyter kernelspec list` is not actually an executable, it's a folder containing a `kernel.json` which tells Jupyter how to start the kernel. That file will look something like this:\r\n\r\n```json\r\n{\r\n \"display_name\": \"Python 3\", \r\n \"language\": \"python\", \r\n \"argv\": [\r\n  \"/usr/local/bin/python3\", \r\n  \"-m\", \r\n  \"ipykernel_launcher\", \r\n  \"-f\", \r\n  \"{connection_file}\"\r\n ]\r\n}\r\n```\r\n\r\nThere is a [search path](http://jupyter-client.readthedocs.io/en/stable/kernels.html#kernel-specs) of different directories which a kernelspec can be in. The priority order is user, environment, system. The first one containing `python3/kernel.json` defines the `python3` kernel. As a special case for Python, if no python3 kernelspec is found and it can import `ipykernel`, it offers a python3 kernel running on the same Python executable as the notebook server.\r\n\r\nThis mechanism may be extended in the future: I have a [plan](https://github.com/jupyter/jupyter_client/pull/261) to make it easier to add other kernel providers, e.g. conda environments.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/334228095",
    "html_url": "https://github.com/jupyter/notebook/issues/2898#issuecomment-334228095",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2898",
    "id": 334228095,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDIyODA5NQ==",
    "user": {
      "login": "irenatfh",
      "id": 3443505,
      "node_id": "MDQ6VXNlcjM0NDM1MDU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3443505?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/irenatfh",
      "html_url": "https://github.com/irenatfh",
      "followers_url": "https://api.github.com/users/irenatfh/followers",
      "following_url": "https://api.github.com/users/irenatfh/following{/other_user}",
      "gists_url": "https://api.github.com/users/irenatfh/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/irenatfh/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/irenatfh/subscriptions",
      "organizations_url": "https://api.github.com/users/irenatfh/orgs",
      "repos_url": "https://api.github.com/users/irenatfh/repos",
      "events_url": "https://api.github.com/users/irenatfh/events{/privacy}",
      "received_events_url": "https://api.github.com/users/irenatfh/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-04T17:22:54Z",
    "updated_at": "2017-10-04T17:22:54Z",
    "author_association": "NONE",
    "body": "Thank you so much!!! Deleting `/usr/local/share/jupyter/kernels/python3` worked a treat, and your explanation was also very helpful for future reference.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/486425089",
    "html_url": "https://github.com/jupyter/notebook/issues/2898#issuecomment-486425089",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2898",
    "id": 486425089,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ4NjQyNTA4OQ==",
    "user": {
      "login": "tdpetrou",
      "id": 7226751,
      "node_id": "MDQ6VXNlcjcyMjY3NTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7226751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tdpetrou",
      "html_url": "https://github.com/tdpetrou",
      "followers_url": "https://api.github.com/users/tdpetrou/followers",
      "following_url": "https://api.github.com/users/tdpetrou/following{/other_user}",
      "gists_url": "https://api.github.com/users/tdpetrou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tdpetrou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tdpetrou/subscriptions",
      "organizations_url": "https://api.github.com/users/tdpetrou/orgs",
      "repos_url": "https://api.github.com/users/tdpetrou/repos",
      "events_url": "https://api.github.com/users/tdpetrou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tdpetrou/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-24T21:03:23Z",
    "updated_at": "2019-04-24T21:03:23Z",
    "author_association": "NONE",
    "body": "@takluyver Thank you very much for this answer. It prompted me to [create this answer][1] to a very popular stack overflow question. It seems like deleting the User 'python3' kernel should be the canonical approach to working in jupyter notebooks in different environments. Creating a new kernel accessible from everywhere (as is the top voted answer in the SO question) doesn't appeal to me.\r\n\r\nI also created this issue #4447 to get more guidance on utilizing a canonical approach to using notebooks within a conda environment.\r\n\r\nIf you had any input on the SO answer or that GH issue, that would be great. Thanks!\r\n\r\n[1]: https://stackoverflow.com/questions/39604271/conda-environments-not-showing-up-in-jupyter-notebook/54985829#54985829",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/533699669",
    "html_url": "https://github.com/jupyter/notebook/issues/2898#issuecomment-533699669",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2898",
    "id": 533699669,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzMzY5OTY2OQ==",
    "user": {
      "login": "cpatdowling",
      "id": 3579386,
      "node_id": "MDQ6VXNlcjM1NzkzODY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3579386?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cpatdowling",
      "html_url": "https://github.com/cpatdowling",
      "followers_url": "https://api.github.com/users/cpatdowling/followers",
      "following_url": "https://api.github.com/users/cpatdowling/following{/other_user}",
      "gists_url": "https://api.github.com/users/cpatdowling/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cpatdowling/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cpatdowling/subscriptions",
      "organizations_url": "https://api.github.com/users/cpatdowling/orgs",
      "repos_url": "https://api.github.com/users/cpatdowling/repos",
      "events_url": "https://api.github.com/users/cpatdowling/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cpatdowling/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-20T20:33:42Z",
    "updated_at": "2019-09-20T20:34:45Z",
    "author_association": "NONE",
    "body": "@takluyver Also thank you for this answer. The Anaconda documentation on working with notebook kernels is somewhat obfuscated by their GUI instructions, chaff posts on Medium, and unclear questions on SO.\r\n\r\nWanted to keep access to my machine's native kernels while executing precise control over what kernels Jupyter sees.",
    "performed_via_github_app": null
  }
]
