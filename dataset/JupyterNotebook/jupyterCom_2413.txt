[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/294043065",
    "html_url": "https://github.com/jupyter/notebook/pull/2413#issuecomment-294043065",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2413",
    "id": 294043065,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDA0MzA2NQ==",
    "user": {
      "login": "mpacer",
      "id": 2482408,
      "node_id": "MDQ6VXNlcjI0ODI0MDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2482408?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mpacer",
      "html_url": "https://github.com/mpacer",
      "followers_url": "https://api.github.com/users/mpacer/followers",
      "following_url": "https://api.github.com/users/mpacer/following{/other_user}",
      "gists_url": "https://api.github.com/users/mpacer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mpacer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mpacer/subscriptions",
      "organizations_url": "https://api.github.com/users/mpacer/orgs",
      "repos_url": "https://api.github.com/users/mpacer/repos",
      "events_url": "https://api.github.com/users/mpacer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mpacer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-13T23:00:02Z",
    "updated_at": "2017-04-13T23:00:02Z",
    "author_association": "MEMBER",
    "body": "cc @rgbkrk and @ivanov may also be interested in this.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/294190312",
    "html_url": "https://github.com/jupyter/notebook/pull/2413#issuecomment-294190312",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2413",
    "id": 294190312,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDE5MDMxMg==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-14T16:55:06Z",
    "updated_at": "2017-04-14T16:55:06Z",
    "author_association": "MEMBER",
    "body": "Thanks that's great. We might be able to make this more readable with Promises at some point. Don't forget to write some documentation as well :-) ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/295505817",
    "html_url": "https://github.com/jupyter/notebook/pull/2413#issuecomment-295505817",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2413",
    "id": 295505817,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTUwNTgxNw==",
    "user": {
      "login": "mpacer",
      "id": 2482408,
      "node_id": "MDQ6VXNlcjI0ODI0MDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2482408?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mpacer",
      "html_url": "https://github.com/mpacer",
      "followers_url": "https://api.github.com/users/mpacer/followers",
      "following_url": "https://api.github.com/users/mpacer/following{/other_user}",
      "gists_url": "https://api.github.com/users/mpacer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mpacer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mpacer/subscriptions",
      "organizations_url": "https://api.github.com/users/mpacer/orgs",
      "repos_url": "https://api.github.com/users/mpacer/repos",
      "events_url": "https://api.github.com/users/mpacer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mpacer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-20T00:15:35Z",
    "updated_at": "2017-04-20T00:15:35Z",
    "author_association": "MEMBER",
    "body": "@Carreau and I talked about the choice of continuing to include `path` and other aspects of the old GET api in this and we realised that there might be issues with backwards compatibility and the way that the endpoints that are being looked for are being defined. \r\n\r\nFor example a post request handler of a sort exists that does not have a path following it, but the way that the `path_regex` swallows all paths in the url postceding the `format` results in us having no way to specify a different API without special casing some of the ways that tornado will handle the current APIs.\r\n\r\nAs a more general topic, we need to discuss our path toward having nbconvert as a service. I was trying to write this in a way that would allow that fairly easily and I made decisions while keeping that goal in mind. \r\n\r\nFor example, right now this is transmitting the entire notebook as json when that notebook is already on the server. That introduces higher bandwidth costs but accommodates the case where the notebook is not on the server. But solving that would also require passing along (or embedding) resources to the endpoint that would not otherwise be available for conversion. That seems like a much harder problem, but something we should be thinking about.  \r\n\r\n@Carreau had specific suggestions about how to move forward with this PR and what issues to openâ€¦I don't remember all of them in particular (and need to run and want to post this now) so I'll let him raise those points later. ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/295794231",
    "html_url": "https://github.com/jupyter/notebook/pull/2413#issuecomment-295794231",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2413",
    "id": 295794231,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NTc5NDIzMQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-20T16:07:11Z",
    "updated_at": "2017-04-20T16:07:11Z",
    "author_association": "MEMBER",
    "body": "Fair enough about the raw XHR, though I still hope we can make that code a bit neater.\r\n\r\nI'm still puzzled why you're talking about backwards compatibility. You're adding a new operation that wasn't possible before, so there's nothing for it to be backwards compatible with. It doesn't matter that the same URLs already work for GET requests; POST requests are entirely separate. If you don't want to pass the path in the URL, make a new endpoint like `/nbconvert-config/html` (for instance). Or replace the existing nbconvert post handler - I don't think anything uses that.\r\n\r\nBackwards compatibility is what forces us to make awkward compromises. You have the liberty of designing a new API that doesn't have to be backwards compatible with anything, so design it to be beautiful and simple and consistent, not involving a load of duplicate information with a 'backwards compatible' label stuck on it.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/298106070",
    "html_url": "https://github.com/jupyter/notebook/pull/2413#issuecomment-298106070",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2413",
    "id": 298106070,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5ODEwNjA3MA==",
    "user": {
      "login": "mpacer",
      "id": 2482408,
      "node_id": "MDQ6VXNlcjI0ODI0MDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2482408?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mpacer",
      "html_url": "https://github.com/mpacer",
      "followers_url": "https://api.github.com/users/mpacer/followers",
      "following_url": "https://api.github.com/users/mpacer/following{/other_user}",
      "gists_url": "https://api.github.com/users/mpacer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mpacer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mpacer/subscriptions",
      "organizations_url": "https://api.github.com/users/mpacer/orgs",
      "repos_url": "https://api.github.com/users/mpacer/repos",
      "events_url": "https://api.github.com/users/mpacer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mpacer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-28T21:03:07Z",
    "updated_at": "2017-04-28T21:03:07Z",
    "author_association": "MEMBER",
    "body": "oopsâ€¦messed up a rebase and forced pushed without thinking about it. I'll try to fix this. ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/330998352",
    "html_url": "https://github.com/jupyter/notebook/pull/2413#issuecomment-330998352",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2413",
    "id": 330998352,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMDk5ODM1Mg==",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-20T22:25:53Z",
    "updated_at": "2017-09-20T22:25:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "Recently I have been looking at the UX design around RStudio's document conversion stuff. I knmow some folks who use Jupyter and RStudio and from their perspective, the UX of RStudio is so far ahead of us on this point, they wouldn't think of using nbconvert - even though nbconvert does much of what is offered on RStudio from the technical perspective.\r\n\r\nWhat is a remarkable is that from a technical perspective, what RStudio does is much more primitive that what we do in the notebook (custom REST endpoint, menus, custom UI). They have nicer UI, but the result of that UI is to just fire off a command in the terminal. It converts things in place and leaves the converted documents (HTML, pdf, etc.) in that directory.\r\n\r\nI think we should step back from the technical details of this and do some UX design work to understand what Jupyter users really need in this area. It may be that we can provide what they need with some small UI improvements and no difficult technical work.\r\n\r\nI think studying the RMarkdown/RStudio model would be a good starting point.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/334018674",
    "html_url": "https://github.com/jupyter/notebook/pull/2413#issuecomment-334018674",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2413",
    "id": 334018674,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDAxODY3NA==",
    "user": {
      "login": "mpacer",
      "id": 2482408,
      "node_id": "MDQ6VXNlcjI0ODI0MDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2482408?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mpacer",
      "html_url": "https://github.com/mpacer",
      "followers_url": "https://api.github.com/users/mpacer/followers",
      "following_url": "https://api.github.com/users/mpacer/following{/other_user}",
      "gists_url": "https://api.github.com/users/mpacer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mpacer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mpacer/subscriptions",
      "organizations_url": "https://api.github.com/users/mpacer/orgs",
      "repos_url": "https://api.github.com/users/mpacer/repos",
      "events_url": "https://api.github.com/users/mpacer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mpacer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-04T00:38:04Z",
    "updated_at": "2017-10-04T00:38:04Z",
    "author_association": "MEMBER",
    "body": "@ellisonbg I agree with you that we have much to learn from the RMarkdown and RStudio approach to document creation. Fortunately, that is exactly the kind of thing that this PR is trying to do!\r\n\r\nnbconvert (as a CLI) works as a simple command that you can just fire off in the terminal, which converts things in place and leaves the file(sâ€ ) in the directory. You can configure it by passing in a configuration file with the `--config` argument.\r\n\r\nUnfortunately, the notebook doesn't have any good way to surface this functionality when exporting to different formats. That is even taking into account that nbconvert is being used on the backend to manage the conversion.\r\n\r\nThe primary problem is that there is no user-friendly way to pass a configuration file to nbconvert from the front end. \r\n\r\nIt is (strictly speaking) possible to configure your exports in a way that is mostly in the front-end. Specifically, the configuration file that nbconvert uses by default is the same configuration file that the NotebookApp receives at the point of its instantiation. So the only way to currently change the configuration of an export is to shut down the server, and then restart it. \r\n\r\nForcing a user to stop whatever they were doing in order to shut down the server and restart it is about as user hostile an approach to configuration as I can imagine. Solving that was the first task of this PR.\r\n\r\nThis PR makes it possible to pass in a JSON version of the configuration file to the nbconvert calls, which allows us to get around that limitation. You can just create whatever configuration file you want and pass it in.\r\n\r\nThe second problem that this addresses has to do with how the download occurs. Currently our downloads occur by redirecting us to a new tab where we pass the information needed for conversion via the url. At best, opening a new tab is an inconvenient and unnecessary context switch. \r\n\r\nThis PR allows us to trigger the download in the background of the current tab without any interruption to a person's workflow.\r\n\r\nA third problem this approach inadvertently solves is a feature that @ian-r-rose was asking for: the ability to pass in a notebook as part of the data attached to a POST request that is then able to be converted by nbconvert and return the resulting file in the response to the POST request. \r\n\r\nPerhaps most importantly to your points, this PR solves many problems that will make it easier for others to try other UX deisgns on the basis of the infrastructure built here.\r\n\r\nSo, I think in fact your arguments are reasons for **moving forward** with this PR, not stepping away from it. Hopefully with these explanations, you agree. If not, then please respond, and I will do my best to address any remaining concerns.\r\n\r\n----\r\nFootnotes: \r\n\r\nâ€ : For example, for document formats that don't support images being directly embedded (e.g., plaintext formats like rst), nbconvert creates a directory that contains the relevant images along side the main file.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/334215687",
    "html_url": "https://github.com/jupyter/notebook/pull/2413#issuecomment-334215687",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2413",
    "id": 334215687,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDIxNTY4Nw==",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-04T16:38:33Z",
    "updated_at": "2017-10-04T16:38:33Z",
    "author_association": "CONTRIBUTOR",
    "body": "I probably didn't flush out enough details. Here is what I am proposing:\r\n\r\n* Use existing Jupyter services for working with the filesystem and editing files.\r\n* For the configuration file, provide a nice way for the user to create and edit a config file as just a regular text file that would sit next to the notebook to be converted. We have an existing REST endpoint for working with files. It could be as simple as a button that write a sample config file to that directory over the rest endpoint.\r\n* For the editing of that file, just use our exsiting file editor UI.\r\n* For the running of nbconvert, don't use a REST end point, just open a terminal in the UI for the user and send the right command to it, something like `nbconvert yournotebook.ipynb --config config.py`s.\r\n\r\nIn the classic notebook, all of this is possible, but it will be a bit clunky because the different UI's needed (file browser, notebook, file editor, terminal) are on different pages. But it is still possible. In JupyterLab, we can provide an extremely nice and optimized UX around these abstractions. \r\n\r\nThis is exactly how RStudio works. The only difference is that RMarkdown allows the conversion config to be put into the markdown file in a YAML block. We could also explore things like that as well if we want, but it is not needed for all of this to work.\r\n\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/334248322",
    "html_url": "https://github.com/jupyter/notebook/pull/2413#issuecomment-334248322",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2413",
    "id": 334248322,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDI0ODMyMg==",
    "user": {
      "login": "ian-r-rose",
      "id": 5728311,
      "node_id": "MDQ6VXNlcjU3MjgzMTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5728311?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ian-r-rose",
      "html_url": "https://github.com/ian-r-rose",
      "followers_url": "https://api.github.com/users/ian-r-rose/followers",
      "following_url": "https://api.github.com/users/ian-r-rose/following{/other_user}",
      "gists_url": "https://api.github.com/users/ian-r-rose/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ian-r-rose/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ian-r-rose/subscriptions",
      "organizations_url": "https://api.github.com/users/ian-r-rose/orgs",
      "repos_url": "https://api.github.com/users/ian-r-rose/repos",
      "events_url": "https://api.github.com/users/ian-r-rose/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ian-r-rose/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-04T18:30:23Z",
    "updated_at": "2017-10-04T18:30:23Z",
    "author_association": "MEMBER",
    "body": "It seems to me that there are two points of discussion here which are related but distinct:\r\n1. How do we improve the *existing* notebook UX for running nbconvert? @mpacer's points about not needing to open a new tab seem like they should be uncontroversial.\r\n2. In order to get the UX we want, do we need to expand to another REST endpoint? @ellisonbg, it seems like you are suggesting punting on that for custom-configured nbconvert exports and just having people doing that manually through the terminal+file-editor. This obviates the need for restarting the server, as I understand it.\r\nOne place where that would be difficult to make work is the use-case that I ran into with `@jupyterlab/google-drive`: If the notebook store is not on the server, the current path-based nbconvert REST API does not work (cf jupyterlab/jupyterlab-google-drive #51). In that case, actually being able to POST a notebook contents+configuration is actually a really nice solution.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/334261861",
    "html_url": "https://github.com/jupyter/notebook/pull/2413#issuecomment-334261861",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2413",
    "id": 334261861,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDI2MTg2MQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-04T19:20:03Z",
    "updated_at": "2017-10-04T19:20:03Z",
    "author_association": "MEMBER",
    "body": "I agree with M and Ian, and we had this discussion at the dev meeting a couple of month ago; while the approach that you (@ellisonbg) is proposing has some advantage from the user point of view it is in large part orthogonal to what is developed here. This not only expose a UI to do some conversion; but also expose nbconvert through a rest API. This has been discussed quite a bit in various context and is necessary for other improvement we'd like to do; like an nbconvert CLI that use remote conversion - for example because getting latex installation correct is not easy. \r\n\r\nI also want to point out that not everyone is using and developing on top of JupyterLab and that the rest API for nbconvert is extremely useful for custom clients wishing to do conversions.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/334901512",
    "html_url": "https://github.com/jupyter/notebook/pull/2413#issuecomment-334901512",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2413",
    "id": 334901512,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDkwMTUxMg==",
    "user": {
      "login": "mpacer",
      "id": 2482408,
      "node_id": "MDQ6VXNlcjI0ODI0MDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2482408?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mpacer",
      "html_url": "https://github.com/mpacer",
      "followers_url": "https://api.github.com/users/mpacer/followers",
      "following_url": "https://api.github.com/users/mpacer/following{/other_user}",
      "gists_url": "https://api.github.com/users/mpacer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mpacer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mpacer/subscriptions",
      "organizations_url": "https://api.github.com/users/mpacer/orgs",
      "repos_url": "https://api.github.com/users/mpacer/repos",
      "events_url": "https://api.github.com/users/mpacer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mpacer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-07T01:27:06Z",
    "updated_at": "2017-10-07T01:27:06Z",
    "author_association": "MEMBER",
    "body": "I'm at a loss as to why this is suddenly failing when https://github.com/jupyter/notebook/pull/2413/commits/817a87ce0e39ac2015ff03922a121c87e6536d85 didn't fail. \r\n\r\n@rgbkrk do you have any thoughts? This looks really similar to the errors in #2884, but I can't figure out what could be triggering race conditions all of a sudden when it worked in the previous commitâ€¦",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/334903585",
    "html_url": "https://github.com/jupyter/notebook/pull/2413#issuecomment-334903585",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2413",
    "id": 334903585,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDkwMzU4NQ==",
    "user": {
      "login": "mpacer",
      "id": 2482408,
      "node_id": "MDQ6VXNlcjI0ODI0MDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2482408?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mpacer",
      "html_url": "https://github.com/mpacer",
      "followers_url": "https://api.github.com/users/mpacer/followers",
      "following_url": "https://api.github.com/users/mpacer/following{/other_user}",
      "gists_url": "https://api.github.com/users/mpacer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mpacer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mpacer/subscriptions",
      "organizations_url": "https://api.github.com/users/mpacer/orgs",
      "repos_url": "https://api.github.com/users/mpacer/repos",
      "events_url": "https://api.github.com/users/mpacer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mpacer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-07T02:05:12Z",
    "updated_at": "2017-10-07T02:05:12Z",
    "author_association": "MEMBER",
    "body": "okâ€¦ now when i go back and run tests locally on 817a87c, the tests now fail. I'm deeply baffled as to why. but I'm going to stop trying to appease the casperjs gods and call this a night.\r\n\r\nIf someone tries this branch and they can't get this to work, please let me know. ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/334972460",
    "html_url": "https://github.com/jupyter/notebook/pull/2413#issuecomment-334972460",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2413",
    "id": 334972460,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNDk3MjQ2MA==",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-07T23:30:45Z",
    "updated_at": "2017-10-07T23:30:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Carreau thanks for clarifying the intended usage of the different parts of this PR. \r\n\r\nI completely understand the general need for a REST API for nbconvert. In particular, the main usage case that I see is a hosted version of nbconvert that is run separately from the rest of the notebook server.\r\n\r\nIn general, I tend to think that the REST services of the notebook server are one of the project's \"open standards\" and we should evolve it conservatively and with very clear versioning semantics and documentation. At the same time, I want nbconvert to be able to move quickly and innovate.\r\n\r\nBecause of this, I would probably feel more comfortable with the server side parts of this being in nbconvert and used in the notebook server as a server extension. That would also make it very easy to develop a separate server that just does nbconvert REST calls. We have taken the exact same approach with the Git server extension that exposes a REST API to git.\r\n\r\nFor the classic notebook I am fine with the UI additions in this PR, if the server side stuff is moved to a server extension, the UI could remain and add a small amount of logic to see if the server side stuff is installed and enabled. It could also be added as a nbextension, but that is a pain. The only potential issue there is version mismatch between the UI and the server extension.\r\n\r\nFor JupyterLab usage, the UI would probably be developed as a JupyterLab extension (an npm extension) so any of these options are fine on that front.\r\n\r\nI agree these things are mostly separate from the issues I was bringing up about the usability of nbconvert. However, my points about the usability still stand and I don't think that these proposed changes remove the need for us to consider those matters on their own.\r\n\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/335241388",
    "html_url": "https://github.com/jupyter/notebook/pull/2413#issuecomment-335241388",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2413",
    "id": 335241388,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTI0MTM4OA==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-09T18:10:34Z",
    "updated_at": "2017-10-09T18:10:34Z",
    "author_association": "MEMBER",
    "body": "> In general, I tend to think that the REST services of the notebook server are one of the project's \"open standards\" and we should evolve it conservatively and with very clear versioning semantics and documentation. At the same time, I want nbconvert to be able to move quickly and innovate.\r\n\r\nI agree with this.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/335248906",
    "html_url": "https://github.com/jupyter/notebook/pull/2413#issuecomment-335248906",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2413",
    "id": 335248906,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTI0ODkwNg==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-09T18:32:38Z",
    "updated_at": "2017-10-09T18:32:38Z",
    "author_association": "MEMBER",
    "body": "> In general, I tend to think that the REST services of the notebook server are one of the project's \"open standards\" and we should evolve it conservatively and with very clear versioning semantics and documentation. At the same time, I want nbconvert to be able to move quickly and innovate.\r\n\r\nI see you point, though I'm worries about the complexity of developing these in separate repositories. \r\n\r\nWould an \"Opt-in-via-custom-header\" like GitHub does cover your concern about being conservative ? That would allow to implement in the same location â€“ thus simplifying development â€“ and leaving clear what is / is not stable.  ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/335254058",
    "html_url": "https://github.com/jupyter/notebook/pull/2413#issuecomment-335254058",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2413",
    "id": 335254058,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTI1NDA1OA==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-09T18:52:50Z",
    "updated_at": "2017-10-09T18:52:50Z",
    "author_association": "MEMBER",
    "body": "After some discussion with @mpacer in chat, we've talked about trying to formalize what the REST API looks like. At least for me as someone who isn't likely to be a user of this API (or so I suspect, as I'd want to do this entirely client side), I'm happy to review the REST API and data model.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/335282941",
    "html_url": "https://github.com/jupyter/notebook/pull/2413#issuecomment-335282941",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2413",
    "id": 335282941,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNTI4Mjk0MQ==",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-09T20:49:41Z",
    "updated_at": "2017-10-09T20:49:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "The most important thing is to formalize the REST API and version it\nproperly. Kyle - thanks for jumping into that side of the discussion.\n\nI agree there are pros/cons of developing it separately or within\njupyter/notebook. I am open to both, with the only comment that if the\nupdated REST API is released in jupyter/notebook, it should follow the\nsemantic versioning of the notebook. It is hard to get a REST API right the\nfirst time, so this necessarily limits your ability to iterate as quickly\nas you might like.\n\nI am not in favor of having of a optional header that allows us to avoid\nformalizing and versioning our core REST APIs.\n\nHowever, we might want to begin to version our REST APIs separately from\nthe jupyter/notebook package version. We do have different REST APIs and\nhaving a separate version for each would allow us to more communicate to\nusers the nature of a given server on a more fine grained basis. Splitting\nthe notebook server out from the UI would also help in this respect.\n\nOn Mon, Oct 9, 2017 at 11:53 AM, Kyle Kelley <notifications@github.com>\nwrote:\n\n> After some discussion with @mpacer <https://github.com/mpacer> in chat,\n> we've talked about trying to formalize what the REST API looks like. At\n> least for me as someone who isn't likely to be a user of this API (or so I\n> suspect, as I'd want to do this entirely client side), I'm happy to review\n> the REST API and data model.\n>\n> â€”\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/jupyter/notebook/pull/2413#issuecomment-335254058>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABr0AfG_EHxhWC2miGKeVjc1BQwg7Zqks5sqmuPgaJpZM4M9SPQ>\n> .\n>\n\n\n\n-- \nBrian E. Granger\nAssociate Professor of Physics and Data Science\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/337088321",
    "html_url": "https://github.com/jupyter/notebook/pull/2413#issuecomment-337088321",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2413",
    "id": 337088321,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzA4ODMyMQ==",
    "user": {
      "login": "mpacer",
      "id": 2482408,
      "node_id": "MDQ6VXNlcjI0ODI0MDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2482408?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mpacer",
      "html_url": "https://github.com/mpacer",
      "followers_url": "https://api.github.com/users/mpacer/followers",
      "following_url": "https://api.github.com/users/mpacer/following{/other_user}",
      "gists_url": "https://api.github.com/users/mpacer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mpacer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mpacer/subscriptions",
      "organizations_url": "https://api.github.com/users/mpacer/orgs",
      "repos_url": "https://api.github.com/users/mpacer/repos",
      "events_url": "https://api.github.com/users/mpacer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mpacer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-17T01:14:48Z",
    "updated_at": "2017-10-17T01:14:48Z",
    "author_association": "MEMBER",
    "body": "So I started cleaning up our API docs and I learned that actuallyâ€¦ we don't have fully spec'd out API docs anywhere. We have some of the API docs for the endpoints that have `/api` as their root, but that doesn't include the [`NbConvertRootHandler`](https://github.com/jupyter/notebook/blob/master/notebook/services/nbconvert/handlers.py)'s endpoint (`/api/nbconvert`).\r\n\r\nI am going to make a separate PR for fixing our (currently broken) swagger docs and adding this endpoint.\r\n\r\nBut I think the question remains open what to do about the fact that we have other endpoints that do not lead with `/api`.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/337115156",
    "html_url": "https://github.com/jupyter/notebook/pull/2413#issuecomment-337115156",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2413",
    "id": 337115156,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNzExNTE1Ng==",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-17T04:33:30Z",
    "updated_at": "2017-10-17T04:33:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "Great catch M! Thanks!\n\nOn Mon, Oct 16, 2017 at 6:14 PM, M Pacer <notifications@github.com> wrote:\n\n> So I started cleaning up our API docs and I learned that actuallyâ€¦ we\n> don't have fully spec'd out API docs anywhere. We have some of the API docs\n> for the endpoints that have /api as their root, but that doesn't include\n> the NbConvertRootHandler\n> <https://github.com/jupyter/notebook/blob/master/notebook/services/nbconvert/handlers.py>'s\n> endpoint (/api/nbconvert).\n>\n> I am going to make a separate PR for fixing our (currently broken) swagger\n> docs and adding this endpoint.\n>\n> But I think the question remains open what to do about the fact that we\n> have other endpoints that do not lead with /api.\n>\n> â€”\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> <https://github.com/jupyter/notebook/pull/2413#issuecomment-337088321>,\n> or mute the thread\n> <https://github.com/notifications/unsubscribe-auth/AABr0NirmhNnRikhf3Gtxt8tFkI-q5Plks5ss_-OgaJpZM4M9SPQ>\n> .\n>\n\n\n\n-- \nBrian E. Granger\nAssociate Professor of Physics and Data Science\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/338005702",
    "html_url": "https://github.com/jupyter/notebook/pull/2413#issuecomment-338005702",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2413",
    "id": 338005702,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODAwNTcwMg==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-19T19:02:49Z",
    "updated_at": "2017-10-19T19:02:49Z",
    "author_association": "MEMBER",
    "body": "> the question remains open what to do about the fact that we have other endpoints that do not lead with `/api`.\r\n\r\nOnly the REST API endpoints (that return JSON) belong in the swagger definition.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/338052462",
    "html_url": "https://github.com/jupyter/notebook/pull/2413#issuecomment-338052462",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2413",
    "id": 338052462,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODA1MjQ2Mg==",
    "user": {
      "login": "mpacer",
      "id": 2482408,
      "node_id": "MDQ6VXNlcjI0ODI0MDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2482408?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mpacer",
      "html_url": "https://github.com/mpacer",
      "followers_url": "https://api.github.com/users/mpacer/followers",
      "following_url": "https://api.github.com/users/mpacer/following{/other_user}",
      "gists_url": "https://api.github.com/users/mpacer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mpacer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mpacer/subscriptions",
      "organizations_url": "https://api.github.com/users/mpacer/orgs",
      "repos_url": "https://api.github.com/users/mpacer/repos",
      "events_url": "https://api.github.com/users/mpacer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mpacer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-19T22:11:24Z",
    "updated_at": "2017-10-19T22:11:24Z",
    "author_association": "MEMBER",
    "body": "So, I don't know why we would only document the endpoints that return JSON, since swagger can handle describing expected responses for arbitrary mimetypes (see OpenAPI spec docs: https://swagger.io/docs/specification/describing-responses/#media-types).\r\n\r\nMy question primarily focuses on where we should put these. Right now the api docs live next to the api handler, but that seems substantially less appropriate if we start including other endpoints that have handlers in other places. ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/338068445",
    "html_url": "https://github.com/jupyter/notebook/pull/2413#issuecomment-338068445",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2413",
    "id": 338068445,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODA2ODQ0NQ==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-19T23:49:08Z",
    "updated_at": "2017-10-19T23:49:08Z",
    "author_association": "MEMBER",
    "body": "The distinction here is whether or not something is an API. `/api/*` has supported APIs for programmatic use. `/files` might be a welcome distinction. We tend not to think that html responses are part of our _programmatic_ APIs.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/338118127",
    "html_url": "https://github.com/jupyter/notebook/pull/2413#issuecomment-338118127",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2413",
    "id": 338118127,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzODExODEyNw==",
    "user": {
      "login": "mpacer",
      "id": 2482408,
      "node_id": "MDQ6VXNlcjI0ODI0MDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2482408?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mpacer",
      "html_url": "https://github.com/mpacer",
      "followers_url": "https://api.github.com/users/mpacer/followers",
      "following_url": "https://api.github.com/users/mpacer/following{/other_user}",
      "gists_url": "https://api.github.com/users/mpacer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mpacer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mpacer/subscriptions",
      "organizations_url": "https://api.github.com/users/mpacer/orgs",
      "repos_url": "https://api.github.com/users/mpacer/repos",
      "events_url": "https://api.github.com/users/mpacer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mpacer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-20T06:31:06Z",
    "updated_at": "2017-10-20T06:36:25Z",
    "author_association": "MEMBER",
    "body": "I mean all the `/nbconvert/{format}` endpoints (not the `/api/nbconvert`\r\nendpoint) that respond by triggering a file download. They don't only send back HTML.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/365097768",
    "html_url": "https://github.com/jupyter/notebook/pull/2413#issuecomment-365097768",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2413",
    "id": 365097768,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTA5Nzc2OA==",
    "user": {
      "login": "mpacer",
      "id": 2482408,
      "node_id": "MDQ6VXNlcjI0ODI0MDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2482408?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mpacer",
      "html_url": "https://github.com/mpacer",
      "followers_url": "https://api.github.com/users/mpacer/followers",
      "following_url": "https://api.github.com/users/mpacer/following{/other_user}",
      "gists_url": "https://api.github.com/users/mpacer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mpacer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mpacer/subscriptions",
      "organizations_url": "https://api.github.com/users/mpacer/orgs",
      "repos_url": "https://api.github.com/users/mpacer/repos",
      "events_url": "https://api.github.com/users/mpacer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mpacer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-12T23:23:23Z",
    "updated_at": "2018-02-12T23:23:23Z",
    "author_association": "MEMBER",
    "body": "I have rebased on the most recent master (specifically after https://github.com/jupyter/notebook/commit/198d74aedacd98f0240f5920c7949e3f9a325bd7), so this should be able to be merged without issue.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/367133740",
    "html_url": "https://github.com/jupyter/notebook/pull/2413#issuecomment-367133740",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2413",
    "id": 367133740,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzEzMzc0MA==",
    "user": {
      "login": "mpacer",
      "id": 2482408,
      "node_id": "MDQ6VXNlcjI0ODI0MDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2482408?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mpacer",
      "html_url": "https://github.com/mpacer",
      "followers_url": "https://api.github.com/users/mpacer/followers",
      "following_url": "https://api.github.com/users/mpacer/following{/other_user}",
      "gists_url": "https://api.github.com/users/mpacer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mpacer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mpacer/subscriptions",
      "organizations_url": "https://api.github.com/users/mpacer/orgs",
      "repos_url": "https://api.github.com/users/mpacer/repos",
      "events_url": "https://api.github.com/users/mpacer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mpacer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-20T21:55:34Z",
    "updated_at": "2018-02-20T21:55:34Z",
    "author_association": "MEMBER",
    "body": "@gnestor @rgbkrk @takluyver do you know where the js issue is coming from with this PR? I can tell that it's something (probably async) that is delaying Codemirror somehow, but I don't know what that would beâ€¦",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/367232464",
    "html_url": "https://github.com/jupyter/notebook/pull/2413#issuecomment-367232464",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2413",
    "id": 367232464,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NzIzMjQ2NA==",
    "user": {
      "login": "mpacer",
      "id": 2482408,
      "node_id": "MDQ6VXNlcjI0ODI0MDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2482408?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mpacer",
      "html_url": "https://github.com/mpacer",
      "followers_url": "https://api.github.com/users/mpacer/followers",
      "following_url": "https://api.github.com/users/mpacer/following{/other_user}",
      "gists_url": "https://api.github.com/users/mpacer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mpacer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mpacer/subscriptions",
      "organizations_url": "https://api.github.com/users/mpacer/orgs",
      "repos_url": "https://api.github.com/users/mpacer/repos",
      "events_url": "https://api.github.com/users/mpacer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mpacer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-21T07:04:20Z",
    "updated_at": "2018-02-21T07:04:20Z",
    "author_association": "MEMBER",
    "body": "Working on some tests & changes that came about as a result of writing those tests.\r\n\r\nI've introduced a decision point. I need to make either the configuration file that is uploaded the source of truth for the output format or the setting in the application. I'm going to go with the configuration for now, as there would be no way to otherwise point to a non-entrypoint specified output format.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/385719763",
    "html_url": "https://github.com/jupyter/notebook/pull/2413#issuecomment-385719763",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2413",
    "id": 385719763,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NTcxOTc2Mw==",
    "user": {
      "login": "mpacer",
      "id": 2482408,
      "node_id": "MDQ6VXNlcjI0ODI0MDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2482408?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mpacer",
      "html_url": "https://github.com/mpacer",
      "followers_url": "https://api.github.com/users/mpacer/followers",
      "following_url": "https://api.github.com/users/mpacer/following{/other_user}",
      "gists_url": "https://api.github.com/users/mpacer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mpacer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mpacer/subscriptions",
      "organizations_url": "https://api.github.com/users/mpacer/orgs",
      "repos_url": "https://api.github.com/users/mpacer/repos",
      "events_url": "https://api.github.com/users/mpacer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mpacer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-05-01T16:43:44Z",
    "updated_at": "2018-05-01T16:43:53Z",
    "author_association": "MEMBER",
    "body": "@gnestor @takluyver  I just realised I never wrote out the API spec for this, so I definitely need to get that in before this would be merged and now that our spec is cleaner, this should be much easier.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/640526330",
    "html_url": "https://github.com/jupyter/notebook/pull/2413#issuecomment-640526330",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2413",
    "id": 640526330,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MDUyNjMzMA==",
    "user": {
      "login": "blink1073",
      "id": 2096628,
      "node_id": "MDQ6VXNlcjIwOTY2Mjg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2096628?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blink1073",
      "html_url": "https://github.com/blink1073",
      "followers_url": "https://api.github.com/users/blink1073/followers",
      "following_url": "https://api.github.com/users/blink1073/following{/other_user}",
      "gists_url": "https://api.github.com/users/blink1073/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blink1073/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blink1073/subscriptions",
      "organizations_url": "https://api.github.com/users/blink1073/orgs",
      "repos_url": "https://api.github.com/users/blink1073/repos",
      "events_url": "https://api.github.com/users/blink1073/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blink1073/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-08T10:46:36Z",
    "updated_at": "2020-06-08T10:46:36Z",
    "author_association": "MEMBER",
    "body": "Closing this PR as stale as part of housekeeping (and because of the merge conflicts).  Thanks for exploring this @mpacer!",
    "performed_via_github_app": null
  }
]
