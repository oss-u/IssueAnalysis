[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/302169397",
    "html_url": "https://github.com/jupyter/notebook/issues/2499#issuecomment-302169397",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2499",
    "id": 302169397,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjE2OTM5Nw==",
    "user": {
      "login": "mpacer",
      "id": 2482408,
      "node_id": "MDQ6VXNlcjI0ODI0MDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2482408?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mpacer",
      "html_url": "https://github.com/mpacer",
      "followers_url": "https://api.github.com/users/mpacer/followers",
      "following_url": "https://api.github.com/users/mpacer/following{/other_user}",
      "gists_url": "https://api.github.com/users/mpacer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mpacer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mpacer/subscriptions",
      "organizations_url": "https://api.github.com/users/mpacer/orgs",
      "repos_url": "https://api.github.com/users/mpacer/repos",
      "events_url": "https://api.github.com/users/mpacer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mpacer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-17T17:38:24Z",
    "updated_at": "2017-05-17T17:38:24Z",
    "author_association": "MEMBER",
    "body": "this is the test `custom.js` that I was using to test stuff. \r\n\r\n```javascript\r\n// file ~/custom/custom.js\r\n\r\nconsole.log(\"hello1\");\r\n\r\nrequire([\r\n\t\"base/js/namespace\",\r\n\t\"base/js/events\"\r\n], \r\n\tfunction(Jupyter, events){\r\n\t\tconsole.log(\"hello2\");\t\r\n\t\tevents.on('notebook_loaded.Notebook', function(){\r\n\t\t\tconsole.log(\"hello3\");\r\n\t\t});\r\n\t\tevents.on('app_initialized.NotebookApp', function(){\r\n\t\t\tconsole.log(\"hello4\");\r\n\t\t});\r\n});\r\n\r\nconsole.log(\"hello5\");\r\n```",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/303111191",
    "html_url": "https://github.com/jupyter/notebook/issues/2499#issuecomment-303111191",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2499",
    "id": 303111191,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzExMTE5MQ==",
    "user": {
      "login": "rolweber",
      "id": 12234414,
      "node_id": "MDQ6VXNlcjEyMjM0NDE0",
      "avatar_url": "https://avatars.githubusercontent.com/u/12234414?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rolweber",
      "html_url": "https://github.com/rolweber",
      "followers_url": "https://api.github.com/users/rolweber/followers",
      "following_url": "https://api.github.com/users/rolweber/following{/other_user}",
      "gists_url": "https://api.github.com/users/rolweber/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rolweber/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rolweber/subscriptions",
      "organizations_url": "https://api.github.com/users/rolweber/orgs",
      "repos_url": "https://api.github.com/users/rolweber/repos",
      "events_url": "https://api.github.com/users/rolweber/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rolweber/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-22T14:10:41Z",
    "updated_at": "2017-05-22T14:10:41Z",
    "author_association": "CONTRIBUTOR",
    "body": "You're right. From a brief look, I'd say that of all the changes in #1732, only these are still in place:\r\n\r\n* `notebook/templates/page.html`\r\n* `tools/build-main.js`\r\n\r\nwhile these are missing:\r\n\r\n* `notebook/static/edit/js/main.js`\r\n* `notebook/static/notebook/js/main.js`\r\n* `notebook/static/terminal/js/main.js`\r\n* `notebook/static/tree/js/main.js`\r\n\r\nYou could work from the [file diff](https://github.com/jupyter/notebook/pull/1732/files) to re-apply the missing changes. If you have time to spend and/or want to learn git, you could also examine the history to see where they got lost :-)",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/303113857",
    "html_url": "https://github.com/jupyter/notebook/issues/2499#issuecomment-303113857",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2499",
    "id": 303113857,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzExMzg1Nw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-22T14:19:58Z",
    "updated_at": "2017-05-22T14:19:58Z",
    "author_association": "MEMBER",
    "body": "Looks like they were changed back in #1378, because we don't want a bad custom.js to prevent the notebook from loading.\r\n\r\nI think the longer term fix is that rather than fiddling with the loading order, we should have promises for one-time events like `app_initialized.NotebookApp`, so that custom code and extensions can wait for something that may already have occurred.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/303695657",
    "html_url": "https://github.com/jupyter/notebook/issues/2499#issuecomment-303695657",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2499",
    "id": 303695657,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzY5NTY1Nw==",
    "user": {
      "login": "rolweber",
      "id": 12234414,
      "node_id": "MDQ6VXNlcjEyMjM0NDE0",
      "avatar_url": "https://avatars.githubusercontent.com/u/12234414?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rolweber",
      "html_url": "https://github.com/rolweber",
      "followers_url": "https://api.github.com/users/rolweber/followers",
      "following_url": "https://api.github.com/users/rolweber/following{/other_user}",
      "gists_url": "https://api.github.com/users/rolweber/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rolweber/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rolweber/subscriptions",
      "organizations_url": "https://api.github.com/users/rolweber/orgs",
      "repos_url": "https://api.github.com/users/rolweber/repos",
      "events_url": "https://api.github.com/users/rolweber/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rolweber/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-24T11:22:04Z",
    "updated_at": "2017-05-24T11:22:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mpacer: I suggest to rename this issue. Something like \"once-only events fired before custom.js is loaded\", maybe.\r\n\r\nI'm not firm with Promises either, so the following are really just pointers. I like this introduction: https://developers.google.com/web/fundamentals/getting-started/primers/promises\r\n\r\nFor the `notebook_loaded.Notebook` event, you'll have to change [notebook/static/notebook/js/notebook.js](https://github.com/jupyter/notebook/blob/master/notebook/static/notebook/js/notebook.js).  \r\nI would create a Promise in the constructor around line 100, so it's immediately available to `custom.js` code. Then resolve the promise when the `notebook_loaded.Notebook` event is fired, near line 3099, and reject it when the `notebook_load_failed.Notebook` event is fired, near line 3112.\r\n\r\nThe tricky thing is that to create a promise, you need to pass a function that expects two arguments: one function to resolve the promise, the other to reject it. In good style, you'd write the actual code for what's going to happen inside this function of yours. But due to lack of experience, I can't wrap my head around that yet. The hacky way out: use your function to store the two arguments in the Notebook object. Then, in the two places mentioned above, call one function or the other.  \r\nMaybe someone else can give you (and me) better advice.\r\n\r\n```js\r\n// near line 100\r\nthis.notebook_ready = new Promise(function (resolve, reject) {\r\n   // this is so insanely ugly...\r\n   // (hope that 'this' is the same here as two lines above)\r\n   this._resolve_notebook_ready = resolve;\r\n   this._reject_notebook_ready = reject;\r\n});\r\n\r\n// near line 3099\r\n// need to pass something, the notebook object is as good as any\r\nthis._resolve_notebook_ready(this);\r\n\r\n// near line 3112\r\nthis._reject_notebook_ready(error);\r\n```\r\nIn your `custom.js`, you'd use that promise like this:\r\n```js\r\n\r\nfunction(Jupyter, events){\r\n  Jupyter.notebook.notebook_ready.then(function(){\r\n    // notebook_loaded.Notebook must have been fired, or is about to be\r\n    // Jupyter.notebook is passed as an argument and can be ignored\r\n    console.log(\"hello3\");\r\n  });\r\n}\r\n```\r\nI hope that gets you started.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/303737887",
    "html_url": "https://github.com/jupyter/notebook/issues/2499#issuecomment-303737887",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2499",
    "id": 303737887,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzczNzg4Nw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-24T14:18:05Z",
    "updated_at": "2017-05-24T14:18:05Z",
    "author_association": "MEMBER",
    "body": "@Carreau should be able to give you advice on promises.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/304121061",
    "html_url": "https://github.com/jupyter/notebook/issues/2499#issuecomment-304121061",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2499",
    "id": 304121061,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDEyMTA2MQ==",
    "user": {
      "login": "ghazpar",
      "id": 8419388,
      "node_id": "MDQ6VXNlcjg0MTkzODg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8419388?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghazpar",
      "html_url": "https://github.com/ghazpar",
      "followers_url": "https://api.github.com/users/ghazpar/followers",
      "following_url": "https://api.github.com/users/ghazpar/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghazpar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghazpar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghazpar/subscriptions",
      "organizations_url": "https://api.github.com/users/ghazpar/orgs",
      "repos_url": "https://api.github.com/users/ghazpar/repos",
      "events_url": "https://api.github.com/users/ghazpar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghazpar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-25T20:52:13Z",
    "updated_at": "2017-05-25T20:52:33Z",
    "author_association": "NONE",
    "body": "@takluyver But if the event app_initialized.NotebookApp arrives later, how to we do stuff that need to be done before the notebook is loaded like, for instance, telling codemirror to display line numbers by default?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/304154878",
    "html_url": "https://github.com/jupyter/notebook/issues/2499#issuecomment-304154878",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2499",
    "id": 304154878,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDE1NDg3OA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-25T23:54:10Z",
    "updated_at": "2017-05-25T23:54:10Z",
    "author_association": "MEMBER",
    "body": "I haven't dived into this code in a long time. \r\nPromises would help, though because of asynchronicity you may still be triggered too late. \r\nSo if you are triggered after the notebook loads, you would still need for CodeMirror to set the default value, and loop over all the cells to apply the default to existing cells. \r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/304323581",
    "html_url": "https://github.com/jupyter/notebook/issues/2499#issuecomment-304323581",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2499",
    "id": 304323581,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDMyMzU4MQ==",
    "user": {
      "login": "ghazpar",
      "id": 8419388,
      "node_id": "MDQ6VXNlcjg0MTkzODg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8419388?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghazpar",
      "html_url": "https://github.com/ghazpar",
      "followers_url": "https://api.github.com/users/ghazpar/followers",
      "following_url": "https://api.github.com/users/ghazpar/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghazpar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghazpar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghazpar/subscriptions",
      "organizations_url": "https://api.github.com/users/ghazpar/orgs",
      "repos_url": "https://api.github.com/users/ghazpar/repos",
      "events_url": "https://api.github.com/users/ghazpar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghazpar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-26T16:12:02Z",
    "updated_at": "2017-05-26T16:12:02Z",
    "author_association": "NONE",
    "body": "I don't understand why breaking the `app_initialized.NotebookApp` event is a better alternative than letting a \"bad custon.js prevent the loading of a notebook\"? If I think I need a custom.js for my app, than it is my responsibility to make sure that this js doesn't fail. Moreover, why should this bad custom.js issue require a change of timing? Can't it be handle through exceptions?\r\n\r\nFor the line numbers, after the fact, I can certainly tell each existing code cell to display them, but my app also needs to hide many of the notebook standard interface (menubar, some element of the toolbar, etc.) that I don't want my users to see and use. Currently (up to 4.4), I could do that before the interface appeared, using the `app_initialized.NotebookApp` event. In Notebook 5.0, the custom.js appears to be called after the notebook has finished loading, thus the standard interface first appears before being hidden. It may not by a show breaker, but is is not cool!\r\n\r\nSo I repeat my question: why is it useful at this point to break the timing behavior of the custom.js mechanism, especially if the plan is to eventually remove it in favor of extensions? Better to remove it now and force transition than to leave it and break it.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/304328804",
    "html_url": "https://github.com/jupyter/notebook/issues/2499#issuecomment-304328804",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2499",
    "id": 304328804,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDMyODgwNA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-26T16:34:48Z",
    "updated_at": "2017-05-26T16:34:48Z",
    "author_association": "MEMBER",
    "body": "It's a general principle that user configuration shouldn't prevent your entire application from working at all. It doesn't 'break' the timing behaviour, it changes it. Undoubtedly if we change it back, another group of people will complain about things that break.\r\n\r\nWe have to load it at a different time to catch the exception, I believe, because of the way Javascript module loading works. We make one `require()` call which loads multiple modules. If any of them fail, the whole load fails. So in order to catch exceptions from custom.js and carry on with the rest of the code, we need to separate loading that file from loading the other code.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/304353823",
    "html_url": "https://github.com/jupyter/notebook/issues/2499#issuecomment-304353823",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2499",
    "id": 304353823,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDM1MzgyMw==",
    "user": {
      "login": "ghazpar",
      "id": 8419388,
      "node_id": "MDQ6VXNlcjg0MTkzODg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8419388?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghazpar",
      "html_url": "https://github.com/ghazpar",
      "followers_url": "https://api.github.com/users/ghazpar/followers",
      "following_url": "https://api.github.com/users/ghazpar/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghazpar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghazpar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghazpar/subscriptions",
      "organizations_url": "https://api.github.com/users/ghazpar/orgs",
      "repos_url": "https://api.github.com/users/ghazpar/repos",
      "events_url": "https://api.github.com/users/ghazpar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghazpar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-26T18:18:38Z",
    "updated_at": "2017-05-26T18:18:38Z",
    "author_association": "NONE",
    "body": "I wonder which group of people you are referring to? Those that have developed a `custom.js` since the introduction of 5.0 and that assume it is called **after** the notebook has loaded and fired both \r\n`app_initialized.NotebookApp` and `notebook_loaded.Notebook` events? Or those that have a **broken** custom script and would thus complain that it prevents their notebook from running correctly? \r\n\r\nI may agree with the invoked general principle, but certainly question your use of the word \"Undoubtedly\". I further disagree with your assertion that changing timing is not breaking. It **does** break the `custom.js` example given in the documentation, as the two events are no longer received!",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/304356589",
    "html_url": "https://github.com/jupyter/notebook/issues/2499#issuecomment-304356589",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2499",
    "id": 304356589,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDM1NjU4OQ==",
    "user": {
      "login": "ghazpar",
      "id": 8419388,
      "node_id": "MDQ6VXNlcjg0MTkzODg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8419388?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghazpar",
      "html_url": "https://github.com/ghazpar",
      "followers_url": "https://api.github.com/users/ghazpar/followers",
      "following_url": "https://api.github.com/users/ghazpar/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghazpar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghazpar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghazpar/subscriptions",
      "organizations_url": "https://api.github.com/users/ghazpar/orgs",
      "repos_url": "https://api.github.com/users/ghazpar/repos",
      "events_url": "https://api.github.com/users/ghazpar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghazpar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-26T18:30:43Z",
    "updated_at": "2017-05-26T18:30:43Z",
    "author_association": "NONE",
    "body": "I have no mastery of the javascript module loading intricacies, but wouldn't it be possible to simply load a stub module that would itself load the custom module within a try/catch? Then there would be no need to change timing...",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/304357481",
    "html_url": "https://github.com/jupyter/notebook/issues/2499#issuecomment-304357481",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2499",
    "id": 304357481,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDM1NzQ4MQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-26T18:34:33Z",
    "updated_at": "2017-05-26T18:34:33Z",
    "author_association": "MEMBER",
    "body": "That could work. Do you want to make a PR? The PRs linked above should point you to the code in question.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/304359234",
    "html_url": "https://github.com/jupyter/notebook/issues/2499#issuecomment-304359234",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2499",
    "id": 304359234,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDM1OTIzNA==",
    "user": {
      "login": "ghazpar",
      "id": 8419388,
      "node_id": "MDQ6VXNlcjg0MTkzODg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8419388?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghazpar",
      "html_url": "https://github.com/ghazpar",
      "followers_url": "https://api.github.com/users/ghazpar/followers",
      "following_url": "https://api.github.com/users/ghazpar/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghazpar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghazpar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghazpar/subscriptions",
      "organizations_url": "https://api.github.com/users/ghazpar/orgs",
      "repos_url": "https://api.github.com/users/ghazpar/repos",
      "events_url": "https://api.github.com/users/ghazpar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghazpar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-26T18:42:46Z",
    "updated_at": "2017-05-26T18:42:46Z",
    "author_association": "NONE",
    "body": "I wish I could, but I am a js novice with no PR experience on github. So not sure where to start...",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/304389019",
    "html_url": "https://github.com/jupyter/notebook/issues/2499#issuecomment-304389019",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2499",
    "id": 304389019,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDM4OTAxOQ==",
    "user": {
      "login": "mpacer",
      "id": 2482408,
      "node_id": "MDQ6VXNlcjI0ODI0MDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2482408?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mpacer",
      "html_url": "https://github.com/mpacer",
      "followers_url": "https://api.github.com/users/mpacer/followers",
      "following_url": "https://api.github.com/users/mpacer/following{/other_user}",
      "gists_url": "https://api.github.com/users/mpacer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mpacer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mpacer/subscriptions",
      "organizations_url": "https://api.github.com/users/mpacer/orgs",
      "repos_url": "https://api.github.com/users/mpacer/repos",
      "events_url": "https://api.github.com/users/mpacer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mpacer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-26T21:10:54Z",
    "updated_at": "2017-05-26T21:10:54Z",
    "author_association": "MEMBER",
    "body": "Happy to take a stab at fixing this next week at the biannual meeting — as suggested I could use a bit of guidance about how both to think about and to implement this. ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/304879706",
    "html_url": "https://github.com/jupyter/notebook/issues/2499#issuecomment-304879706",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2499",
    "id": 304879706,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDg3OTcwNg==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-30T13:34:44Z",
    "updated_at": "2017-05-30T13:34:44Z",
    "author_association": "MEMBER",
    "body": "Discussing the implementation will be easier with someone who you can talk to in person, but this is how I think about it:\r\n\r\n*Events*:\r\n- Consumer listens for events using a method called something like `on` or `register`.\r\n- The same event may fire multiple times, and consumers are called each time.\r\n- In the JS event system we use, events are identified by a name, not an object; this is convenient, because you don't need an event to be defined before you subscribe to it.\r\n\r\n*Promises* (/futures):\r\n- Consumer waits for completion using a method called something like `then()`.\r\n- The promise is only completed *once*, but the consumer code can tell if it's already fired, so code that needs to run after it is complete can be run reliably.\r\n- Promises are objects, so you need the promise to be defined before your code can use it.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/306446781",
    "html_url": "https://github.com/jupyter/notebook/issues/2499#issuecomment-306446781",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2499",
    "id": 306446781,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNjQ0Njc4MQ==",
    "user": {
      "login": "hotlogical",
      "id": 21308735,
      "node_id": "MDQ6VXNlcjIxMzA4NzM1",
      "avatar_url": "https://avatars.githubusercontent.com/u/21308735?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hotlogical",
      "html_url": "https://github.com/hotlogical",
      "followers_url": "https://api.github.com/users/hotlogical/followers",
      "following_url": "https://api.github.com/users/hotlogical/following{/other_user}",
      "gists_url": "https://api.github.com/users/hotlogical/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hotlogical/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hotlogical/subscriptions",
      "organizations_url": "https://api.github.com/users/hotlogical/orgs",
      "repos_url": "https://api.github.com/users/hotlogical/repos",
      "events_url": "https://api.github.com/users/hotlogical/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hotlogical/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-06T10:32:53Z",
    "updated_at": "2017-06-06T10:32:53Z",
    "author_association": "NONE",
    "body": "\r\nIs there a workaround for this ? I've just moved to python 3(.6) - with the latest anaconda3.\r\n\r\nWith the test case above I don't see the log messages \"hello3\" and \"hello4\"\r\n\r\nMy use case is that my custom.js is loading codemirror emacs key bindings and I can't live without them !!!!\r\n\r\nThanks.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/319049262",
    "html_url": "https://github.com/jupyter/notebook/issues/2499#issuecomment-319049262",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2499",
    "id": 319049262,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTA0OTI2Mg==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-31T12:09:42Z",
    "updated_at": "2017-07-31T12:09:42Z",
    "author_association": "MEMBER",
    "body": "I've added a promise in #2710 ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/319356324",
    "html_url": "https://github.com/jupyter/notebook/issues/2499#issuecomment-319356324",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2499",
    "id": 319356324,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTM1NjMyNA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-01T12:30:54Z",
    "updated_at": "2017-08-01T12:30:54Z",
    "author_association": "MEMBER",
    "body": "And we've just merged that, so from 5.1 you can use code like this in custom.js:\r\n\r\n```javascript\r\ndefine([\r\n        'base/js/namespace',\r\n        'base/js/promises'\r\n     ], function(Jupyter, promises) {\r\n         promises.app_initialized.then(function(appname) {\r\n             if (appname === 'NotebookApp') {\r\n                 do_stuff()\r\n             }\r\n         });\r\n     });\r\n```\r\n\r\nSo far, this fires for `NotebookApp` and `DashboardApp`, the same ones that already have app_initialized events.\r\n\r\nDo we want to do anything else on this issue?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/319425525",
    "html_url": "https://github.com/jupyter/notebook/issues/2499#issuecomment-319425525",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2499",
    "id": 319425525,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTQyNTUyNQ==",
    "user": {
      "login": "ghazpar",
      "id": 8419388,
      "node_id": "MDQ6VXNlcjg0MTkzODg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8419388?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ghazpar",
      "html_url": "https://github.com/ghazpar",
      "followers_url": "https://api.github.com/users/ghazpar/followers",
      "following_url": "https://api.github.com/users/ghazpar/following{/other_user}",
      "gists_url": "https://api.github.com/users/ghazpar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ghazpar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ghazpar/subscriptions",
      "organizations_url": "https://api.github.com/users/ghazpar/orgs",
      "repos_url": "https://api.github.com/users/ghazpar/repos",
      "events_url": "https://api.github.com/users/ghazpar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ghazpar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-01T16:35:12Z",
    "updated_at": "2017-08-01T16:35:12Z",
    "author_association": "NONE",
    "body": "What about the old notebook_loaded.Notebook event?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/319639001",
    "html_url": "https://github.com/jupyter/notebook/issues/2499#issuecomment-319639001",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2499",
    "id": 319639001,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTYzOTAwMQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-02T10:54:27Z",
    "updated_at": "2017-08-02T10:54:27Z",
    "author_association": "MEMBER",
    "body": "Yup, I guess that makes sense too. See #2719.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/323596277",
    "html_url": "https://github.com/jupyter/notebook/issues/2499#issuecomment-323596277",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2499",
    "id": 323596277,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzU5NjI3Nw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-20T16:33:50Z",
    "updated_at": "2017-08-20T16:33:50Z",
    "author_association": "MEMBER",
    "body": "Closing this as solved by adding promises in #2710 and #2719. I know it's not a great solution for the code already using the event, but I think it's a better API for the future.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/327349486",
    "html_url": "https://github.com/jupyter/notebook/issues/2499#issuecomment-327349486",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2499",
    "id": 327349486,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyNzM0OTQ4Ng==",
    "user": {
      "login": "rlamorea",
      "id": 3486207,
      "node_id": "MDQ6VXNlcjM0ODYyMDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3486207?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rlamorea",
      "html_url": "https://github.com/rlamorea",
      "followers_url": "https://api.github.com/users/rlamorea/followers",
      "following_url": "https://api.github.com/users/rlamorea/following{/other_user}",
      "gists_url": "https://api.github.com/users/rlamorea/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rlamorea/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rlamorea/subscriptions",
      "organizations_url": "https://api.github.com/users/rlamorea/orgs",
      "repos_url": "https://api.github.com/users/rlamorea/repos",
      "events_url": "https://api.github.com/users/rlamorea/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rlamorea/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-06T01:38:36Z",
    "updated_at": "2017-09-06T01:40:38Z",
    "author_association": "NONE",
    "body": "So, it seems that because of this change, the instructions here:\r\nhttp://testnb.readthedocs.io/en/latest/public_server.html#embedding-the-notebook-in-another-website\r\n\r\nare no longer valid.  Custom.js is called _after_ the notebook links are created and as a result they are created as `target=\"_blank\"` and thus break the single-tab functionality.\r\n\r\nSeems likely the docs are out of date, but I don't see an alternative.\r\nWhat's the workaround on this?",
    "performed_via_github_app": null
  }
]
