[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/211365314",
    "html_url": "https://github.com/jupyter/notebook/issues/1365#issuecomment-211365314",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1365",
    "id": 211365314,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTM2NTMxNA==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-18T12:45:59Z",
    "updated_at": "2016-04-18T12:45:59Z",
    "author_association": "MEMBER",
    "body": "A notebook has only one language associated with it, so it is generally assumed that setting the language of a notebook should only happen once or twice, not continuously. If you keep switching back and forth, that means that at any given time, much of your notebook is invalid, since the notebook itself is associated with a single language. I know there are people who would like multi-language notebooks, where the notebook can associated different cells with different languages ([Beaker](http://beakernotebook.com), which is based on Jupyter, adds this feature), but this is not the model Jupyter has at the moment. We have been discussing if/how/when we should be adding it, though.\n\nRight now, your best bet is probably to use rpy2 and its `%%R` magic to use Python and R at the same time, or to keep separate R and Python notebooks. The nice thing about `%%R` is that it lets you easily move data back and forth between the two interpreters.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/211374817",
    "html_url": "https://github.com/jupyter/notebook/issues/1365#issuecomment-211374817",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1365",
    "id": 211374817,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTM3NDgxNw==",
    "user": {
      "login": "napjon",
      "id": 1993517,
      "node_id": "MDQ6VXNlcjE5OTM1MTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1993517?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/napjon",
      "html_url": "https://github.com/napjon",
      "followers_url": "https://api.github.com/users/napjon/followers",
      "following_url": "https://api.github.com/users/napjon/following{/other_user}",
      "gists_url": "https://api.github.com/users/napjon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/napjon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/napjon/subscriptions",
      "organizations_url": "https://api.github.com/users/napjon/orgs",
      "repos_url": "https://api.github.com/users/napjon/repos",
      "events_url": "https://api.github.com/users/napjon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/napjon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-18T13:14:43Z",
    "updated_at": "2016-04-19T01:18:04Z",
    "author_association": "NONE",
    "body": "I see, thank you for giving me a clear direction! I've heard about Beaker but have no idea until now that they have multi-language feature. I've been using `%%R`and it's great, but a lack of tab completion making my work less productive.\n\nI'm going to close this issue now.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/211374822",
    "html_url": "https://github.com/jupyter/notebook/issues/1365#issuecomment-211374822",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1365",
    "id": 211374822,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTM3NDgyMg==",
    "user": {
      "login": "dsblank",
      "id": 168568,
      "node_id": "MDQ6VXNlcjE2ODU2OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/168568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsblank",
      "html_url": "https://github.com/dsblank",
      "followers_url": "https://api.github.com/users/dsblank/followers",
      "following_url": "https://api.github.com/users/dsblank/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsblank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsblank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsblank/subscriptions",
      "organizations_url": "https://api.github.com/users/dsblank/orgs",
      "repos_url": "https://api.github.com/users/dsblank/repos",
      "events_url": "https://api.github.com/users/dsblank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsblank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-18T13:14:46Z",
    "updated_at": "2016-04-18T13:14:46Z",
    "author_association": "MEMBER",
    "body": "I agree with @minrk that using the `%%R` is probably what you want to use.\n\nBut, to be a bit more precise on what Min said: A notebook only has one \"kernel\" associated with it. One could create a hybrid kernel that has two (or more) languages that the kernel could route instructions to, and keep the context. It isn't that difficult to create a custom kernel, even with IPython-inspired \"magics\". For example, see https://github.com/Calysto/metakernel\n\nA Beaker-like metakernel would probably be fairly easy to implement. Can't wait for summer!\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/211375384",
    "html_url": "https://github.com/jupyter/notebook/issues/1365#issuecomment-211375384",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1365",
    "id": 211375384,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTM3NTM4NA==",
    "user": {
      "login": "napjon",
      "id": 1993517,
      "node_id": "MDQ6VXNlcjE5OTM1MTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1993517?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/napjon",
      "html_url": "https://github.com/napjon",
      "followers_url": "https://api.github.com/users/napjon/followers",
      "following_url": "https://api.github.com/users/napjon/following{/other_user}",
      "gists_url": "https://api.github.com/users/napjon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/napjon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/napjon/subscriptions",
      "organizations_url": "https://api.github.com/users/napjon/orgs",
      "repos_url": "https://api.github.com/users/napjon/repos",
      "events_url": "https://api.github.com/users/napjon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/napjon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-18T13:17:03Z",
    "updated_at": "2016-04-18T13:17:03Z",
    "author_association": "NONE",
    "body": "Thank you @dsblank, I'll try to explore that as well in more detail.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/211443268",
    "html_url": "https://github.com/jupyter/notebook/issues/1365#issuecomment-211443268",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1365",
    "id": 211443268,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTQ0MzI2OA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-18T15:54:38Z",
    "updated_at": "2016-04-18T15:54:38Z",
    "author_association": "MEMBER",
    "body": "And from yet another angle: we do hope to enable tab completions in cell magics at some point, but refactoring the completion machinery is a pretty big job, and once we've made it possible to provide completions for magics, magic authors will still need to actually provide them.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/211669269",
    "html_url": "https://github.com/jupyter/notebook/issues/1365#issuecomment-211669269",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1365",
    "id": 211669269,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTY2OTI2OQ==",
    "user": {
      "login": "napjon",
      "id": 1993517,
      "node_id": "MDQ6VXNlcjE5OTM1MTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1993517?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/napjon",
      "html_url": "https://github.com/napjon",
      "followers_url": "https://api.github.com/users/napjon/followers",
      "following_url": "https://api.github.com/users/napjon/following{/other_user}",
      "gists_url": "https://api.github.com/users/napjon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/napjon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/napjon/subscriptions",
      "organizations_url": "https://api.github.com/users/napjon/orgs",
      "repos_url": "https://api.github.com/users/napjon/repos",
      "events_url": "https://api.github.com/users/napjon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/napjon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-19T01:18:24Z",
    "updated_at": "2016-04-19T01:18:24Z",
    "author_association": "NONE",
    "body": "IMHO, changing the kernel on the fly is more intuitive.  I'm very excited when Jupyter added it and has spread the news to my colleagues. This means I can investigate without facing tools limitation.\n\nIf we still do it within cell magics, I see that Jupyter R kernel already has tab completion. Is it possible that we use `%load_ext` to open a new R kernel as an alternative, and get tab completion in R everytime there is an R magic?\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/395037733",
    "html_url": "https://github.com/jupyter/notebook/issues/1365#issuecomment-395037733",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1365",
    "id": 395037733,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTAzNzczMw==",
    "user": {
      "login": "RoyiAvital",
      "id": 7347975,
      "node_id": "MDQ6VXNlcjczNDc5NzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7347975?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/RoyiAvital",
      "html_url": "https://github.com/RoyiAvital",
      "followers_url": "https://api.github.com/users/RoyiAvital/followers",
      "following_url": "https://api.github.com/users/RoyiAvital/following{/other_user}",
      "gists_url": "https://api.github.com/users/RoyiAvital/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/RoyiAvital/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/RoyiAvital/subscriptions",
      "organizations_url": "https://api.github.com/users/RoyiAvital/orgs",
      "repos_url": "https://api.github.com/users/RoyiAvital/repos",
      "events_url": "https://api.github.com/users/RoyiAvital/events{/privacy}",
      "received_events_url": "https://api.github.com/users/RoyiAvital/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-06T11:35:29Z",
    "updated_at": "2018-06-06T11:35:29Z",
    "author_association": "NONE",
    "body": "Is there a way to, at least, use Python in different Kernel?\r\nFor instance, having a notebook with MATLAB Kernel yet also run Python in one cell.\r\n\r\nI would assume running Python at any time is easy as the whole back end of the system is Python based.\r\n\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/397694494",
    "html_url": "https://github.com/jupyter/notebook/issues/1365#issuecomment-397694494",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1365",
    "id": 397694494,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzY5NDQ5NA==",
    "user": {
      "login": "xappppp",
      "id": 7443937,
      "node_id": "MDQ6VXNlcjc0NDM5Mzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7443937?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xappppp",
      "html_url": "https://github.com/xappppp",
      "followers_url": "https://api.github.com/users/xappppp/followers",
      "following_url": "https://api.github.com/users/xappppp/following{/other_user}",
      "gists_url": "https://api.github.com/users/xappppp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xappppp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xappppp/subscriptions",
      "organizations_url": "https://api.github.com/users/xappppp/orgs",
      "repos_url": "https://api.github.com/users/xappppp/repos",
      "events_url": "https://api.github.com/users/xappppp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xappppp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-15T17:45:55Z",
    "updated_at": "2018-06-15T17:49:38Z",
    "author_association": "NONE",
    "body": "Is there a way even to just run two Python kernels in JN? I have a simulation need to run for hours in one cell. But I want meanwhile do my editing and coding in other sections of my work.",
    "performed_via_github_app": null
  }
]
