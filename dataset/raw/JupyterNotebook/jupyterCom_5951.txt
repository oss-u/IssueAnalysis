[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/762414285",
    "html_url": "https://github.com/jupyter/notebook/issues/5951#issuecomment-762414285",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5951",
    "id": 762414285,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MjQxNDI4NQ==",
    "user": {
      "login": "kevin-bates",
      "id": 22599560,
      "node_id": "MDQ6VXNlcjIyNTk5NTYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/22599560?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevin-bates",
      "html_url": "https://github.com/kevin-bates",
      "followers_url": "https://api.github.com/users/kevin-bates/followers",
      "following_url": "https://api.github.com/users/kevin-bates/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevin-bates/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevin-bates/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevin-bates/subscriptions",
      "organizations_url": "https://api.github.com/users/kevin-bates/orgs",
      "repos_url": "https://api.github.com/users/kevin-bates/repos",
      "events_url": "https://api.github.com/users/kevin-bates/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevin-bates/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-18T18:38:37Z",
    "updated_at": "2021-01-18T18:38:37Z",
    "author_association": "MEMBER",
    "body": "Since this appears to reproduce from within a straight `IPython` session, this should be opened in [its repository](https://github.com/ipython/ipython).  Also, it looks like your dunders (`'__'`) got lost in rendering.  Is this what you wanted to show...\r\n```python\r\nimport multiprocessing\r\nimport time\r\n\r\ndef calculate_one_process(x):\r\n    print('calculate {}'.format(x))\r\n    return sum([i * i for i in range(x+1)])\r\n\r\nif __name__ == '__main__':\r\n    nums = [10000000 + x for x in range(20)]\r\n    print('start')\r\n    start_time = time.perf_counter()\r\n    with multiprocessing.Pool(processes=3) as cal_pool:\r\n        cal_pool.map(calculate_one_process, nums)\r\n    end_time = time.perf_counter()\r\n    print('all preocesses takes {}s'.format(end_time - start_time))\r\n```",
    "performed_via_github_app": null
  }
]
