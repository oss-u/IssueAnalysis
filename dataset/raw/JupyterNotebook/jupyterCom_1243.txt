[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/200185249",
    "html_url": "https://github.com/jupyter/notebook/issues/1243#issuecomment-200185249",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1243",
    "id": 200185249,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMDE4NTI0OQ==",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-23T05:14:02Z",
    "updated_at": "2016-03-23T05:14:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "Could you edit the title of this issue - at first I thought you were\ntalking about CSS classes or something in the UI. Maybe something like\n\"Define a Python class across multiple cells?\"\n\nOn Tue, Mar 22, 2016 at 11:56 AM, Matthias Bussonnier <\nnotifications@github.com> wrote:\n\n> This issue is both Notebook & IPython, but I guess could be solved here\n> only with an extension.\n> \n> Again, requested during JupyterDays:\n> \n> For education purpose, it would be nice to be able to define a class\n> across many cells., in particular 1 method/cell.\n> \n> I think it is possible by peeking at next/previous coed cells, and if the\n> all body of a cell is indented by at least 4 spaces, \"join\" the content of\n> each cell before sending a single execution request.\n> \n> we could \"mark\" joined executed cells with a specific prompt.\n> \n> Ping @ellisonbg https://github.com/ellisonbg\n> \n> â€”\n> You are receiving this because you were mentioned.\n> Reply to this email directly or view it on GitHub\n> https://github.com/jupyter/notebook/issues/1243\n\n## \n\nBrian E. Granger\nAssociate Professor of Physics and Data Science\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/200391488",
    "html_url": "https://github.com/jupyter/notebook/issues/1243#issuecomment-200391488",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1243",
    "id": 200391488,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMDM5MTQ4OA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-23T15:21:57Z",
    "updated_at": "2016-03-23T15:21:57Z",
    "author_association": "MEMBER",
    "body": "Title updated.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/200425910",
    "html_url": "https://github.com/jupyter/notebook/issues/1243#issuecomment-200425910",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1243",
    "id": 200425910,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMDQyNTkxMA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-23T16:32:40Z",
    "updated_at": "2016-03-23T16:32:40Z",
    "author_association": "MEMBER",
    "body": "We currently dedent code if it's all indented, because it's not uncommon to copy some code from the middle of a method or function with the intention of running it directly.\n\nI'm happy to help someone build an extension for this, but:\n- I don't think it's likely to be smooth or seamless enough to go into IPython/Jupyter itself\n- I'd probably do it with cell magics, e.g. `%%addtoclass FooBar`. Explicit is better than implicit, etc.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/200443891",
    "html_url": "https://github.com/jupyter/notebook/issues/1243#issuecomment-200443891",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1243",
    "id": 200443891,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMDQ0Mzg5MQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-23T17:04:20Z",
    "updated_at": "2016-03-23T17:04:20Z",
    "author_association": "MEMBER",
    "body": "We dedent it in IPython, I'm thinking a Js extension can likely handle submitting all cells at the same time. \n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/200444692",
    "html_url": "https://github.com/jupyter/notebook/issues/1243#issuecomment-200444692",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1243",
    "id": 200444692,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMDQ0NDY5Mg==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-23T17:06:56Z",
    "updated_at": "2016-03-23T17:06:56Z",
    "author_association": "MEMBER",
    "body": "I'm not quite sure what you're envisaging, but I can't see anything in the frontend solving this in a nice way.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/200447221",
    "html_url": "https://github.com/jupyter/notebook/issues/1243#issuecomment-200447221",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1243",
    "id": 200447221,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMDQ0NzIyMQ==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-23T17:13:43Z",
    "updated_at": "2016-03-23T17:13:43Z",
    "author_association": "MEMBER",
    "body": "js can group the cells input and send it as a single execution, rather than executing the cells separately.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/200447284",
    "html_url": "https://github.com/jupyter/notebook/issues/1243#issuecomment-200447284",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1243",
    "id": 200447284,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMDQ0NzI4NA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-23T17:13:53Z",
    "updated_at": "2016-03-23T17:13:53Z",
    "author_association": "MEMBER",
    "body": "```\nCell.prototype.execute = function(){\n   if(this.all_indented){\n      this.kernel.execute(this.previous.cell.source + this.cell.source)\n   } else {\n      this.kernel.execute(this.cell.source)\n  }\n}\n```\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/200448480",
    "html_url": "https://github.com/jupyter/notebook/issues/1243#issuecomment-200448480",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1243",
    "id": 200448480,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMDQ0ODQ4MA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-23T17:18:00Z",
    "updated_at": "2016-03-23T17:18:00Z",
    "author_association": "MEMBER",
    "body": "That feels like something that could be really confusing, so I wouldn't want it on by default. But if it's an optional extension, then it's very easy for people using it to create notebooks that won't work for anyone without the extension, and will fail in mysterious and confusing ways.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/200456244",
    "html_url": "https://github.com/jupyter/notebook/issues/1243#issuecomment-200456244",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1243",
    "id": 200456244,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIwMDQ1NjI0NA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-23T17:32:53Z",
    "updated_at": "2016-03-23T17:32:53Z",
    "author_association": "MEMBER",
    "body": "> That feels like something that could be really confusing, so I wouldn't want it on by default. But if it's an optional extension, then it's very easy for people using it to create notebooks that won't work for anyone without the extension, and will fail in mysterious and confusing ways.\n\nYep, seem about right. \n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/263830102",
    "html_url": "https://github.com/jupyter/notebook/issues/1243#issuecomment-263830102",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1243",
    "id": 263830102,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzgzMDEwMg==",
    "user": {
      "login": "Henry-E",
      "id": 12613144,
      "node_id": "MDQ6VXNlcjEyNjEzMTQ0",
      "avatar_url": "https://avatars.githubusercontent.com/u/12613144?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Henry-E",
      "html_url": "https://github.com/Henry-E",
      "followers_url": "https://api.github.com/users/Henry-E/followers",
      "following_url": "https://api.github.com/users/Henry-E/following{/other_user}",
      "gists_url": "https://api.github.com/users/Henry-E/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Henry-E/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Henry-E/subscriptions",
      "organizations_url": "https://api.github.com/users/Henry-E/orgs",
      "repos_url": "https://api.github.com/users/Henry-E/repos",
      "events_url": "https://api.github.com/users/Henry-E/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Henry-E/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-30T09:51:53Z",
    "updated_at": "2016-11-30T09:51:53Z",
    "author_association": "NONE",
    "body": "An explicit cell magics for this would be nice",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/264608438",
    "html_url": "https://github.com/jupyter/notebook/issues/1243#issuecomment-264608438",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1243",
    "id": 264608438,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NDYwODQzOA==",
    "user": {
      "login": "aaronmyatt",
      "id": 11920225,
      "node_id": "MDQ6VXNlcjExOTIwMjI1",
      "avatar_url": "https://avatars.githubusercontent.com/u/11920225?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aaronmyatt",
      "html_url": "https://github.com/aaronmyatt",
      "followers_url": "https://api.github.com/users/aaronmyatt/followers",
      "following_url": "https://api.github.com/users/aaronmyatt/following{/other_user}",
      "gists_url": "https://api.github.com/users/aaronmyatt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aaronmyatt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aaronmyatt/subscriptions",
      "organizations_url": "https://api.github.com/users/aaronmyatt/orgs",
      "repos_url": "https://api.github.com/users/aaronmyatt/repos",
      "events_url": "https://api.github.com/users/aaronmyatt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aaronmyatt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-03T02:11:03Z",
    "updated_at": "2016-12-03T02:12:48Z",
    "author_association": "CONTRIBUTOR",
    "body": "My humble vision for this sort of feature is the ability to create 'subcells'. Perhaps even automatically convert doc strings and other inline comments into these 'subcells'. Therefore we could conveniently intersperse markdown within classes and other long code blocks where appropriate. The challenge, I suspect, will be executing the 'parent' cell as a single unit.\r\n\r\nI am trawling the documentation now to prepare myself for contributing plugins/fixes. However, if someone can kindly point me in the right direction I will gladly take a stab at implementing this. What is the feasibility of my suggestion? Would it need to be a plugin? ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/301566259",
    "html_url": "https://github.com/jupyter/notebook/issues/1243#issuecomment-301566259",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1243",
    "id": 301566259,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTU2NjI1OQ==",
    "user": {
      "login": "alexhagen",
      "id": 871540,
      "node_id": "MDQ6VXNlcjg3MTU0MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/871540?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexhagen",
      "html_url": "https://github.com/alexhagen",
      "followers_url": "https://api.github.com/users/alexhagen/followers",
      "following_url": "https://api.github.com/users/alexhagen/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexhagen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexhagen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexhagen/subscriptions",
      "organizations_url": "https://api.github.com/users/alexhagen/orgs",
      "repos_url": "https://api.github.com/users/alexhagen/repos",
      "events_url": "https://api.github.com/users/alexhagen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexhagen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-15T18:41:25Z",
    "updated_at": "2017-05-15T18:41:25Z",
    "author_association": "NONE",
    "body": "I made a magic for this exact purpose, I'm calling it ``jdc`` - or Jupyter dynamic classes.  It's super simple, but basically it allows you to type\r\n\r\n```python\r\n%%add_to our_class\r\ndef our_method(self, our_variable):\r\n    print our_variable\r\n```\r\nand that method will be added to the class ``our_class`` (and all objects of that type) with access to self.  You can also add it to only a single object with\r\n\r\n```python\r\n%%add_to our_object\r\ndef our_method(self, our_variable):\r\n    print our_variable\r\n```\r\n\r\nDocumentation is at [https://alexhagen.github.io/jdc](https://alexhagen.github.io/jdc).  I hope this helps",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/333124272",
    "html_url": "https://github.com/jupyter/notebook/issues/1243#issuecomment-333124272",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1243",
    "id": 333124272,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzEyNDI3Mg==",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-09-29T13:20:26Z",
    "updated_at": "2017-09-29T13:20:26Z",
    "author_association": "MEMBER",
    "body": "@alexhagen - @jzf2101 just pointed out your solution to this issue. Solving this with a package like yours looks like a great solution to this issue. Do you plan to release this as a python package on pypi?\r\n\r\nI think this issue can be closed as solved with this package. @Carreau - what do you think?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/333661276",
    "html_url": "https://github.com/jupyter/notebook/issues/1243#issuecomment-333661276",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1243",
    "id": 333661276,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzMzY2MTI3Ng==",
    "user": {
      "login": "alexhagen",
      "id": 871540,
      "node_id": "MDQ6VXNlcjg3MTU0MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/871540?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexhagen",
      "html_url": "https://github.com/alexhagen",
      "followers_url": "https://api.github.com/users/alexhagen/followers",
      "following_url": "https://api.github.com/users/alexhagen/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexhagen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexhagen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexhagen/subscriptions",
      "organizations_url": "https://api.github.com/users/alexhagen/orgs",
      "repos_url": "https://api.github.com/users/alexhagen/repos",
      "events_url": "https://api.github.com/users/alexhagen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexhagen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-02T20:51:33Z",
    "updated_at": "2017-10-03T18:19:36Z",
    "author_association": "NONE",
    "body": "I've put it up on PyPI.  Should install via \r\n\r\n```bash\r\n\r\npip install jdc\r\n\r\n```\r\n\r\nTested on Ubuntu with Python 2.7 and 3.3.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/369709377",
    "html_url": "https://github.com/jupyter/notebook/issues/1243#issuecomment-369709377",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1243",
    "id": 369709377,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTcwOTM3Nw==",
    "user": {
      "login": "jzf2101",
      "id": 1373035,
      "node_id": "MDQ6VXNlcjEzNzMwMzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1373035?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jzf2101",
      "html_url": "https://github.com/jzf2101",
      "followers_url": "https://api.github.com/users/jzf2101/followers",
      "following_url": "https://api.github.com/users/jzf2101/following{/other_user}",
      "gists_url": "https://api.github.com/users/jzf2101/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jzf2101/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jzf2101/subscriptions",
      "organizations_url": "https://api.github.com/users/jzf2101/orgs",
      "repos_url": "https://api.github.com/users/jzf2101/repos",
      "events_url": "https://api.github.com/users/jzf2101/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jzf2101/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-01T19:49:31Z",
    "updated_at": "2018-03-01T19:49:31Z",
    "author_association": "CONTRIBUTOR",
    "body": "@gnestor Is this issue still open?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/369720735",
    "html_url": "https://github.com/jupyter/notebook/issues/1243#issuecomment-369720735",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1243",
    "id": 369720735,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTcyMDczNQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-01T20:29:19Z",
    "updated_at": "2018-03-01T20:29:19Z",
    "author_association": "MEMBER",
    "body": "i'd say that @alexhagen's jdc package is as 'solved' as this is going to get, so we should close this issue.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/369753964",
    "html_url": "https://github.com/jupyter/notebook/issues/1243#issuecomment-369753964",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1243",
    "id": 369753964,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2OTc1Mzk2NA==",
    "user": {
      "login": "dsblank",
      "id": 168568,
      "node_id": "MDQ6VXNlcjE2ODU2OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/168568?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dsblank",
      "html_url": "https://github.com/dsblank",
      "followers_url": "https://api.github.com/users/dsblank/followers",
      "following_url": "https://api.github.com/users/dsblank/following{/other_user}",
      "gists_url": "https://api.github.com/users/dsblank/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dsblank/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dsblank/subscriptions",
      "organizations_url": "https://api.github.com/users/dsblank/orgs",
      "repos_url": "https://api.github.com/users/dsblank/repos",
      "events_url": "https://api.github.com/users/dsblank/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dsblank/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-01T22:30:44Z",
    "updated_at": "2018-03-01T22:30:44Z",
    "author_association": "MEMBER",
    "body": "Just to point out that you can do this in regular Python, without resorting to any extra magic:\r\n\r\nCell 1:\r\n```python\r\nclass MyClass():\r\n    def method1(self):\r\n        print(\"method1\")\r\n```\r\nCell 2:\r\n```python\r\nclass MyClass(MyClass):\r\n    def method2(self):\r\n        print(\"method2\")\r\n```\r\nCell 3:\r\n```python\r\ninstance = MyClass()\r\ninstance.method1()\r\ninstance.method2()\r\n```\r\nThat is, you can define a class recursively, cell by cell. I don't think the final class is any different from one defined all in one cell. So you don't need an extra package to \"solve\" this problem.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/443372801",
    "html_url": "https://github.com/jupyter/notebook/issues/1243#issuecomment-443372801",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1243",
    "id": 443372801,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0MzM3MjgwMQ==",
    "user": {
      "login": "syockit",
      "id": 5764966,
      "node_id": "MDQ6VXNlcjU3NjQ5NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5764966?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/syockit",
      "html_url": "https://github.com/syockit",
      "followers_url": "https://api.github.com/users/syockit/followers",
      "following_url": "https://api.github.com/users/syockit/following{/other_user}",
      "gists_url": "https://api.github.com/users/syockit/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/syockit/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/syockit/subscriptions",
      "organizations_url": "https://api.github.com/users/syockit/orgs",
      "repos_url": "https://api.github.com/users/syockit/repos",
      "events_url": "https://api.github.com/users/syockit/events{/privacy}",
      "received_events_url": "https://api.github.com/users/syockit/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-30T23:40:05Z",
    "updated_at": "2018-11-30T23:40:05Z",
    "author_association": "NONE",
    "body": "> That is, you can define a class recursively, cell by cell. I don't think the final class is any different from one defined all in one cell. So you don't need an extra package to \"solve\" this problem.\r\n\r\nUnder the hood, this creates a hierarchy of classes with the same name.\r\n```python\r\nimport inspect\r\ninspect.getmro(MyClass)\r\n```\r\n```\r\n(__main__.MyClass, __main__.MyClass, object)\r\n```\r\nI don't know if there's a limit to the number of superclasses, but for a typical notebook it shouldn't be a problem.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/694517524",
    "html_url": "https://github.com/jupyter/notebook/issues/1243#issuecomment-694517524",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1243",
    "id": 694517524,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDUxNzUyNA==",
    "user": {
      "login": "andsmi97",
      "id": 26883514,
      "node_id": "MDQ6VXNlcjI2ODgzNTE0",
      "avatar_url": "https://avatars.githubusercontent.com/u/26883514?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andsmi97",
      "html_url": "https://github.com/andsmi97",
      "followers_url": "https://api.github.com/users/andsmi97/followers",
      "following_url": "https://api.github.com/users/andsmi97/following{/other_user}",
      "gists_url": "https://api.github.com/users/andsmi97/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andsmi97/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andsmi97/subscriptions",
      "organizations_url": "https://api.github.com/users/andsmi97/orgs",
      "repos_url": "https://api.github.com/users/andsmi97/repos",
      "events_url": "https://api.github.com/users/andsmi97/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andsmi97/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-17T21:49:37Z",
    "updated_at": "2020-09-17T21:49:37Z",
    "author_association": "NONE",
    "body": "> Just to point out that you can do this in regular Python, without resorting to any extra magic:\r\n> \r\n> Cell 1:\r\n> \r\n> ```python\r\n> class MyClass():\r\n>     def method1(self):\r\n>         print(\"method1\")\r\n> ```\r\n> \r\n> Cell 2:\r\n> \r\n> ```python\r\n> class MyClass(MyClass):\r\n>     def method2(self):\r\n>         print(\"method2\")\r\n> ```\r\n> \r\n> Cell 3:\r\n> \r\n> ```python\r\n> instance = MyClass()\r\n> instance.method1()\r\n> instance.method2()\r\n> ```\r\n> \r\n> That is, you can define a class recursively, cell by cell. I don't think the final class is any different from one defined all in one cell. So you don't need an extra package to \"solve\" this problem.\r\n\r\nWell, that wouldn't work if I want to comment my class methods using Text Cells",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/694961977",
    "html_url": "https://github.com/jupyter/notebook/issues/1243#issuecomment-694961977",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1243",
    "id": 694961977,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NDk2MTk3Nw==",
    "user": {
      "login": "alexhagen",
      "id": 871540,
      "node_id": "MDQ6VXNlcjg3MTU0MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/871540?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alexhagen",
      "html_url": "https://github.com/alexhagen",
      "followers_url": "https://api.github.com/users/alexhagen/followers",
      "following_url": "https://api.github.com/users/alexhagen/following{/other_user}",
      "gists_url": "https://api.github.com/users/alexhagen/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alexhagen/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alexhagen/subscriptions",
      "organizations_url": "https://api.github.com/users/alexhagen/orgs",
      "repos_url": "https://api.github.com/users/alexhagen/repos",
      "events_url": "https://api.github.com/users/alexhagen/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alexhagen/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-18T16:23:53Z",
    "updated_at": "2020-09-18T16:23:53Z",
    "author_association": "NONE",
    "body": "Thanks to @dsblank for pointing out that this can be done without a package.  I'll add that to the readme, a really clever way to do it.  I still prefer the syntax of jdc, so I'm going to keep it as a package, but it's always interesting to see different ways to get the same result.",
    "performed_via_github_app": null
  }
]
