[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/438246328",
    "html_url": "https://github.com/jupyter/notebook/pull/4170#issuecomment-438246328",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4170",
    "id": 438246328,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODI0NjMyOA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-13T12:18:17Z",
    "updated_at": "2018-11-13T12:18:17Z",
    "author_association": "MEMBER",
    "body": "Just thought about this a bit more in the context of [a discussion on nbconvert](https://github.com/jupyter/nbconvert/pull/809).\r\n\r\nI think the crucial question is **whether and how we associate notebooks with an environment.**\r\n\r\nNormal code files are associated with a language by their file extension (`.py` -> Python) and if they're designed to be a command-line entry point, can be associated with an interpreter (~= environment) by a shebang line like `#!/usr/bin/python`. They can also be associated with whatever environment you're currently in by using `#!/usr/bin/env python`, and you can always override the shebang by running with an explicit interpreter: `path/to/python foo.py`. Shebang lines are often rewritten during installation (e.g. by pip or conda), because it's understood that they are only meaningful on a specific system.\r\n\r\nNotebooks are associated with a language by language info in the notebook metadata. This doesn't need to change. Code will only make sense in the right language, and the claim that 'this is Python code' means the same thing everywhere. This is our equivalent of a `.py` extension.\r\n\r\nWe originally designed kernelspecs as if there would be one per language (or per major language version, like Python 2 or 3). Their evolution has led to them often being used to distinguish environments for the same language. So the kernelspec name in the notebook metadata effectively associates a notebook with an environment, like a shebang line.\r\n\r\nThis leads to some problems:\r\n\r\n* Lots of people don't know about the kernelspec name in the notebook metadata, and consequently don't expect a notebook to be tied to an environment. Unlike a shebang, it's added automatically whenever you save the file, and it's not visible in the editor.\r\n* It's not very obvious how to override the association if you want to run it in a different environment. Different tools have different mechanisms (e.g. nbval's `--current-env` flag).\r\n* Kernelspec names are even more brittle than shebangs: a shebang only depends on the filesystem path, whereas kernelspecs depend on the environment and go through an extra layer of indirection.\r\n* Notebooks are distributed without any install step where a tool could modify the metadata (like rewriting a shebang).\r\n\r\nI think we should at least get rid of automatically saving an association with a particular environment. That leaves a couple of questions:\r\n\r\n1. What happens when you open a notebook and there are multiple kernels available for its language? For command line tools like nbconvert, I'm inclined to say the user should be forced to pick. But that seems awkward for interactive use. Should we remember locally an association between paths and kernels (another kind of hidden state)? Should we have some notion of a default kernel for each language - and if so how is that chosen?\r\n2. Should there be some way of explicitly associating a notebook or a directory or a 'project' (however we define that) with a particular kernel? E.g. if you do `jupyter kernel-assoc . conda/foo`, all notebooks opened or created under the CWD would have `conda/foo` as the default kernel? Where would this be stored, and how would we make it visible?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/438475847",
    "html_url": "https://github.com/jupyter/notebook/pull/4170#issuecomment-438475847",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4170",
    "id": 438475847,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQzODQ3NTg0Nw==",
    "user": {
      "login": "dhirschfeld",
      "id": 881019,
      "node_id": "MDQ6VXNlcjg4MTAxOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/881019?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dhirschfeld",
      "html_url": "https://github.com/dhirschfeld",
      "followers_url": "https://api.github.com/users/dhirschfeld/followers",
      "following_url": "https://api.github.com/users/dhirschfeld/following{/other_user}",
      "gists_url": "https://api.github.com/users/dhirschfeld/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dhirschfeld/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dhirschfeld/subscriptions",
      "organizations_url": "https://api.github.com/users/dhirschfeld/orgs",
      "repos_url": "https://api.github.com/users/dhirschfeld/repos",
      "events_url": "https://api.github.com/users/dhirschfeld/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dhirschfeld/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-11-13T23:19:15Z",
    "updated_at": "2018-11-13T23:19:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "> *I'm inclined to say the user should be forced to pick*\r\n\r\nI think that's best in *all* cases. Yes, that does introduce some friction in interactive use but I think a well designed UX can alleviate that problem.\r\n\r\n - If each notebook stores only the language it uses then when opening it for the first time a dialog can pop up listing all the kernels available on the system *for that language*\r\n - As mentioned elsewhere, the dialog can have a remember my choice which would store the kernel association *locally*\r\n - There would need to be a UI to view/change/delete kernel associations\r\n - If the association isn't stored permanently it can be remembered such that upon opening the same notebook the last kernel used is already selected as the default\r\n\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/525362136",
    "html_url": "https://github.com/jupyter/notebook/pull/4170#issuecomment-525362136",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4170",
    "id": 525362136,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNTM2MjEzNg==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-08-27T15:45:58Z",
    "updated_at": "2019-08-27T15:45:58Z",
    "author_association": "MEMBER",
    "body": "Superseded by PR #4837.",
    "performed_via_github_app": null
  }
]
