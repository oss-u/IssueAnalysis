[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/101073365",
    "html_url": "https://github.com/jupyter/notebook/pull/81#issuecomment-101073365",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/81",
    "id": 101073365,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMTA3MzM2NQ==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-11T23:25:21Z",
    "updated_at": "2015-05-11T23:25:21Z",
    "author_association": "MEMBER",
    "body": "Don't forget to document the new message type(s) in the message spec doc, and rev the spec version.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/101079177",
    "html_url": "https://github.com/jupyter/notebook/pull/81#issuecomment-101079177",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/81",
    "id": 101079177,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMTA3OTE3Nw==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-12T00:11:58Z",
    "updated_at": "2015-05-12T00:11:58Z",
    "author_association": "MEMBER",
    "body": "I think the Session object should be used to send these messages, even though they are simple. I don't think there's a good reason for us to have multiple wire formats, even if one is single-frame JSON. This might as well be a new channel and message type, rather than a whole independent spec.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/101079677",
    "html_url": "https://github.com/jupyter/notebook/pull/81#issuecomment-101079677",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/81",
    "id": 101079677,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMTA3OTY3Nw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-12T00:16:04Z",
    "updated_at": "2015-05-12T00:16:04Z",
    "author_association": "MEMBER",
    "body": "Yeah, I imagine we'll end up serialising it like the other messages, but again, I was deliberately keeping it simple until we've discussed the overall architecture. I've put it on the agenda for tomorrow's dev meeting.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/101083285",
    "html_url": "https://github.com/jupyter/notebook/pull/81#issuecomment-101083285",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/81",
    "id": 101083285,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMTA4MzI4NQ==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-12T00:46:57Z",
    "updated_at": "2015-05-12T00:46:57Z",
    "author_association": "MEMBER",
    "body": "What are the structure of the messages and the stored data? Is there only one message type? What keys and possible values?\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/101083735",
    "html_url": "https://github.com/jupyter/notebook/pull/81#issuecomment-101083735",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/81",
    "id": 101083735,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMTA4MzczNQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-12T00:51:45Z",
    "updated_at": "2015-05-12T00:51:45Z",
    "author_association": "MEMBER",
    "body": "The message types are 'version' and 'feature'. They both contain a project key (e.g. 'IPython', 'numpy'), and respectively a 'version' and 'feature' key, each of which is a string.\n\nhttps://github.com/jupyter/notebook/pull/81/files#diff-7654a22a93a632a9e1b54546c57f0215R133\n\nTechnically, they're both doing exactly the same thing - adding an element to a set. This could obviously be generalised much more, but I wanted to keep it simple and fairly minimal.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/101373024",
    "html_url": "https://github.com/jupyter/notebook/pull/81#issuecomment-101373024",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/81",
    "id": 101373024,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMTM3MzAyNA==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-12T18:17:52Z",
    "updated_at": "2015-05-12T18:17:52Z",
    "author_association": "MEMBER",
    "body": "I'd prefer this be `metrics` rather than `analytics`, including the `metrics_port`.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/101392576",
    "html_url": "https://github.com/jupyter/notebook/pull/81#issuecomment-101392576",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/81",
    "id": 101392576,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMTM5MjU3Ng==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-12T19:20:09Z",
    "updated_at": "2015-05-12T19:20:09Z",
    "author_association": "MEMBER",
    "body": "Does it make more sense for this to be something standalone, rather than part of the notebook server, and added to the formal message spec?\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/101407103",
    "html_url": "https://github.com/jupyter/notebook/pull/81#issuecomment-101407103",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/81",
    "id": 101407103,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMTQwNzEwMw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-12T20:13:29Z",
    "updated_at": "2015-05-12T20:13:29Z",
    "author_association": "MEMBER",
    "body": "> Does it make more sense for this to be something standalone, rather than part of the notebook server, and added to the formal message spec?\n\nWe discussed that a bit, and we need _some_ integration with notebook server. Though having the tracking library as standalone make also sens, a first iteration/prototype using the notebook server make sens IMHO.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/101410971",
    "html_url": "https://github.com/jupyter/notebook/pull/81#issuecomment-101410971",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/81",
    "id": 101410971,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMTQxMDk3MQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-12T20:28:52Z",
    "updated_at": "2015-05-12T20:28:52Z",
    "author_association": "MEMBER",
    "body": "There are two important points where we're using the notebook server: the UI to ask a user for consent, and as a long-running/predictably started process that can spare the cycles to deal with this - I don't want to be trying to upload data in atexit hooks or something, and I'd rather not write a separate daemon to deal with it.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/101869964",
    "html_url": "https://github.com/jupyter/notebook/pull/81#issuecomment-101869964",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/81",
    "id": 101869964,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMTg2OTk2NA==",
    "user": {
      "login": "njsmith",
      "id": 609896,
      "node_id": "MDQ6VXNlcjYwOTg5Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/609896?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/njsmith",
      "html_url": "https://github.com/njsmith",
      "followers_url": "https://api.github.com/users/njsmith/followers",
      "following_url": "https://api.github.com/users/njsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/njsmith/orgs",
      "repos_url": "https://api.github.com/users/njsmith/repos",
      "events_url": "https://api.github.com/users/njsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/njsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-14T01:03:25Z",
    "updated_at": "2015-05-14T03:18:53Z",
    "author_association": "NONE",
    "body": "It might not be hard to do data collection and upload without a server, by having the metrics collection library (a) store data directly using sqlite or something that has a strategy for coordinating multiple independent readers/writers, and (b) notice when it's time to do an upload and spawn off a little background process to do it and reset the database when it succeeds. I guess we'll need most of this anyway given that we want our metrics to still work even if someone is running multiple notebook servers at the same time in the same home directory. But we definitely need help from the server for consent, so for version 0.1 we might as well do whatever's simplest.\n\nWhile it's true that there are a lot of limitations to count data, I think there are some compelling reasons to still want it:\n- Relative comparisons over time: even if it's meaningless to see that there are 2 million calls to `foo` in March, it's potentially meaningful to see that in April this has dropped to 100,000.\n- Relative comparisons between features: there's some debate in NumPy right now about if, supposing we change how `np.dot` works in some corner cases, whether we should also change the public C API function that currently it just calls under the hood (`PyArray_MatrixProduct2`). For discussing this, it would be useful to know how many people are using the C API directly versus the Python-level API -- but every call to the Python-level API also causes a call to the C API. One way to solve this would be to count calls to both separately, and then the difference is the number of direct calls to the C API.\n\nI'd suggest making the data collection API look like:\n\n```\nmetrics.add(project_key, feature, value=None, count=1)\nmetrics.register_pull_function(pull_function)\n```\n\nExample:\n\n```\nmetrics.add(\"numpy-5605-4de1-ae10\", \"version\", \"1.9.1\")\n\ndef numpy_pull_stats():\n    # For speed, `PyArray_MatrixProduct` counts how many times it is called in a C-level variable\n    # which we batch up and submit to the metrics engine later\n    pycount, ccount = get_stats_from_c_variables()\n    stats.submit(\"numpy-5605-4de1-ae10\", \"dot.python-level\", count=pycount)\n    stats.submit(\"numpy-5605-4de1-ae10\", \"dot.c-level\", count=ccount)\n```\n\nIdea:\n\n`project_key` is a unique string identifying the group who is taking responsibility for collecting this data. The idea being that if you want to get your data back out of ipython's server, then you have to register one of these keys and affirm that you've read our privacy doc and thought about what data you'll collect.\n\n`feature` is an arbitrary (unicode) string identifying what thing you are counting (scoped by `project_key`), by convention hierarchical by dots, b/c conventions are nice.\n\n`value` is another arbitrary (unicode) string, or None. We count (feature, value) pairs. The split between feature and value is arbitrary (one could just encode the (feature, value) tuple as a single string), but IME in these kind of little metric systems key/value pairs are so common that it's nice to have sugar for them. An alternative would be to allow `value` to be an arbitrary JSON-encodable value.\n\nFirefox has some interesting documents to potentially use as a model:\n\nhttps://www.mozilla.org/en-US/privacy/principles/\nhttps://www.mozilla.org/en-US/privacy/firefox/\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/101896545",
    "html_url": "https://github.com/jupyter/notebook/pull/81#issuecomment-101896545",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/81",
    "id": 101896545,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMTg5NjU0NQ==",
    "user": {
      "login": "njsmith",
      "id": 609896,
      "node_id": "MDQ6VXNlcjYwOTg5Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/609896?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/njsmith",
      "html_url": "https://github.com/njsmith",
      "followers_url": "https://api.github.com/users/njsmith/followers",
      "following_url": "https://api.github.com/users/njsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/njsmith/orgs",
      "repos_url": "https://api.github.com/users/njsmith/repos",
      "events_url": "https://api.github.com/users/njsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/njsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-14T03:23:57Z",
    "updated_at": "2015-05-14T03:23:57Z",
    "author_association": "NONE",
    "body": "Oh right, the other example I thought of and then forgot about, for why keeping a count is useful: cases where the thing being counted actually is a meaningful thing to count, not something that happens inside a loop. E.g., if you are trying to figure out how much usage the different kernels get, and there's someone who over the course of a month started up the R kernel once for 15 minutes and started up the python kernel 45 times for 2-4 hours apiece, then probably you do not want to just collapse away the numeric information and record this as \"one person who uses both R and Python\".\n\nThe mention of times also suggests to me that maybe we should allow the `count` variable to be a float -- hey, it works for javascript!\n\nAlso, better idea: instead of having the first argument be a random token that gets assigned, make it an email address. That nicely encodes the idea that this is some person or group who is taking responsibility here: `metrics.add(\"ipython-devs@ipython.org\", ...)`\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/102182196",
    "html_url": "https://github.com/jupyter/notebook/pull/81#issuecomment-102182196",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/81",
    "id": 102182196,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjE4MjE5Ng==",
    "user": {
      "login": "njsmith",
      "id": 609896,
      "node_id": "MDQ6VXNlcjYwOTg5Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/609896?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/njsmith",
      "html_url": "https://github.com/njsmith",
      "followers_url": "https://api.github.com/users/njsmith/followers",
      "following_url": "https://api.github.com/users/njsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/njsmith/orgs",
      "repos_url": "https://api.github.com/users/njsmith/repos",
      "events_url": "https://api.github.com/users/njsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/njsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-14T22:02:49Z",
    "updated_at": "2015-05-14T22:02:49Z",
    "author_association": "NONE",
    "body": "Oo, and here's yet another example of why we want counts :-). Say we're\nthinking of adding some \"small array\" optimizations to numpy (e.g. a\ncustomized free list). One immediately has some complicated decisions to\nmake about what sizes are worth optimizing, which sizes to lump into a\nsingle bucket, etc. The data you need to make these decisions is like --\nwhat percent of allocations were 4 bytes, what percent were 8 bytes, what\npercent were 12 bytes, etc. Easy to get by instrumenting the code, but you\nreally want to collect these statistics on a large and diverse set of\nuses...\nOn May 12, 2015 1:28 PM, \"Thomas Kluyver\" notifications@github.com wrote:\n\n> There are two important points where we're using the notebook server: the\n> UI to ask a user for consent, and as a long-running/predictably started\n> process that can spare the cycles to deal with this - I don't want to be\n> trying to upload data in atexit hooks or something, and I'd rather not\n> write a separate daemon to deal with it.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/jupyter/notebook/pull/81#issuecomment-101410971.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/102549803",
    "html_url": "https://github.com/jupyter/notebook/pull/81#issuecomment-102549803",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/81",
    "id": 102549803,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjU0OTgwMw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-15T23:51:38Z",
    "updated_at": "2015-05-15T23:51:38Z",
    "author_association": "MEMBER",
    "body": "The implementation certainly needs to be smarter about multiple processes that might be trying to write to it at the same time. I have an idea for this that I like better than using sqlite.\n\nHowever, development of this is on hold for a bit while we work out whether we need to get human subject review on this because we're in an academic setting.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/102558889",
    "html_url": "https://github.com/jupyter/notebook/pull/81#issuecomment-102558889",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/81",
    "id": 102558889,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjU1ODg4OQ==",
    "user": {
      "login": "njsmith",
      "id": 609896,
      "node_id": "MDQ6VXNlcjYwOTg5Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/609896?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/njsmith",
      "html_url": "https://github.com/njsmith",
      "followers_url": "https://api.github.com/users/njsmith/followers",
      "following_url": "https://api.github.com/users/njsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/njsmith/orgs",
      "repos_url": "https://api.github.com/users/njsmith/repos",
      "events_url": "https://api.github.com/users/njsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/njsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-16T01:13:01Z",
    "updated_at": "2015-05-16T01:13:01Z",
    "author_association": "NONE",
    "body": "Anything you do will have _some_ locking mess, because locking is basically\nimpossible to get right in all situations (remote file systems, etc.), so\noh well, not much to be done.\n\nRe human subjects: the document you need is here:\nhttp://cphs.berkeley.edu/review.html\n\nThe key point I believe is that you only need to do paperwork if your\nproject is \"designed to develop or contribute to generalizable knowledge\",\ni.e. if your goal is to do science and learn about how things work in\ngeneral, _not_ if your goal is to study a specific entity. (I think of this\nas the \"would a journal care about my results\" test.) They give the\nspecific example that if you measure how well a class learned because you\nwant to know if your curriculum works, then this is not \"human subjects\nresearch\"; if you measure how well a class learned because you want to know\nhow curriculums work in general, then this is human subjects research.\n\nIn our case, we don't care about writing journal articles about general\nprinciples for software design, we just want to know what the right thing\nto do is in our specific situation. Ergo, not human subjects research.\n\nIf you want to confirm this interpretation, then there's a phone number to\ncall and talk to an expert, and a procedure for getting the result in\nwriting, given here:\n  http://cphs.berkeley.edu/faqs.html#a1\nOn May 15, 2015 4:51 PM, \"Thomas Kluyver\" notifications@github.com wrote:\n\n> The implementation certainly needs to be smarter about multiple processes\n> that might be trying to write to it at the same time. I have an idea for\n> this that I like better than using sqlite.\n> \n> However, development of this is on hold for a bit while we work out\n> whether we need to get human subject review on this because we're in an\n> academic setting.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/jupyter/notebook/pull/81#issuecomment-102549803.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/102565442",
    "html_url": "https://github.com/jupyter/notebook/pull/81#issuecomment-102565442",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/81",
    "id": 102565442,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjU2NTQ0Mg==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-16T02:20:25Z",
    "updated_at": "2015-05-16T02:20:25Z",
    "author_association": "MEMBER",
    "body": "@ellisonbg told us that at calpoly it is particularly complicated as soon\nas you plan on sharing the results. Which we obviously want to do with the\ntracked project. And we want to be sure that we don't start working on that\ntoo early.\n\nAlso anyway I think that the data collection should be done in a manner\nwhich is not Jupyter-specific, and could work in a pure-python setting\n(given the right configuration). So we can still work on that separately,\ncause I suppose we each like to track our own usage if features. The\nquestion of wether we share/collect this data is othogonal.\n\nOn Fri, May 15, 2015 at 6:13 PM, Nathaniel J. Smith <\nnotifications@github.com> wrote:\n\n> Anything you do will have _some_ locking mess, because locking is basically\n> impossible to get right in all situations (remote file systems, etc.), so\n> oh well, not much to be done.\n> \n> Re human subjects: the document you need is here:\n> http://cphs.berkeley.edu/review.html\n> \n> The key point I believe is that you only need to do paperwork if your\n> project is \"designed to develop or contribute to generalizable knowledge\",\n> i.e. if your goal is to do science and learn about how things work in\n> general, _not_ if your goal is to study a specific entity. (I think of this\n> as the \"would a journal care about my results\" test.) They give the\n> specific example that if you measure how well a class learned because you\n> want to know if your curriculum works, then this is not \"human subjects\n> research\"; if you measure how well a class learned because you want to know\n> how curriculums work in general, then this is human subjects research.\n> \n> In our case, we don't care about writing journal articles about general\n> principles for software design, we just want to know what the right thing\n> to do is in our specific situation. Ergo, not human subjects research.\n> \n> If you want to confirm this interpretation, then there's a phone number to\n> call and talk to an expert, and a procedure for getting the result in\n> writing, given here:\n> http://cphs.berkeley.edu/faqs.html#a1\n> On May 15, 2015 4:51 PM, \"Thomas Kluyver\" notifications@github.com\n> wrote:\n> \n> > The implementation certainly needs to be smarter about multiple processes\n> > that might be trying to write to it at the same time. I have an idea for\n> > this that I like better than using sqlite.\n> > \n> > However, development of this is on hold for a bit while we work out\n> > whether we need to get human subject review on this because we're in an\n> > academic setting.\n> > \n> > —\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/jupyter/notebook/pull/81#issuecomment-102549803.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/jupyter/notebook/pull/81#issuecomment-102558889.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/102592837",
    "html_url": "https://github.com/jupyter/notebook/pull/81#issuecomment-102592837",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/81",
    "id": 102592837,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjU5MjgzNw==",
    "user": {
      "login": "njsmith",
      "id": 609896,
      "node_id": "MDQ6VXNlcjYwOTg5Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/609896?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/njsmith",
      "html_url": "https://github.com/njsmith",
      "followers_url": "https://api.github.com/users/njsmith/followers",
      "following_url": "https://api.github.com/users/njsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/njsmith/orgs",
      "repos_url": "https://api.github.com/users/njsmith/repos",
      "events_url": "https://api.github.com/users/njsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/njsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-16T09:19:39Z",
    "updated_at": "2015-05-16T09:19:39Z",
    "author_association": "NONE",
    "body": "Well, it depends on the data, how you gathered it, what your original\nproposal said, what you told the participants, etc. If you have videos of\nminors in jail talking about sensitive subjects or people's health records\nor something then you have a massive problem; at the other end of the scale\nthe IRB doesn't care at all about sharing of data that doesn't count as\nhuman subjects data. It just depends.\n\nI can call that number on Monday for you if you want to get a definitive\nanswer :-).\nOn May 15, 2015 7:20 PM, \"Matthias Bussonnier\" notifications@github.com\nwrote:\n\n> @ellisonbg told us that at calpoly it is particularly complicated as soon\n> as you plan on sharing the results. Which we obviously want to do with the\n> tracked project. And we want to be sure that we don't start working on that\n> too early.\n> \n> Also anyway I think that the data collection should be done in a manner\n> which is not Jupyter-specific, and could work in a pure-python setting\n> (given the right configuration). So we can still work on that separately,\n> cause I suppose we each like to track our own usage if features. The\n> question of wether we share/collect this data is othogonal.\n> \n> On Fri, May 15, 2015 at 6:13 PM, Nathaniel J. Smith <\n> notifications@github.com> wrote:\n> \n> > Anything you do will have _some_ locking mess, because locking is\n> > basically\n> > impossible to get right in all situations (remote file systems, etc.), so\n> > oh well, not much to be done.\n> > \n> > Re human subjects: the document you need is here:\n> > http://cphs.berkeley.edu/review.html\n> > \n> > The key point I believe is that you only need to do paperwork if your\n> > project is \"designed to develop or contribute to generalizable\n> > knowledge\",\n> > i.e. if your goal is to do science and learn about how things work in\n> > general, _not_ if your goal is to study a specific entity. (I think of\n> > this\n> > as the \"would a journal care about my results\" test.) They give the\n> > specific example that if you measure how well a class learned because you\n> > want to know if your curriculum works, then this is not \"human subjects\n> > research\"; if you measure how well a class learned because you want to\n> > know\n> > how curriculums work in general, then this is human subjects research.\n> > \n> > In our case, we don't care about writing journal articles about general\n> > principles for software design, we just want to know what the right thing\n> > to do is in our specific situation. Ergo, not human subjects research.\n> > \n> > If you want to confirm this interpretation, then there's a phone number\n> > to\n> > call and talk to an expert, and a procedure for getting the result in\n> > writing, given here:\n> > http://cphs.berkeley.edu/faqs.html#a1\n> > On May 15, 2015 4:51 PM, \"Thomas Kluyver\" notifications@github.com\n> > wrote:\n> > \n> > > The implementation certainly needs to be smarter about multiple\n> > > processes\n> > > that might be trying to write to it at the same time. I have an idea\n> > > for\n> > > this that I like better than using sqlite.\n> > > \n> > > However, development of this is on hold for a bit while we work out\n> > > whether we need to get human subject review on this because we're in an\n> > > academic setting.\n> > > \n> > > —\n> > > Reply to this email directly or view it on GitHub\n> > > https://github.com/jupyter/notebook/pull/81#issuecomment-102549803.\n> > \n> > —\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/jupyter/notebook/pull/81#issuecomment-102558889.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/jupyter/notebook/pull/81#issuecomment-102565442.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/102660353",
    "html_url": "https://github.com/jupyter/notebook/pull/81#issuecomment-102660353",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/81",
    "id": 102660353,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwMjY2MDM1Mw==",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-16T18:07:51Z",
    "updated_at": "2015-05-16T18:07:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "Nathaniel, It would be great if you wanted to reach out to the Berkeley\nIRB. Eventuall, we would also have to involve the IRB at Cal Poly as well,\nbut this would a good start.\n\nThe other point that I found with our IRB is that if we were simply\ngathering data that we would use _privately_ to improve the software, that\nwould not meet the \"generalizable knowledge critieria\" and no review was\nrequired. However, when I told them the project/software was open source\nand that we should want to share the data/results with the broader\ncommunity of the project, they said \"that is publication\" so IRB approval\nand human subject consent would be required.\n\nIf we are OK defining a small set of \"researchers\" that will be able to see\nthe data and results, but not sharing anything with the public, I think we\nhave a good amount of freedom. But the second we want to share the\ninformation, I think we have to bring the IRB in. One question is this: can\nwe limit access to the raw data to a small set of defined \"researchers\" and\nshare summaries of the results publicly with out IRB review. Based on my\nprevious discussions with them, my guess is not.\n\nThe other big red flag is that we are talking about creating a general\nPython API that any Python code can call to gather information. While we\nmay not ourselves gather sensitive human subject data, other libraries\ncould use those APIs to gather than information. If _we_ ever deployed the\nnotebook with central data collection enabled (if we don't, none if this is\nuseful) we would need to ensure that third party python packages are not\nusing our API s to send us sensitive data.\n\nCheers,\n\nBrian\n\nOn Sat, May 16, 2015 at 2:19 AM, Nathaniel J. Smith <\nnotifications@github.com> wrote:\n\n> Well, it depends on the data, how you gathered it, what your original\n> proposal said, what you told the participants, etc. If you have videos of\n> minors in jail talking about sensitive subjects or people's health records\n> or something then you have a massive problem; at the other end of the scale\n> the IRB doesn't care at all about sharing of data that doesn't count as\n> human subjects data. It just depends.\n> \n> I can call that number on Monday for you if you want to get a definitive\n> answer :-).\n> On May 15, 2015 7:20 PM, \"Matthias Bussonnier\" notifications@github.com\n> wrote:\n> \n> > @ellisonbg told us that at calpoly it is particularly complicated as soon\n> > as you plan on sharing the results. Which we obviously want to do with\n> > the\n> > tracked project. And we want to be sure that we don't start working on\n> > that\n> > too early.\n> > \n> > Also anyway I think that the data collection should be done in a manner\n> > which is not Jupyter-specific, and could work in a pure-python setting\n> > (given the right configuration). So we can still work on that separately,\n> > cause I suppose we each like to track our own usage if features. The\n> > question of wether we share/collect this data is othogonal.\n> > \n> > On Fri, May 15, 2015 at 6:13 PM, Nathaniel J. Smith <\n> > notifications@github.com> wrote:\n> > \n> > > Anything you do will have _some_ locking mess, because locking is\n> > > basically\n> > > impossible to get right in all situations (remote file systems, etc.),\n> > > so\n> > > oh well, not much to be done.\n> > > \n> > > Re human subjects: the document you need is here:\n> > > http://cphs.berkeley.edu/review.html\n> > > \n> > > The key point I believe is that you only need to do paperwork if your\n> > > project is \"designed to develop or contribute to generalizable\n> > > knowledge\",\n> > > i.e. if your goal is to do science and learn about how things work in\n> > > general, _not_ if your goal is to study a specific entity. (I think of\n> > > this\n> > > as the \"would a journal care about my results\" test.) They give the\n> > > specific example that if you measure how well a class learned because\n> > > you\n> > > want to know if your curriculum works, then this is not \"human subjects\n> > > research\"; if you measure how well a class learned because you want to\n> > > know\n> > > how curriculums work in general, then this is human subjects research.\n> > > \n> > > In our case, we don't care about writing journal articles about general\n> > > principles for software design, we just want to know what the right\n> > > thing\n> > > to do is in our specific situation. Ergo, not human subjects research.\n> > > \n> > > If you want to confirm this interpretation, then there's a phone number\n> > > to\n> > > call and talk to an expert, and a procedure for getting the result in\n> > > writing, given here:\n> > > http://cphs.berkeley.edu/faqs.html#a1\n> > > On May 15, 2015 4:51 PM, \"Thomas Kluyver\" notifications@github.com\n> > > wrote:\n> > > \n> > > > The implementation certainly needs to be smarter about multiple\n> > > > processes\n> > > > that might be trying to write to it at the same time. I have an idea\n> > > > for\n> > > > this that I like better than using sqlite.\n> > > > \n> > > > However, development of this is on hold for a bit while we work out\n> > > > whether we need to get human subject review on this because we're in\n> > > > an\n> > > > academic setting.\n> > > > \n> > > > —\n> > > > Reply to this email directly or view it on GitHub\n> > > > <https://github.com/jupyter/notebook/pull/81#issuecomment-102549803\n> > > > .\n> > > \n> > > —\n> > > Reply to this email directly or view it on GitHub\n> > > https://github.com/jupyter/notebook/pull/81#issuecomment-102558889.\n> > \n> > —\n> > Reply to this email directly or view it on GitHub\n> > https://github.com/jupyter/notebook/pull/81#issuecomment-102565442.\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/jupyter/notebook/pull/81#issuecomment-102592837.\n\n## \n\nBrian E. Granger\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/105131376",
    "html_url": "https://github.com/jupyter/notebook/pull/81#issuecomment-105131376",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/81",
    "id": 105131376,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEwNTEzMTM3Ng==",
    "user": {
      "login": "njsmith",
      "id": 609896,
      "node_id": "MDQ6VXNlcjYwOTg5Ng==",
      "avatar_url": "https://avatars.githubusercontent.com/u/609896?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/njsmith",
      "html_url": "https://github.com/njsmith",
      "followers_url": "https://api.github.com/users/njsmith/followers",
      "following_url": "https://api.github.com/users/njsmith/following{/other_user}",
      "gists_url": "https://api.github.com/users/njsmith/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/njsmith/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/njsmith/subscriptions",
      "organizations_url": "https://api.github.com/users/njsmith/orgs",
      "repos_url": "https://api.github.com/users/njsmith/repos",
      "events_url": "https://api.github.com/users/njsmith/events{/privacy}",
      "received_events_url": "https://api.github.com/users/njsmith/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-05-25T05:29:49Z",
    "updated_at": "2015-05-25T05:38:31Z",
    "author_association": "NONE",
    "body": "I did a bit of looking into how Mozilla handles this, and I'll leave some links here for reference:\n\nThey collect histograms: https://developer.mozilla.org/en-US/docs/Mozilla/Performance/Adding_a_new_Telemetry_probe\n\nAnd send them back as JSON documents (~one per day): https://ci.mozilla.org/job/mozilla-central-docs/Tree_Documentation/\n\nPublic aggregated data: https://telemetry.mozilla.org\n\n(Edit: they also expose the data being collected by a given browser session client-side at about:telemetry. For some reason github refuses to let me link to it, but if you're in firefox you can paste that into your address bar and see some fun stuff :-))\n\nThe originally included [no unique installation id](https://blog.mozilla.org/tglek/2011/05/13/firefox-telemetry/), but eventually [changed their mind](http://robertovitillo.com/2014/12/19/clientid-in-telemetry-submissions/) and started including one (except for specific data that is deemed too sensitive and thus split off into separate unlabeled submissions), because they found the [restriction was too cumbersome](https://mail.mozilla.org/pipermail/firefox-dev/2014-December/002580.html).\n\nOne thing I was surprised by, though I guess it makes sense, is that they _unconditionally_ send a ping (complete with unique per-installation ID) at (1) first startup, (2) if/when a user opts _out_ of telemetry. (And these pings include some basic data -- Firefox version, OS, etc.) I guess this makes sense -- there isn't really much chance of a privacy violation in knowing that \"someone somewhere installed Firefox and that's all they want us to know\", and it's crucial to extrapolating from the data they do get to the overall user population.\n\nAn internal planning document with lots of interesting details on e.g. metrics they want to track: https://docs.google.com/document/d/1IGpzsYGi_sq3YFQDAPyKOkU_BKvXAC95fZYA2i4ceVs/edit#\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/124175763",
    "html_url": "https://github.com/jupyter/notebook/pull/81#issuecomment-124175763",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/81",
    "id": 124175763,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNDE3NTc2Mw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-23T17:32:44Z",
    "updated_at": "2015-07-23T17:32:44Z",
    "author_association": "MEMBER",
    "body": "This machinery will now be done in https://github.com/njsmith/sempervirens/\n",
    "performed_via_github_app": null
  }
]
