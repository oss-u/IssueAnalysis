[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/705205674",
    "html_url": "https://github.com/jupyter/notebook/pull/5799#issuecomment-705205674",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5799",
    "id": 705205674,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNTIwNTY3NA==",
    "user": {
      "login": "mriedem",
      "id": 3237936,
      "node_id": "MDQ6VXNlcjMyMzc5MzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3237936?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mriedem",
      "html_url": "https://github.com/mriedem",
      "followers_url": "https://api.github.com/users/mriedem/followers",
      "following_url": "https://api.github.com/users/mriedem/following{/other_user}",
      "gists_url": "https://api.github.com/users/mriedem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mriedem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mriedem/subscriptions",
      "organizations_url": "https://api.github.com/users/mriedem/orgs",
      "repos_url": "https://api.github.com/users/mriedem/repos",
      "events_url": "https://api.github.com/users/mriedem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mriedem/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-07T21:32:26Z",
    "updated_at": "2020-10-07T21:32:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "@sdague @rmoe Here is an idea for a start on JSON log formatting though it might not be super useful if we can't split apart the request-specific parts of the `msg` field.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/705207707",
    "html_url": "https://github.com/jupyter/notebook/pull/5799#issuecomment-705207707",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5799",
    "id": 705207707,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNTIwNzcwNw==",
    "user": {
      "login": "mriedem",
      "id": 3237936,
      "node_id": "MDQ6VXNlcjMyMzc5MzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3237936?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mriedem",
      "html_url": "https://github.com/mriedem",
      "followers_url": "https://api.github.com/users/mriedem/followers",
      "following_url": "https://api.github.com/users/mriedem/following{/other_user}",
      "gists_url": "https://api.github.com/users/mriedem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mriedem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mriedem/subscriptions",
      "organizations_url": "https://api.github.com/users/mriedem/orgs",
      "repos_url": "https://api.github.com/users/mriedem/repos",
      "events_url": "https://api.github.com/users/mriedem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mriedem/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-07T21:37:26Z",
    "updated_at": "2020-10-07T21:37:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "This is the error I get when trying to use `JSONLogWebFormatter`:\r\n\r\n```\r\n--- Logging error ---\r\nTraceback (most recent call last):\r\n  File \"/usr/lib/python3.6/logging/__init__.py\", line 994, in emit\r\n    msg = self.format(record)\r\n  File \"/usr/lib/python3.6/logging/__init__.py\", line 840, in format\r\n    return fmt.format(record)\r\n  File \"/home/osboxes/jupyter/notebook/.tox/lib/python3.6/site-packages/json_logging/__init__.py\", line 243, in format\r\n    log_object = self._format_log_object(record, request_util=_request_util)\r\n  File \"/home/osboxes/jupyter/notebook/.tox/lib/python3.6/site-packages/json_logging/__init__.py\", line 341, in _format_log_object\r\n    \"correlation_id\": request_util.get_correlation_id(within_formatter=True),\r\nAttributeError: 'NoneType' object has no attribute 'get_correlation_id'\r\n```\r\n\r\nAnd it looks like that's because I'm not going through one of the `init_*` framework methods:\r\n\r\nhttps://github.com/bobbui/json-logging-python/blob/1.2.8/json_logging/__init__.py#L132",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/705216167",
    "html_url": "https://github.com/jupyter/notebook/pull/5799#issuecomment-705216167",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5799",
    "id": 705216167,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNTIxNjE2Nw==",
    "user": {
      "login": "mriedem",
      "id": 3237936,
      "node_id": "MDQ6VXNlcjMyMzc5MzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3237936?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mriedem",
      "html_url": "https://github.com/mriedem",
      "followers_url": "https://api.github.com/users/mriedem/followers",
      "following_url": "https://api.github.com/users/mriedem/following{/other_user}",
      "gists_url": "https://api.github.com/users/mriedem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mriedem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mriedem/subscriptions",
      "organizations_url": "https://api.github.com/users/mriedem/orgs",
      "repos_url": "https://api.github.com/users/mriedem/repos",
      "events_url": "https://api.github.com/users/mriedem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mriedem/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-07T21:59:25Z",
    "updated_at": "2020-10-07T21:59:25Z",
    "author_association": "CONTRIBUTOR",
    "body": "Getting a little further by changing the `log_request` method so I see something like this now:\r\n\r\n```json\r\n{\"written_at\": \"2020-10-07T21:52:16.975Z\", \"written_ts\": 1602107536975497000, \"msg\": \"{'status': 404, 'method': 'GET', 'ip': '127.0.0.1', 'uri': '/nbextensions/widgets/notebook/js/extension.js', 'request_time': 1.9807815551757812, 'referer': 'http://localhost:8888/notebooks/test.ipynb'}\", \"type\": \"log\", \"logger\": \"NotebookApp\", \"thread\": \"MainThread\", \"level\": \"WARNING\", \"module\": \"log\", \"line_no\": 54}\r\n```\r\n\r\nBut the `msg` is a serialized JSON string now.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/705263500",
    "html_url": "https://github.com/jupyter/notebook/pull/5799#issuecomment-705263500",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5799",
    "id": 705263500,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNTI2MzUwMA==",
    "user": {
      "login": "kevin-bates",
      "id": 22599560,
      "node_id": "MDQ6VXNlcjIyNTk5NTYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/22599560?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevin-bates",
      "html_url": "https://github.com/kevin-bates",
      "followers_url": "https://api.github.com/users/kevin-bates/followers",
      "following_url": "https://api.github.com/users/kevin-bates/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevin-bates/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevin-bates/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevin-bates/subscriptions",
      "organizations_url": "https://api.github.com/users/kevin-bates/orgs",
      "repos_url": "https://api.github.com/users/kevin-bates/repos",
      "events_url": "https://api.github.com/users/kevin-bates/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevin-bates/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-08T00:32:18Z",
    "updated_at": "2020-10-08T00:32:18Z",
    "author_association": "MEMBER",
    "body": "Thanks Matt.  This is an interesting conundrum on a couple counts.\r\n1. The logging formatter is something used very early - introducing potential chicken/egg situations.\r\n2. The tornado logging is a different facility, yet ideally, we want to leverage the same configurable setting to determine if JSON formatting should be used.\r\n\r\nI think these can be resolved in a more application-friendly manner by first introducing a boolean configurable `json_logging` that can be configured via a configuration file using `c.NotebookApp.json_logging = True`.  We'd also want to tie this to a CLI flag (e.g., `--json-logging` such that, when present, it enables JSON formatting).  You should be able to follow the example of `allow_root` for these two details.\r\n\r\nTraitlets also provide the ability to _validate_ a config option.  This is where we could see if the `json_logging` package can be imported and, if so, \"tickle\" the current log_format value after setting the log_formatter_cls.  The reason for this \"tickle\" is to trigger the [observation that takes place in the traitlets `Application` class](https://github.com/ipython/traitlets/blob/master/traitlets/config/application.py#L209) - which will perform a reset using the formatter_cls value - as you had mentioned.  Modeling the validation after the 'ip' traitlet can get you started here.\r\n\r\nWe could let the default value for the `json-logging` flag still derive from the env - which is helpful in containerized envs and this could be done via a _default_json_logging() entry that returns configurable's default.  Again, 'ip' uses a defaulting method that you can model this after.\r\n\r\nI apologize for these details, but because there were so many unknowns I had, it was quicker just to try things out.  I have some working code - but I'd rather help you navigate this if you don't mind.  Otherwise, just let me know.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/705617997",
    "html_url": "https://github.com/jupyter/notebook/pull/5799#issuecomment-705617997",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5799",
    "id": 705617997,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNTYxNzk5Nw==",
    "user": {
      "login": "mriedem",
      "id": 3237936,
      "node_id": "MDQ6VXNlcjMyMzc5MzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3237936?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mriedem",
      "html_url": "https://github.com/mriedem",
      "followers_url": "https://api.github.com/users/mriedem/followers",
      "following_url": "https://api.github.com/users/mriedem/following{/other_user}",
      "gists_url": "https://api.github.com/users/mriedem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mriedem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mriedem/subscriptions",
      "organizations_url": "https://api.github.com/users/mriedem/orgs",
      "repos_url": "https://api.github.com/users/mriedem/repos",
      "events_url": "https://api.github.com/users/mriedem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mriedem/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-08T14:41:50Z",
    "updated_at": "2020-10-08T14:41:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kevin-bates thanks for those detailed pointers.\r\n\r\n>I'd rather help you navigate this if you don't mind\r\n\r\nYup, no problem and I definitely appreciate the patience with helping me learn here (I don't really have experience with tornado or traitlets, mostly copy/tweak/test when I need to make changes).",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/706285958",
    "html_url": "https://github.com/jupyter/notebook/pull/5799#issuecomment-706285958",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5799",
    "id": 706285958,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNjI4NTk1OA==",
    "user": {
      "login": "mriedem",
      "id": 3237936,
      "node_id": "MDQ6VXNlcjMyMzc5MzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3237936?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mriedem",
      "html_url": "https://github.com/mriedem",
      "followers_url": "https://api.github.com/users/mriedem/followers",
      "following_url": "https://api.github.com/users/mriedem/following{/other_user}",
      "gists_url": "https://api.github.com/users/mriedem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mriedem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mriedem/subscriptions",
      "organizations_url": "https://api.github.com/users/mriedem/orgs",
      "repos_url": "https://api.github.com/users/mriedem/repos",
      "events_url": "https://api.github.com/users/mriedem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mriedem/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-09T16:42:34Z",
    "updated_at": "2020-10-09T16:42:34Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kevin-bates I worked on your suggestions a bit this morning and captured the diff [here](https://gist.github.com/mriedem/7a8226ebd3273cfef611b214e136261a) since it's not working. A few notes:\r\n\r\n- I added the config option but with name `log_format_json` so that it would show up alongside `log_format` and `log_datefmt` etc in the help output:\r\n\r\n```\r\n--NotebookApp.log_datefmt=<Unicode>\r\n    Default: '%Y-%m-%d %H:%M:%S'\r\n    The date format used by logging formatters for %(asctime)s\r\n--NotebookApp.log_format=<Unicode>\r\n    Default: '[%(name)s]%(highlevel)s %(message)s'\r\n    The Logging format template\r\n--NotebookApp.log_format_json=<Bool>\r\n    Default: False\r\n    Set to True to enable JSON formatted logs. Run \"pip install notebook[json-\r\n    logging]\" to install the required dependent packages. Can also be set using\r\n    the environment variable ENABLE_JSON_LOGGING=true.\r\n--NotebookApp.log_level=<Enum>\r\n    Default: 30\r\n    Choices: (0, 10, 20, 30, 40, 50, 'DEBUG', 'INFO', 'WARN', 'ERROR', 'CRITICAL')\r\n    Set the log level by value or name.\r\n```\r\n\r\nI think that's useful for someone looking at logging options to have those grouped together for context.\r\n\r\n- I'm assuming I didn't implement `_validate_log_format_json` correctly because it doesn't seem to be getting hit. I've tried running with both `ENABLE_JSON_LOGGING=true jupyter notebook` and `jupyter notebook --NotebookApp.log_format_json=True`. I never see the logging statements I put in `_validate_log_format_json` though, nor do I see the ImportError traceback if I uninstall `json-logging` and try to start the server with `log_format_json=True`. Is there something I'm missing there about when that validation function is supposed to be called?\r\n\r\n- I'm also not sure that I'm \"tickling\" the `log_format` option correctly by doing `self.log_format = self.log_format`.\r\n\r\nThanks again for the help.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/706319696",
    "html_url": "https://github.com/jupyter/notebook/pull/5799#issuecomment-706319696",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5799",
    "id": 706319696,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNjMxOTY5Ng==",
    "user": {
      "login": "kevin-bates",
      "id": 22599560,
      "node_id": "MDQ6VXNlcjIyNTk5NTYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/22599560?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevin-bates",
      "html_url": "https://github.com/kevin-bates",
      "followers_url": "https://api.github.com/users/kevin-bates/followers",
      "following_url": "https://api.github.com/users/kevin-bates/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevin-bates/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevin-bates/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevin-bates/subscriptions",
      "organizations_url": "https://api.github.com/users/kevin-bates/orgs",
      "repos_url": "https://api.github.com/users/kevin-bates/repos",
      "events_url": "https://api.github.com/users/kevin-bates/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevin-bates/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-09T17:49:55Z",
    "updated_at": "2020-10-09T17:49:55Z",
    "author_association": "MEMBER",
    "body": "Thanks Matt.  The \"tickle\" should actually change the format.  In this case, I removed the color-coding attributes.  Here's the code I had put together the other day.  Since you've changed the traitlet's name, that change would need to be reflected, as well as perhaps logging that the import failed during the validation.\r\n\r\nLastly, the convention for envs is that they be prefixed with `JUPYTER_`.\r\n\r\nI found no changes necessary other than in notebookapp.py, but would prefer that you confirm the same.\r\n```python\r\n    json_logging = Bool(config=True)\r\n\r\n    @default('json_logging')\r\n    def _default_json_logging(self):\r\n        return os.getenv('JUPYTER_ENABLE_JSON_LOGGING', 'false').lower() == 'true'\r\n\r\n    @validate('json_logging')\r\n    def _validate_json_logging(self, proposal):\r\n        value = proposal['value']\r\n        if value is True:\r\n            try:\r\n                import json_logging\r\n                self._log_formatter_cls = json_logging.JSONLogFormatter\r\n                self.log_format = u\"[%(levelname)1.1s %(asctime)s.%(msecs).03d %(name)s] %(message)s\"\r\n            except ImportError:\r\n                value = False\r\n        return value\r\n```\r\n\r\nMy concern with the change to `log_format_json` is that it implies the value should be some kind of format string - similar to `log_format`, whereas `json_logging` seems more about the _kind_ of logging that will take place.  The concern being that the \"format\" approach could be confusing.  Yes, I would agree whatever the name is should be grouped near the others as its all the same \"topic\".",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/706354127",
    "html_url": "https://github.com/jupyter/notebook/pull/5799#issuecomment-706354127",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5799",
    "id": 706354127,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNjM1NDEyNw==",
    "user": {
      "login": "mriedem",
      "id": 3237936,
      "node_id": "MDQ6VXNlcjMyMzc5MzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3237936?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mriedem",
      "html_url": "https://github.com/mriedem",
      "followers_url": "https://api.github.com/users/mriedem/followers",
      "following_url": "https://api.github.com/users/mriedem/following{/other_user}",
      "gists_url": "https://api.github.com/users/mriedem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mriedem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mriedem/subscriptions",
      "organizations_url": "https://api.github.com/users/mriedem/orgs",
      "repos_url": "https://api.github.com/users/mriedem/repos",
      "events_url": "https://api.github.com/users/mriedem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mriedem/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-09T19:05:10Z",
    "updated_at": "2020-10-09T19:05:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "> The \"tickle\" should actually change the format. In this case, I removed the color-coding attributes.\r\n\r\nGot it. I'm not totally sure about that solution since if I set `log_format` specifically and this changed it, I'd probably wonder what's going on if the formatting doesn't show up as expected. If there is no better solution we could at least document something about that in the config help.\r\n\r\n>the convention for envs is that they be prefixed with JUPYTER_.\r\n\r\nDone.\r\n\r\n>I found no changes necessary other than in notebookapp.py\r\n\r\nI see a bug in my code, I wasn't using `self._log_formatter_cls`.\r\n\r\n>My concern with the change to log_format_json is that it implies the value should be some kind of format string\r\n\r\nI renamed the config option to simply `log_json` to take the \"format\" out of it.\r\n\r\n----\r\n\r\nI'll tinker with this locally and see what I come up with.\r\n\r\nI'm also going to see what happens if we call `json_logging.init_non_web(enable_json=True)` from `init_logging` since `init_non_web` does change the formatter for _all_ of the loggers:\r\n\r\nhttps://github.com/bobbui/json-logging-python/blob/1.2.8/json_logging/__init__.py#L153",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/706366531",
    "html_url": "https://github.com/jupyter/notebook/pull/5799#issuecomment-706366531",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5799",
    "id": 706366531,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNjM2NjUzMQ==",
    "user": {
      "login": "mriedem",
      "id": 3237936,
      "node_id": "MDQ6VXNlcjMyMzc5MzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3237936?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mriedem",
      "html_url": "https://github.com/mriedem",
      "followers_url": "https://api.github.com/users/mriedem/followers",
      "following_url": "https://api.github.com/users/mriedem/following{/other_user}",
      "gists_url": "https://api.github.com/users/mriedem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mriedem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mriedem/subscriptions",
      "organizations_url": "https://api.github.com/users/mriedem/orgs",
      "repos_url": "https://api.github.com/users/mriedem/repos",
      "events_url": "https://api.github.com/users/mriedem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mriedem/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-09T19:34:25Z",
    "updated_at": "2020-10-09T19:34:25Z",
    "author_association": "CONTRIBUTOR",
    "body": ">I'm also going to see what happens if we call json_logging.init_non_web(enable_json=True) from init_logging since init_non_web does change the formatter for all of the loggers\r\n\r\nThis works and avoids the need to change `log_format` to trigger the `_log_format_changed` observer. Updated the PR.\r\n\r\nStill need to figure out how to get `log.log_request` working properly because if you run without the environment variable set it doesn't log the request parameters in json format:\r\n\r\n```\r\n{\"written_at\": \"2020-10-09T19:32:51.825Z\", \"written_ts\": 1602271971825341000, \"msg\": \"404 GET /nbextensions/widgets/notebook/js/extension.js (127.0.0.1) 8.94ms referer=http://localhost:8888/notebooks/Untitled.ipynb\", \"type\": \"log\", \"logger\": \"NotebookApp\", \"thread\": \"MainThread\", \"level\": \"WARNING\", \"module\": \"log\", \"line_no\": 59}\r\n```\r\n\r\nand if you do it logs the request parameters as a serialized json string:\r\n\r\n```\r\n{\"written_at\": \"2020-10-09T19:34:05.565Z\", \"written_ts\": 1602272045565346000, \"msg\": \"{'status': 404, 'method': 'GET', 'ip': '127.0.0.1', 'uri': '/api/kernels/48ecd2e7-ae9d-4484-8910-70fb46d72491/channels?session_id=5aa3a7dcedf1427e8ff41ae0cb3dae94', 'request_time': 1.8270015716552734, 'referer': 'None'}\", \"type\": \"log\", \"logger\": \"NotebookApp\", \"thread\": \"MainThread\", \"level\": \"WARNING\", \"module\": \"log\", \"line_no\": 57}\r\n```",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/706389752",
    "html_url": "https://github.com/jupyter/notebook/pull/5799#issuecomment-706389752",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5799",
    "id": 706389752,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwNjM4OTc1Mg==",
    "user": {
      "login": "mriedem",
      "id": 3237936,
      "node_id": "MDQ6VXNlcjMyMzc5MzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3237936?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mriedem",
      "html_url": "https://github.com/mriedem",
      "followers_url": "https://api.github.com/users/mriedem/followers",
      "following_url": "https://api.github.com/users/mriedem/following{/other_user}",
      "gists_url": "https://api.github.com/users/mriedem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mriedem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mriedem/subscriptions",
      "organizations_url": "https://api.github.com/users/mriedem/orgs",
      "repos_url": "https://api.github.com/users/mriedem/repos",
      "events_url": "https://api.github.com/users/mriedem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mriedem/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-09T20:33:07Z",
    "updated_at": "2020-10-09T20:33:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'd like to add tests for this but I'm not sure if there is a great way to test it. Maybe something like start the notebook app server with the env var set and verify the logged message can be serialized and then deserialized JSON? Though that would also mean having `json-logging` installed to run tests.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/708037927",
    "html_url": "https://github.com/jupyter/notebook/pull/5799#issuecomment-708037927",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5799",
    "id": 708037927,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwODAzNzkyNw==",
    "user": {
      "login": "kevin-bates",
      "id": 22599560,
      "node_id": "MDQ6VXNlcjIyNTk5NTYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/22599560?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevin-bates",
      "html_url": "https://github.com/kevin-bates",
      "followers_url": "https://api.github.com/users/kevin-bates/followers",
      "following_url": "https://api.github.com/users/kevin-bates/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevin-bates/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevin-bates/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevin-bates/subscriptions",
      "organizations_url": "https://api.github.com/users/kevin-bates/orgs",
      "repos_url": "https://api.github.com/users/kevin-bates/repos",
      "events_url": "https://api.github.com/users/kevin-bates/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevin-bates/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-13T22:13:15Z",
    "updated_at": "2020-10-13T22:13:15Z",
    "author_association": "MEMBER",
    "body": "Hi Matt - would you mind merging with the latest master and pushing that commit?  Your changes with legitimate test failures coincided with a general build issue and I'd like to have this PR be 'green' prior to its merge into master.  Sorry for the inconvenience.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/708381896",
    "html_url": "https://github.com/jupyter/notebook/pull/5799#issuecomment-708381896",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5799",
    "id": 708381896,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwODM4MTg5Ng==",
    "user": {
      "login": "mriedem",
      "id": 3237936,
      "node_id": "MDQ6VXNlcjMyMzc5MzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3237936?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mriedem",
      "html_url": "https://github.com/mriedem",
      "followers_url": "https://api.github.com/users/mriedem/followers",
      "following_url": "https://api.github.com/users/mriedem/following{/other_user}",
      "gists_url": "https://api.github.com/users/mriedem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mriedem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mriedem/subscriptions",
      "organizations_url": "https://api.github.com/users/mriedem/orgs",
      "repos_url": "https://api.github.com/users/mriedem/repos",
      "events_url": "https://api.github.com/users/mriedem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mriedem/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-14T12:53:30Z",
    "updated_at": "2020-10-14T12:53:30Z",
    "author_association": "CONTRIBUTOR",
    "body": "> \r\n> \r\n> Looks good - thank you Matt.\r\n\r\nThanks for all of your help Kevin.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/708448989",
    "html_url": "https://github.com/jupyter/notebook/pull/5799#issuecomment-708448989",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5799",
    "id": 708448989,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwODQ0ODk4OQ==",
    "user": {
      "login": "mriedem",
      "id": 3237936,
      "node_id": "MDQ6VXNlcjMyMzc5MzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3237936?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mriedem",
      "html_url": "https://github.com/mriedem",
      "followers_url": "https://api.github.com/users/mriedem/followers",
      "following_url": "https://api.github.com/users/mriedem/following{/other_user}",
      "gists_url": "https://api.github.com/users/mriedem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mriedem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mriedem/subscriptions",
      "organizations_url": "https://api.github.com/users/mriedem/orgs",
      "repos_url": "https://api.github.com/users/mriedem/repos",
      "events_url": "https://api.github.com/users/mriedem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mriedem/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-14T14:41:04Z",
    "updated_at": "2020-10-14T14:41:04Z",
    "author_association": "CONTRIBUTOR",
    "body": "@kevin-bates quick question, do you have any idea of a timeline for the next planned release? Looking at recent releases it looks like you've been doing monthly releases which is cool. My team would like to avoid pulling this change in via a git hash so if there is a release planned on the horizon we'll wait, just wondering.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/708487788",
    "html_url": "https://github.com/jupyter/notebook/pull/5799#issuecomment-708487788",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5799",
    "id": 708487788,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwODQ4Nzc4OA==",
    "user": {
      "login": "kevin-bates",
      "id": 22599560,
      "node_id": "MDQ6VXNlcjIyNTk5NTYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/22599560?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevin-bates",
      "html_url": "https://github.com/kevin-bates",
      "followers_url": "https://api.github.com/users/kevin-bates/followers",
      "following_url": "https://api.github.com/users/kevin-bates/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevin-bates/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevin-bates/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevin-bates/subscriptions",
      "organizations_url": "https://api.github.com/users/kevin-bates/orgs",
      "repos_url": "https://api.github.com/users/kevin-bates/repos",
      "events_url": "https://api.github.com/users/kevin-bates/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevin-bates/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-14T15:42:00Z",
    "updated_at": "2020-10-14T15:42:00Z",
    "author_association": "MEMBER",
    "body": "Would getting a release out in the next couple of weeks be sufficient - say last week of October/first week of November? Although convenient, I'd rather not set a fixed cadence unless there are other maintainers that can assist.  ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/708626403",
    "html_url": "https://github.com/jupyter/notebook/pull/5799#issuecomment-708626403",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5799",
    "id": 708626403,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwODYyNjQwMw==",
    "user": {
      "login": "mriedem",
      "id": 3237936,
      "node_id": "MDQ6VXNlcjMyMzc5MzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3237936?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mriedem",
      "html_url": "https://github.com/mriedem",
      "followers_url": "https://api.github.com/users/mriedem/followers",
      "following_url": "https://api.github.com/users/mriedem/following{/other_user}",
      "gists_url": "https://api.github.com/users/mriedem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mriedem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mriedem/subscriptions",
      "organizations_url": "https://api.github.com/users/mriedem/orgs",
      "repos_url": "https://api.github.com/users/mriedem/repos",
      "events_url": "https://api.github.com/users/mriedem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mriedem/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-14T19:55:45Z",
    "updated_at": "2020-10-14T19:55:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Would getting a release out in the next couple of weeks be sufficient - say last week of October/first week of November?\r\n\r\nYup, that would be great.",
    "performed_via_github_app": null
  }
]
