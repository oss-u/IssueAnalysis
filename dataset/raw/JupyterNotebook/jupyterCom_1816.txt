[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/255862556",
    "html_url": "https://github.com/jupyter/notebook/issues/1816#issuecomment-255862556",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1816",
    "id": 255862556,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1NTg2MjU1Ng==",
    "user": {
      "login": "gnestor",
      "id": 512354,
      "node_id": "MDQ6VXNlcjUxMjM1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/512354?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnestor",
      "html_url": "https://github.com/gnestor",
      "followers_url": "https://api.github.com/users/gnestor/followers",
      "following_url": "https://api.github.com/users/gnestor/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnestor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnestor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnestor/subscriptions",
      "organizations_url": "https://api.github.com/users/gnestor/orgs",
      "repos_url": "https://api.github.com/users/gnestor/repos",
      "events_url": "https://api.github.com/users/gnestor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnestor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-10-24T20:52:12Z",
    "updated_at": "2016-10-24T20:52:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "It looks like the notebook does not currently provide a \"duplicate line\" or \"duplicate cell\" feature. However, if it did then you could define a custom keyboard shortcut by following [these instructions](http://jupyter-notebook.readthedocs.io/en/latest/examples/Notebook/Custom%20Keyboard%20Shortcuts.html). FYI, notebook uses [Codemirror](https://codemirror.net/) for the text editor, so [any features that it supports](https://codemirror.net/doc/manual.html#api) are also supported in notebook.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/259386327",
    "html_url": "https://github.com/jupyter/notebook/issues/1816#issuecomment-259386327",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1816",
    "id": 259386327,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTM4NjMyNw==",
    "user": {
      "login": "padymkoclab",
      "id": 5833085,
      "node_id": "MDQ6VXNlcjU4MzMwODU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5833085?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/padymkoclab",
      "html_url": "https://github.com/padymkoclab",
      "followers_url": "https://api.github.com/users/padymkoclab/followers",
      "following_url": "https://api.github.com/users/padymkoclab/following{/other_user}",
      "gists_url": "https://api.github.com/users/padymkoclab/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/padymkoclab/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/padymkoclab/subscriptions",
      "organizations_url": "https://api.github.com/users/padymkoclab/orgs",
      "repos_url": "https://api.github.com/users/padymkoclab/repos",
      "events_url": "https://api.github.com/users/padymkoclab/events{/privacy}",
      "received_events_url": "https://api.github.com/users/padymkoclab/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-09T10:51:16Z",
    "updated_at": "2016-11-09T10:51:16Z",
    "author_association": "NONE",
    "body": "I have done it\nhttp://stackoverflow.com/a/40505055/6003870\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/259473035",
    "html_url": "https://github.com/jupyter/notebook/issues/1816#issuecomment-259473035",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1816",
    "id": 259473035,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1OTQ3MzAzNQ==",
    "user": {
      "login": "gnestor",
      "id": 512354,
      "node_id": "MDQ6VXNlcjUxMjM1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/512354?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnestor",
      "html_url": "https://github.com/gnestor",
      "followers_url": "https://api.github.com/users/gnestor/followers",
      "following_url": "https://api.github.com/users/gnestor/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnestor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnestor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnestor/subscriptions",
      "organizations_url": "https://api.github.com/users/gnestor/orgs",
      "repos_url": "https://api.github.com/users/gnestor/repos",
      "events_url": "https://api.github.com/users/gnestor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnestor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-09T17:28:06Z",
    "updated_at": "2016-11-09T17:28:06Z",
    "author_association": "CONTRIBUTOR",
    "body": "Nice work, @setivolkylany! I have copied and pasted your code here for future reference. Add the following to your [custom.js](http://jupyter-notebook.readthedocs.io/en/latest/examples/Notebook/JavaScript%20Notebook%20Extensions.html#custom.js):\n\n``` js\nCodeMirror.keyMap.pcDefault[\"Ctrl-Down\"] = function(cm){\n\n    // get a position of a current cursor in a current cell\n    var current_cursor = cm.doc.getCursor();\n\n    // read a content from a line where is the current cursor\n    var line_content = cm.doc.getLine(current_cursor.line);\n\n    // go to the end the current line\n    CodeMirror.commands.goLineEnd(cm);\n\n    // make a break for a new line\n    CodeMirror.commands.newlineAndIndent(cm);\n\n    // filled a content of the new line content from line above it\n    cm.doc.replaceSelection(line_content);\n\n    // restore position cursor on the new line\n    cm.doc.setCursor(current_cursor.line + 1, current_cursor.ch);\n};\n```\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/263055652",
    "html_url": "https://github.com/jupyter/notebook/issues/1816#issuecomment-263055652",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1816",
    "id": 263055652,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzA1NTY1Mg==",
    "user": {
      "login": "clementlefevre",
      "id": 6842576,
      "node_id": "MDQ6VXNlcjY4NDI1NzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6842576?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/clementlefevre",
      "html_url": "https://github.com/clementlefevre",
      "followers_url": "https://api.github.com/users/clementlefevre/followers",
      "following_url": "https://api.github.com/users/clementlefevre/following{/other_user}",
      "gists_url": "https://api.github.com/users/clementlefevre/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/clementlefevre/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/clementlefevre/subscriptions",
      "organizations_url": "https://api.github.com/users/clementlefevre/orgs",
      "repos_url": "https://api.github.com/users/clementlefevre/repos",
      "events_url": "https://api.github.com/users/clementlefevre/events{/privacy}",
      "received_events_url": "https://api.github.com/users/clementlefevre/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-26T10:20:00Z",
    "updated_at": "2016-11-26T10:22:31Z",
    "author_association": "NONE",
    "body": "Thanks a lot. Excuse my ignorance, but how do you load CodeMirror from custom.js ?\r\n- I copied the content of the CodeMirror src folder  inside the  **.jupyter/custom**  folder \r\n- and added on top of the **custom.js** script :\r\n```\r\n$.getScript(\"codemirror.js\", function(){\r\n});\r\n```\r\nbut not to avail. Any feedback would be greatly appreciated.\r\n I suppose my request wont be implemented in a future version of Jupyter ?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/263358586",
    "html_url": "https://github.com/jupyter/notebook/issues/1816#issuecomment-263358586",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1816",
    "id": 263358586,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MzM1ODU4Ng==",
    "user": {
      "login": "gnestor",
      "id": 512354,
      "node_id": "MDQ6VXNlcjUxMjM1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/512354?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnestor",
      "html_url": "https://github.com/gnestor",
      "followers_url": "https://api.github.com/users/gnestor/followers",
      "following_url": "https://api.github.com/users/gnestor/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnestor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnestor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnestor/subscriptions",
      "organizations_url": "https://api.github.com/users/gnestor/orgs",
      "repos_url": "https://api.github.com/users/gnestor/repos",
      "events_url": "https://api.github.com/users/gnestor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnestor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-28T18:52:11Z",
    "updated_at": "2016-11-28T18:52:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "@clementlefevre You want to use the notebook's CodeMirror module vs. importing your own (which is conveniently available as a [global](https://github.com/jupyter/notebook/blob/master/notebook/static/notebook/js/main.js#L83) `CodeMirror`). However, setting `CodeMirror.keyMap.pcDefault[\"Ctrl-Down\"]` in `custom.js` will affect the global `CodeMirror` but none of the instances used by the `Cell` objects in the notebook (because `custom.js` is being executed after the notebook is loaded), so if you want to add this keymap to work in your cells, you will need to get all of the cells and modify their `code_mirror` instances. An example `custom.js`:\r\n\r\n```js\r\n// Get instances of `Cell` in the notebook\r\nvar cells = $('#notebook-container').find('.cell').map(function() { \r\n  return $(this).data('cell')\r\n});\r\n// For each instance of `Cell`, add a keymap to `Cell.code_mirror`\r\ncells.each(function(index) {\r\n    this.code_mirror.addKeyMap({\r\n        'Ctrl-Down': function(cm) {\r\n            var current_cursor = cm.doc.getCursor();\r\n            var line_content = cm.doc.getLine(current_cursor.line);\r\n            CodeMirror.commands.goLineEnd(cm);\r\n            CodeMirror.commands.newlineAndIndent(cm);\r\n            cm.doc.replaceSelection(line_content);\r\n            cm.doc.setCursor(current_cursor.line + 1, current_cursor.ch);\r\n        }\r\n    });\r\n});\r\n```",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/468312973",
    "html_url": "https://github.com/jupyter/notebook/issues/1816#issuecomment-468312973",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1816",
    "id": 468312973,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2ODMxMjk3Mw==",
    "user": {
      "login": "q2apro",
      "id": 6764548,
      "node_id": "MDQ6VXNlcjY3NjQ1NDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6764548?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/q2apro",
      "html_url": "https://github.com/q2apro",
      "followers_url": "https://api.github.com/users/q2apro/followers",
      "following_url": "https://api.github.com/users/q2apro/following{/other_user}",
      "gists_url": "https://api.github.com/users/q2apro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/q2apro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/q2apro/subscriptions",
      "organizations_url": "https://api.github.com/users/q2apro/orgs",
      "repos_url": "https://api.github.com/users/q2apro/repos",
      "events_url": "https://api.github.com/users/q2apro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/q2apro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-02-28T15:22:11Z",
    "updated_at": "2019-02-28T15:22:11Z",
    "author_association": "NONE",
    "body": "This should be in the core!\r\n\r\nAnother ref: https://github.com/codemirror/CodeMirror/issues/5141",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/557820981",
    "html_url": "https://github.com/jupyter/notebook/issues/1816#issuecomment-557820981",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1816",
    "id": 557820981,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1NzgyMDk4MQ==",
    "user": {
      "login": "dustinormond",
      "id": 21280480,
      "node_id": "MDQ6VXNlcjIxMjgwNDgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/21280480?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dustinormond",
      "html_url": "https://github.com/dustinormond",
      "followers_url": "https://api.github.com/users/dustinormond/followers",
      "following_url": "https://api.github.com/users/dustinormond/following{/other_user}",
      "gists_url": "https://api.github.com/users/dustinormond/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dustinormond/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dustinormond/subscriptions",
      "organizations_url": "https://api.github.com/users/dustinormond/orgs",
      "repos_url": "https://api.github.com/users/dustinormond/repos",
      "events_url": "https://api.github.com/users/dustinormond/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dustinormond/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-23T18:20:19Z",
    "updated_at": "2020-07-14T20:36:00Z",
    "author_association": "NONE",
    "body": "I wanted to duplicate lines above or below and I also wanted to duplicate selected lines rather than just a single line. I have edited the code above to do so:\r\n\r\n```\r\n// create the extra keys in CodeMirror to call duplicate lines\r\n\"Shift-Alt-Up\": function(cm) { duplicateLines(cm, true); };\r\n\"Shift-Alt-Down\": function(cm) { duplicateLines(cm, false); };\r\n\r\n// create the functions that duplicates a line or selected lines in codemirror\r\nfunction duplicateLines(cm, above) {\r\n\r\n    // get selection or cursor start and end position\r\n    var startPosition = cm.doc.getCursor(true);\r\n    var endPosition = cm.doc.getCursor(false);\r\n\r\n    // gets the start cursor position without the beginning tabs\r\n    cm.doc.setCursor(startPosition.line, startPosition.ch);\r\n    CodeMirror.commands.goLineEnd(cm);\r\n    CodeMirror.commands.goLineStartSmart(cm);\r\n    var startCursor = cm.doc.getCursor();\r\n    var start = {\"line\": startCursor.line, \"ch\": startCursor.ch};\r\n\r\n    // gets the end cursor position\r\n    cm.doc.setCursor(endPosition.line, endPosition.ch);\r\n    CodeMirror.commands.goLineEnd(cm);\r\n    var endCursor = cm.doc.getCursor();\r\n    var end = {\"line\": endCursor.line, \"ch\": endCursor.ch};\r\n\r\n    // gets the content of the line or selected lines\r\n    var content = cm.doc.getRange(start, end);\r\n\r\n    // checks if the code is duplicated above\r\n    if (above) {\r\n\r\n        // handles duplication on the first line\r\n        if (startPosition.line == 0) {\r\n\r\n            // sets the cursor to the beginning, duplicates the content, then adds a new line\r\n            cm.doc.setCursor(0, 0);\r\n            cm.doc.replaceSelection(content);\r\n            CodeMirror.commands.newlineAndIndent(cm);\r\n\r\n        // handles duplication on all other lines\r\n        } else {\r\n\r\n            // sets the cursor to the end of the line, adds a new line, then duplicates the content\r\n            cm.doc.setCursor(startPosition.line - 1);\r\n            CodeMirror.commands.goLineEnd(cm);\r\n            CodeMirror.commands.newlineAndIndent(cm);\r\n            cm.doc.replaceSelection(content);\r\n        }\r\n\r\n    // adds a new line and duplicates the content below\r\n    } else {\r\n        CodeMirror.commands.newlineAndIndent(cm);\r\n        cm.doc.replaceSelection(content);\r\n    }\r\n\r\n    // restores the cursor position if duplicating above\r\n    if (above) {\r\n        cm.doc.setSelection(startPosition, endPosition);\r\n\r\n    // restores the cursor position if duplicating one line below\r\n    } else if (endPosition.line == startPosition.line) {\r\n        cm.doc.setCursor(endPosition.line + 1, endPosition.ch);\r\n\r\n    // restores the cursor position if duplicating more than one line below\r\n    } else {\r\n        var lineCount = endPosition.line - startPosition.line + 1;\r\n        startPosition.line += lineCount;\r\n        endPosition.line += lineCount;\r\n        cm.doc.setSelection(startPosition, endPosition);\r\n    }\r\n}\r\n```",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/557868294",
    "html_url": "https://github.com/jupyter/notebook/issues/1816#issuecomment-557868294",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1816",
    "id": 557868294,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU1Nzg2ODI5NA==",
    "user": {
      "login": "q2apro",
      "id": 6764548,
      "node_id": "MDQ6VXNlcjY3NjQ1NDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6764548?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/q2apro",
      "html_url": "https://github.com/q2apro",
      "followers_url": "https://api.github.com/users/q2apro/followers",
      "following_url": "https://api.github.com/users/q2apro/following{/other_user}",
      "gists_url": "https://api.github.com/users/q2apro/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/q2apro/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/q2apro/subscriptions",
      "organizations_url": "https://api.github.com/users/q2apro/orgs",
      "repos_url": "https://api.github.com/users/q2apro/repos",
      "events_url": "https://api.github.com/users/q2apro/events{/privacy}",
      "received_events_url": "https://api.github.com/users/q2apro/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-11-24T08:33:16Z",
    "updated_at": "2019-11-24T08:33:16Z",
    "author_association": "NONE",
    "body": "I hope this goes into the core.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/658300091",
    "html_url": "https://github.com/jupyter/notebook/issues/1816#issuecomment-658300091",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1816",
    "id": 658300091,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1ODMwMDA5MQ==",
    "user": {
      "login": "mayou36",
      "id": 17454848,
      "node_id": "MDQ6VXNlcjE3NDU0ODQ4",
      "avatar_url": "https://avatars.githubusercontent.com/u/17454848?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mayou36",
      "html_url": "https://github.com/mayou36",
      "followers_url": "https://api.github.com/users/mayou36/followers",
      "following_url": "https://api.github.com/users/mayou36/following{/other_user}",
      "gists_url": "https://api.github.com/users/mayou36/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mayou36/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mayou36/subscriptions",
      "organizations_url": "https://api.github.com/users/mayou36/orgs",
      "repos_url": "https://api.github.com/users/mayou36/repos",
      "events_url": "https://api.github.com/users/mayou36/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mayou36/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-14T17:06:54Z",
    "updated_at": "2020-07-14T17:07:11Z",
    "author_association": "NONE",
    "body": "What's the status of this? Did it made it into the core?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/695887365",
    "html_url": "https://github.com/jupyter/notebook/issues/1816#issuecomment-695887365",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1816",
    "id": 695887365,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY5NTg4NzM2NQ==",
    "user": {
      "login": "aliwo",
      "id": 22769112,
      "node_id": "MDQ6VXNlcjIyNzY5MTEy",
      "avatar_url": "https://avatars.githubusercontent.com/u/22769112?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/aliwo",
      "html_url": "https://github.com/aliwo",
      "followers_url": "https://api.github.com/users/aliwo/followers",
      "following_url": "https://api.github.com/users/aliwo/following{/other_user}",
      "gists_url": "https://api.github.com/users/aliwo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/aliwo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/aliwo/subscriptions",
      "organizations_url": "https://api.github.com/users/aliwo/orgs",
      "repos_url": "https://api.github.com/users/aliwo/repos",
      "events_url": "https://api.github.com/users/aliwo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/aliwo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-21T03:42:23Z",
    "updated_at": "2020-09-21T03:42:36Z",
    "author_association": "NONE",
    "body": "please make this a core feature!",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/754699900",
    "html_url": "https://github.com/jupyter/notebook/issues/1816#issuecomment-754699900",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1816",
    "id": 754699900,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc1NDY5OTkwMA==",
    "user": {
      "login": "Oleg-dM",
      "id": 8371571,
      "node_id": "MDQ6VXNlcjgzNzE1NzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8371571?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Oleg-dM",
      "html_url": "https://github.com/Oleg-dM",
      "followers_url": "https://api.github.com/users/Oleg-dM/followers",
      "following_url": "https://api.github.com/users/Oleg-dM/following{/other_user}",
      "gists_url": "https://api.github.com/users/Oleg-dM/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Oleg-dM/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Oleg-dM/subscriptions",
      "organizations_url": "https://api.github.com/users/Oleg-dM/orgs",
      "repos_url": "https://api.github.com/users/Oleg-dM/repos",
      "events_url": "https://api.github.com/users/Oleg-dM/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Oleg-dM/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-05T15:17:41Z",
    "updated_at": "2021-01-05T15:47:17Z",
    "author_association": "NONE",
    "body": "> I have done it\r\n> http://stackoverflow.com/a/40505055/6003870\r\n\r\n ```js\r\nCodeMirror.keyMap.pcDefault[\"Ctrl-Down\"] = function(cm){\r\n\r\n    // get a position of a current cursor in a current cell\r\n    var current_cursor = cm.doc.getCursor();\r\n\r\n    // read a content from a line where is the current cursor & removes indentation\r\n    var line_content = cm.doc.getLine(current_cursor.line).replaceAll(\"\\t\", \"\").replaceAll(\"    \", \"\");\r\n\t\r\n    // removes tabs for proper identations in Jupyter\r\n    line_content.replaceAll(\"\\t\", \"\")\r\n\t\t\r\n\r\n    // go to the end the current line\r\n    CodeMirror.commands.goLineEnd(cm);\r\n\r\n    // make a break for a new line\r\n    CodeMirror.commands.newlineAndIndent(cm);\r\n\r\n    // filled a content of the new line content from line above it\r\n    cm.doc.replaceSelection(line_content);\r\n\r\n    // restore position cursor on the new line\r\n    cm.doc.setCursor(current_cursor.line + 1, current_cursor.ch);\r\n};\r\n```\r\n\r\nSlightly adapted the code for proper indentatin in Jupyter notebook (removing tabs from copied line)",
    "performed_via_github_app": null
  }
]
