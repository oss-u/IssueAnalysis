[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/282306286",
    "html_url": "https://github.com/jupyter/notebook/pull/2220#issuecomment-282306286",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2220",
    "id": 282306286,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MjMwNjI4Ng==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-24T14:37:11Z",
    "updated_at": "2017-02-24T14:37:11Z",
    "author_association": "MEMBER",
    "body": "@michaelpacer could you have a look at this?\r\n\r\n- Have we ever explicitly aimed to support `\\(` and `\\)` as math delimiters? I don't recall that, and I don't think it's implemented in nbconvert to HTML.\r\n- If we should fix this, should we try to get it in for 5.0?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/283201373",
    "html_url": "https://github.com/jupyter/notebook/pull/2220#issuecomment-283201373",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2220",
    "id": 283201373,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzIwMTM3Mw==",
    "user": {
      "login": "mpacer",
      "id": 2482408,
      "node_id": "MDQ6VXNlcjI0ODI0MDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2482408?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mpacer",
      "html_url": "https://github.com/mpacer",
      "followers_url": "https://api.github.com/users/mpacer/followers",
      "following_url": "https://api.github.com/users/mpacer/following{/other_user}",
      "gists_url": "https://api.github.com/users/mpacer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mpacer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mpacer/subscriptions",
      "organizations_url": "https://api.github.com/users/mpacer/orgs",
      "repos_url": "https://api.github.com/users/mpacer/repos",
      "events_url": "https://api.github.com/users/mpacer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mpacer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-01T00:03:14Z",
    "updated_at": "2017-03-01T00:03:14Z",
    "author_association": "MEMBER",
    "body": "Hi all, a few thoughts (took a couple days to get my bearings on this one as there are a few related issues with which I was getting it confused). My unraveling this confusion led to these different points. \r\n\r\n1. this seems (based on the exposition…I've not tried testing this yet) to address an issue I opened ages ago: https://github.com/jupyter/notebook/issues/759. If that is the scope of that, I think it should be fine. \r\n\r\n2. Technically the use of `\\\\( …\\\\)` inside the notebook isn't \"escaping\" the `\\` so that it can be interpreted by the underlying javascript, but it is specifically the syntax we use in contrast to traditional `\\(` `\\)`. I think we made an explicit decision to not support those as delimiters (see next point). I don't think that this is actually doing that (based on the number of `\\`s that are present in the various instances of the commit). That said, that regular expression is a beast to read and not test, so I'll need a little time to error test it thoroughly. \r\n\r\n2.1. This should probably have some accompanying tests to check for the previously aberrant behaviour (in https://github.com/jupyter/notebook/issues/759 and https://github.com/jupyter/notebook/issues/980), but that assumes that we're still expanding our test suite. In other cases (e.g., https://github.com/jupyter/notebook/pull/2048) it was decided that tests weren't required. This seems like a particularly precarious case (as it's a \"bugfix\" rather than a \"feature request\") and so if there _is_ any planned further expansion of our test suite, then this would merit inclusion.\r\n\r\n3. If this _is_ allowing `\\(` `\\)` as delimiters (nb: I don't think it is), can someone explain why this is ok but other PRs that seemed to try to do something similar weren't (e.g., https://github.com/jupyter/notebook/pull/1935 &  https://github.com/jupyter/nbconvert/issues/477 )? I'm not opposed to including it in theory, but it strictly speaking is a departure from the the commonmark approach as quoted previously by @rgbkrk: \r\n\r\n> [the problem with that syntax is that `\\[` and `\\(` already have clearly defined meanings: they are escaped `[` and `(` characters, and it is very important that there be a way to escape these characters in certain circumstances](https://talk.commonmark.org/t/mathematics-extension/457/17)\r\n\r\nI think this observation is unrelated to this PR beyond from clarifying a point about when certain syntaxes are valid or invalid. However, if we wanted to allow `\\[` after two new lines (i.e., `\\n\\n\\\\\\[`, a `\\[` with only a blank above it…) which I believe is currently needed for the `\\begin{` syntax to be detected, that could be fine. If you wanted to get back the `\\[` escapement, then you just include a space in the previous line, nbd. But, I'm hard pressed to think of a way to allow `\\(` and the escapement of `(` at the same time (since it is intended to be \"inline\" mathematics no whitespace can be used to distinguish it cleanly).",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/283202172",
    "html_url": "https://github.com/jupyter/notebook/pull/2220#issuecomment-283202172",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2220",
    "id": 283202172,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzIwMjE3Mg==",
    "user": {
      "login": "mpacer",
      "id": 2482408,
      "node_id": "MDQ6VXNlcjI0ODI0MDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2482408?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mpacer",
      "html_url": "https://github.com/mpacer",
      "followers_url": "https://api.github.com/users/mpacer/followers",
      "following_url": "https://api.github.com/users/mpacer/following{/other_user}",
      "gists_url": "https://api.github.com/users/mpacer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mpacer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mpacer/subscriptions",
      "organizations_url": "https://api.github.com/users/mpacer/orgs",
      "repos_url": "https://api.github.com/users/mpacer/repos",
      "events_url": "https://api.github.com/users/mpacer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mpacer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-01T00:07:47Z",
    "updated_at": "2017-03-01T00:07:47Z",
    "author_association": "MEMBER",
    "body": "Simpler comment: this should also cover `\\[` and `\\]` (by indirectly including `\\\\[` and `\\\\]` in the parsing code in places that are equivalent to the current `\\\\(` `\\\\)`). ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/283209801",
    "html_url": "https://github.com/jupyter/notebook/pull/2220#issuecomment-283209801",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2220",
    "id": 283209801,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzIwOTgwMQ==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-01T00:51:02Z",
    "updated_at": "2017-03-01T00:51:02Z",
    "author_association": "MEMBER",
    "body": "@joined - thank you for taking the time to open a PR and write out a very complete description of the problem.\r\n\r\nThank you @michaelpacer for the incredible amount of detail and care you're putting into standardization on the format. Happy you're handling that. I can't speak much to the changes here today, so I'll have to come back to this. I can't be a blocker though, I live it in yours and @blink1073's hands.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/283339519",
    "html_url": "https://github.com/jupyter/notebook/pull/2220#issuecomment-283339519",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2220",
    "id": 283339519,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzMzOTUxOQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-01T13:28:56Z",
    "updated_at": "2017-03-01T13:29:07Z",
    "author_association": "MEMBER",
    "body": "> If this is allowing \\\\( \\\\) as delimiters (nb: I don't think it is), can someone explain why this is ok but other PRs that seemed to try to do something similar weren't \r\n\r\n@rgbkrk's comment that you quoted makes sense to me (I don't remember the earlier PRs on the same subject), and thus I don't think that we should support `\\(` and `\\)` as math delimiters. I don't recall us ever indicating that they were supported delimiters, and we don't try to support all Latex syntax.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/283339922",
    "html_url": "https://github.com/jupyter/notebook/pull/2220#issuecomment-283339922",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2220",
    "id": 283339922,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzMzOTkyMg==",
    "user": {
      "login": "blink1073",
      "id": 2096628,
      "node_id": "MDQ6VXNlcjIwOTY2Mjg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2096628?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blink1073",
      "html_url": "https://github.com/blink1073",
      "followers_url": "https://api.github.com/users/blink1073/followers",
      "following_url": "https://api.github.com/users/blink1073/following{/other_user}",
      "gists_url": "https://api.github.com/users/blink1073/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blink1073/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blink1073/subscriptions",
      "organizations_url": "https://api.github.com/users/blink1073/orgs",
      "repos_url": "https://api.github.com/users/blink1073/repos",
      "events_url": "https://api.github.com/users/blink1073/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blink1073/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-01T13:30:39Z",
    "updated_at": "2017-03-01T13:30:39Z",
    "author_association": "MEMBER",
    "body": "@takluyver, sounds fair to me.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/283356499",
    "html_url": "https://github.com/jupyter/notebook/pull/2220#issuecomment-283356499",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2220",
    "id": 283356499,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzM1NjQ5OQ==",
    "user": {
      "login": "joined",
      "id": 7922312,
      "node_id": "MDQ6VXNlcjc5MjIzMTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7922312?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joined",
      "html_url": "https://github.com/joined",
      "followers_url": "https://api.github.com/users/joined/followers",
      "following_url": "https://api.github.com/users/joined/following{/other_user}",
      "gists_url": "https://api.github.com/users/joined/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joined/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joined/subscriptions",
      "organizations_url": "https://api.github.com/users/joined/orgs",
      "repos_url": "https://api.github.com/users/joined/repos",
      "events_url": "https://api.github.com/users/joined/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joined/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-01T14:36:22Z",
    "updated_at": "2017-03-01T14:36:22Z",
    "author_association": "CONTRIBUTOR",
    "body": "I incorporated your feedback, I hope I got it right.\r\n\r\nThanks for clarifying the confusion with `\\\\(` and `\\(`, I now realise better why the first one was chosen as the delimiter.\r\n\r\nAnd since you are discussing about it, no, I never attempted to add the support to `\\(` as math delimiter.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/283406164",
    "html_url": "https://github.com/jupyter/notebook/pull/2220#issuecomment-283406164",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2220",
    "id": 283406164,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzQwNjE2NA==",
    "user": {
      "login": "mpacer",
      "id": 2482408,
      "node_id": "MDQ6VXNlcjI0ODI0MDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2482408?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mpacer",
      "html_url": "https://github.com/mpacer",
      "followers_url": "https://api.github.com/users/mpacer/followers",
      "following_url": "https://api.github.com/users/mpacer/following{/other_user}",
      "gists_url": "https://api.github.com/users/mpacer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mpacer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mpacer/subscriptions",
      "organizations_url": "https://api.github.com/users/mpacer/orgs",
      "repos_url": "https://api.github.com/users/mpacer/repos",
      "events_url": "https://api.github.com/users/mpacer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mpacer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-01T17:16:45Z",
    "updated_at": "2017-03-01T17:16:45Z",
    "author_association": "MEMBER",
    "body": "@takluyver are you ok merging this without tests like before? \r\n\r\nIf so this looks good to me, though a comment explaining the last replace call & the new function would be useful for future debugging. Not a blocker though.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/283428098",
    "html_url": "https://github.com/jupyter/notebook/pull/2220#issuecomment-283428098",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2220",
    "id": 283428098,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzQyODA5OA==",
    "user": {
      "login": "mpacer",
      "id": 2482408,
      "node_id": "MDQ6VXNlcjI0ODI0MDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2482408?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mpacer",
      "html_url": "https://github.com/mpacer",
      "followers_url": "https://api.github.com/users/mpacer/followers",
      "following_url": "https://api.github.com/users/mpacer/following{/other_user}",
      "gists_url": "https://api.github.com/users/mpacer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mpacer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mpacer/subscriptions",
      "organizations_url": "https://api.github.com/users/mpacer/orgs",
      "repos_url": "https://api.github.com/users/mpacer/repos",
      "events_url": "https://api.github.com/users/mpacer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mpacer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-01T18:34:45Z",
    "updated_at": "2017-03-01T18:34:45Z",
    "author_association": "MEMBER",
    "body": "This goes beyond just fixing #980, and so is in no way blocking…\r\n\r\n@joined can you explain why `$` is given a special value as `inline`? I can't see any reason, but if there is, is that something that should also apply to `\\\\\\\\\\(` & `\\\\\\\\\\)` since those are also inline math delimiters? If there's no reason, would you just replace the use of that variable to instead be a hardcoded string like the rest of the delimiters?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/283445158",
    "html_url": "https://github.com/jupyter/notebook/pull/2220#issuecomment-283445158",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2220",
    "id": 283445158,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzQ0NTE1OA==",
    "user": {
      "login": "mpacer",
      "id": 2482408,
      "node_id": "MDQ6VXNlcjI0ODI0MDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2482408?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mpacer",
      "html_url": "https://github.com/mpacer",
      "followers_url": "https://api.github.com/users/mpacer/followers",
      "following_url": "https://api.github.com/users/mpacer/following{/other_user}",
      "gists_url": "https://api.github.com/users/mpacer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mpacer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mpacer/subscriptions",
      "organizations_url": "https://api.github.com/users/mpacer/orgs",
      "repos_url": "https://api.github.com/users/mpacer/repos",
      "events_url": "https://api.github.com/users/mpacer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mpacer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-01T19:35:05Z",
    "updated_at": "2017-03-01T19:35:05Z",
    "author_association": "MEMBER",
    "body": "K nvm, I just made that change. \r\n\r\nIt's small enough of a difference that, if the tests pass, I'll merge, as it would seem to leave everything else untouched and that LGTM. ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/283523857",
    "html_url": "https://github.com/jupyter/notebook/pull/2220#issuecomment-283523857",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2220",
    "id": 283523857,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzUyMzg1Nw==",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-02T01:08:29Z",
    "updated_at": "2017-03-02T01:08:29Z",
    "author_association": "MEMBER",
    "body": "I want to add that I am grateful for the work everyone has put in here, thank you @joined for providing this fix, and for everyone else (especially @michaelpacer) for the reviews. So I'm not trying to pick on you, I just don't know how else to push back against what I think is a bad policy of merging features or fixes which do not have tests. ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/283530644",
    "html_url": "https://github.com/jupyter/notebook/pull/2220#issuecomment-283530644",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2220",
    "id": 283530644,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzUzMDY0NA==",
    "user": {
      "login": "mpacer",
      "id": 2482408,
      "node_id": "MDQ6VXNlcjI0ODI0MDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2482408?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mpacer",
      "html_url": "https://github.com/mpacer",
      "followers_url": "https://api.github.com/users/mpacer/followers",
      "following_url": "https://api.github.com/users/mpacer/following{/other_user}",
      "gists_url": "https://api.github.com/users/mpacer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mpacer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mpacer/subscriptions",
      "organizations_url": "https://api.github.com/users/mpacer/orgs",
      "repos_url": "https://api.github.com/users/mpacer/repos",
      "events_url": "https://api.github.com/users/mpacer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mpacer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-02T01:47:22Z",
    "updated_at": "2017-03-02T01:47:22Z",
    "author_association": "MEMBER",
    "body": "@ivanov I understand your concerns — would you be able to put some cycles into fixing the js testing suite? That could include us pair coding our way through it since you're in the area. I'm not currently equipped to tackle the general notebook js testing problem in an efficient manner (and don't have the free cycles to teach myself about js testing from scratch). However, I think that I could pick up a lot once I got some intellectual momentum by working with someone who knows the ins and outs of the problem space.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/283540380",
    "html_url": "https://github.com/jupyter/notebook/pull/2220#issuecomment-283540380",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2220",
    "id": 283540380,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzU0MDM4MA==",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-02T02:48:55Z",
    "updated_at": "2017-03-02T02:48:55Z",
    "author_association": "MEMBER",
    "body": "As far as I know, the JS test suite mostly works. It breaks because either some tests or some of the utility functions that tests uses end up having race conditions. I've created the [Flaky JavaScript tests omnibus ticket #2243](https://github.com/jupyter/notebook/issues/2243) where we can note down tests which occasionally fail (with any relevant details) so we can address this when it comes up.\r\n\r\n You can read about [writing and running JS tests for the notebook here](https://github.com/ipython/ipython/wiki/Dev:-Testing#javascript-tests).  \r\n\r\nThe starting point for this specific PR would probably be to look at and add to [notebook/tests/notebook/markdown.js](https://github.com/jupyter/notebook/blob/master/notebook/tests/notebook/markdown.js)\r\n\r\nI'm happy to meet with you @michaelpacer, but I hope you can start at the two links above so you can figure out what's missing and improve the docs and have a place to direct others for how to write and run these tests.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/283694853",
    "html_url": "https://github.com/jupyter/notebook/pull/2220#issuecomment-283694853",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2220",
    "id": 283694853,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzY5NDg1Mw==",
    "user": {
      "login": "joined",
      "id": 7922312,
      "node_id": "MDQ6VXNlcjc5MjIzMTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7922312?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joined",
      "html_url": "https://github.com/joined",
      "followers_url": "https://api.github.com/users/joined/followers",
      "following_url": "https://api.github.com/users/joined/following{/other_user}",
      "gists_url": "https://api.github.com/users/joined/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joined/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joined/subscriptions",
      "organizations_url": "https://api.github.com/users/joined/orgs",
      "repos_url": "https://api.github.com/users/joined/repos",
      "events_url": "https://api.github.com/users/joined/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joined/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-02T16:01:59Z",
    "updated_at": "2017-03-02T16:01:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "So I looked into the testing for the rendered LaTeX code, it seems quite messy.\r\n\r\nFor example rendering a cell with the content `$ a*b $, $ c*d $` results in the following:\r\n\r\n````html\r\n<p><span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"MathJax\" id=\"MathJax-Element-7-Frame\" tabindex=\"0\" data-mathml=\"<math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;><mi>a</mi><mo>&amp;#x2217;</mo><mi>b</mi></math>\" role=\"presentation\" style=\"position: relative;\"><nobr aria-hidden=\"true\"><span class=\"math\" id=\"MathJax-Span-40\" role=\"math\" style=\"width: 2.443em; display: inline-block;\"><span style=\"display: inline-block; position: relative; width: 2.027em; height: 0px; font-size: 120%;\"><span style=\"position: absolute; clip: rect(1.67em 1002.03em 2.682em -999.997em); top: -2.497em; left: 0.003em;\"><span class=\"mrow\" id=\"MathJax-Span-41\"><span class=\"mi\" id=\"MathJax-Span-42\" style=\"font-family: STIXMathJax_Main-italic;\">a</span><span class=\"mo\" id=\"MathJax-Span-43\" style=\"font-family: STIXMathJax_Main; padding-left: 0.241em;\">∗</span><span class=\"mi\" id=\"MathJax-Span-44\" style=\"font-family: STIXMathJax_Main-italic; padding-left: 0.241em;\">b</span></span><span style=\"display: inline-block; width: 0px; height: 2.503em;\"></span></span>\r\n    </span><span style=\"display: inline-block; overflow: hidden; vertical-align: -0.068em; border-left: 0px solid; width: 0px; height: 1.004em;\"></span></span>\r\n    </nobr><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>a</mi><mo>∗</mo><mi>b</mi></math></span></span>\r\n    <script type=\"math/tex\" id=\"MathJax-Element-7\"> a*b </script>, <span class=\"MathJax_Preview\" style=\"color: inherit;\"></span><span class=\"MathJax\" id=\"MathJax-Element-8-Frame\" tabindex=\"0\" data-mathml=\"<math xmlns=&quot;http://www.w3.org/1998/Math/MathML&quot;><mi>c</mi><mo>&amp;#x2217;</mo><mi>d</mi></math>\" role=\"presentation\" style=\"position: relative;\"><nobr aria-hidden=\"true\"><span class=\"math\" id=\"MathJax-Span-45\" role=\"math\" style=\"width: 2.384em; display: inline-block;\"><span style=\"display: inline-block; position: relative; width: 1.967em; height: 0px; font-size: 120%;\"><span style=\"position: absolute; clip: rect(1.67em 1001.97em 2.682em -999.997em); top: -2.497em; left: 0.003em;\"><span class=\"mrow\" id=\"MathJax-Span-46\"><span class=\"mi\" id=\"MathJax-Span-47\" style=\"font-family: STIXMathJax_Main-italic;\">c</span><span class=\"mo\" id=\"MathJax-Span-48\" style=\"font-family: STIXMathJax_Main; padding-left: 0.241em;\">∗</span><span class=\"mi\" id=\"MathJax-Span-49\" style=\"font-family: STIXMathJax_Main-italic; padding-left: 0.241em;\">d<span style=\"display: inline-block; overflow: hidden; height: 1px; width: 0.003em;\"></span></span>\r\n    </span><span style=\"display: inline-block; width: 0px; height: 2.503em;\"></span></span>\r\n    </span><span style=\"display: inline-block; overflow: hidden; vertical-align: -0.068em; border-left: 0px solid; width: 0px; height: 1.004em;\"></span></span>\r\n    </nobr><span class=\"MJX_Assistive_MathML\" role=\"presentation\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><mi>c</mi><mo>∗</mo><mi>d</mi></math></span></span>\r\n    <script type=\"math/tex\" id=\"MathJax-Element-8\"> c*d </script>\r\n</p>\r\n````\r\n\r\nI see many things that could go wrong when making an assertion on the rendered HTML output. For example MathJax attributes incremental ids to each rendered LaTeX group, and the numbering is global to the notebook.\r\n\r\nIt seems also that the inline CSS that MathJax output could change basing on the enviroment making the test fail.\r\n\r\nAny ideas?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/283737791",
    "html_url": "https://github.com/jupyter/notebook/pull/2220#issuecomment-283737791",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2220",
    "id": 283737791,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzczNzc5MQ==",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-02T18:29:40Z",
    "updated_at": "2017-03-02T18:29:40Z",
    "author_association": "MEMBER",
    "body": "I agree that trying to assert the whole MathJax generated DOM subtree would be difficult. What about drilling down into parts of it? Or asserting how many mo and mi elements there are in a given test case? (I also just updated the title of the PR to be more descriptive)",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/284145756",
    "html_url": "https://github.com/jupyter/notebook/pull/2220#issuecomment-284145756",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2220",
    "id": 284145756,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDE0NTc1Ng==",
    "user": {
      "login": "joined",
      "id": 7922312,
      "node_id": "MDQ6VXNlcjc5MjIzMTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7922312?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/joined",
      "html_url": "https://github.com/joined",
      "followers_url": "https://api.github.com/users/joined/followers",
      "following_url": "https://api.github.com/users/joined/following{/other_user}",
      "gists_url": "https://api.github.com/users/joined/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/joined/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/joined/subscriptions",
      "organizations_url": "https://api.github.com/users/joined/orgs",
      "repos_url": "https://api.github.com/users/joined/repos",
      "events_url": "https://api.github.com/users/joined/events{/privacy}",
      "received_events_url": "https://api.github.com/users/joined/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-04T11:29:29Z",
    "updated_at": "2017-03-04T13:28:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "So I wrote the following code in `notebook/markdown.js` to test the LaTeX rendering with the `$` delimiter, by looking at the number of `mi` and `mo` tags as suggested by @ivanov:\r\n\r\n```javascript\r\n// Test LaTeX rendering with delimiter $\r\noutput = this.evaluate(function () {\r\n    IPython.notebook.to_markdown();\r\n    var cell = IPython.notebook.get_selected_cell();\r\n    cell.set_text('$ a*b $, $ c*d $');\r\n    cell.render();\r\n\r\n    var mi = cell.element[0].getElementsByTagName('mi'),\r\n        mo = cell.element[0].getElementsByTagName('mo');\r\n\r\n    return {\r\n        'n_mi': mi.length > 0 ? mi.length : 0,\r\n        'n_mo': mo.length > 0 ? mo.length : 0\r\n    };\r\n});\r\nthis.test.assertEquals(output, {'n_mi': 4, 'n_mo': 2}, 'LaTeX rendering with delimiter $ works');\r\n```\r\nUnfortunately the test fails with the following output:\r\n```\r\n$ python -m notebook.jstest notebook/markdown.js\r\n[...]\r\nFAIL LaTeX rendering with delimiter $ works\r\n#    type: assertEquals\r\n#    file: /Users/joined/Desktop/Software Architecture/notebook/notebook/tests/notebook/markdown.js\r\n#    subject: {\"n_mi\":0,\"n_mo\":0}\r\n#    expected: {\"n_mi\":4,\"n_mo\":2}\r\n[...]\r\n```\r\nBy checking the HTML contents of the rendered cell as seen by CasperJS with `console.log`  this is what I get:\r\n```html\r\n<div class=\"text_cell_render rendered_html\" tabindex=\"-1\"><p>$ a*b $, $ c*d $</p>\\n</div>\r\n```\r\nSo it looks like MathJax doesn't render the cell, even if calling `cell.render()` should trigger it.\r\n\r\nAny ideas?\r\n\r\n-----\r\n\r\n### Update\r\nWell, I now realise that the problem is that MathJax rendering is asynchronous. I guess it's necessary to trigger an event when the MathJax rendering is completed (there doesn't seem to be already any event triggered) and then use CasperJS's `waitFor` to wait for that event to be triggered before evaluating the contents of the rendered cell.\r\n\r\nIt seems that [the way to go](https://groups.google.com/forum/#!topic/mathjax-users/TCzNZWHskQ4) to trigger an event after the cell has rendered is to push the trigger function to the MathJax Queue just after having queued the rendering.\r\n\r\nMaybe [here](https://github.com/jupyter/notebook/blob/master/notebook/static/notebook/js/cell.js#L271:L273) instead of passing only the element I can pass the entire `this` object to the `typeset` function and then instead of triggering `rendered.MarkdownCell` from [here](https://github.com/jupyter/notebook/blob/master/notebook/static/notebook/js/textcell.js#L431) I can change the `typeset` function to do it, like so\r\n```js\r\nvar typeset = function(cell) {\r\n    var $el = cell.element.jquery ? cell.element : $(cell.element);\r\n\r\n    if(!window.MathJax){\r\n        return;\r\n    }\r\n    $el.each(function(){\r\n        // MathJax takes a DOM node: $.each makes `this` the context\r\n        MathJax.Hub.Queue([\"Typeset\", MathJax.Hub, this]);\r\n        MathJax.Hub.Queue(cell.events.trigger(\"rendered.MarkdownCell\", {'cell': cell}));\r\n    });\r\n};\r\n\r\n```\r\n(I don't see the reason for returning the `MathJax.Hub.Queue` objects, the return value doesn't seem to be used anywhere. I also don't see the reason for the second `text` argument of the function, because it's never called with a second parameter)\r\n\r\nThoughts? To be honest I feel like this is getting a bit bigger than expected and I think this kind of changes are better made by someone that has worked before with the codebase.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/284200056",
    "html_url": "https://github.com/jupyter/notebook/pull/2220#issuecomment-284200056",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2220",
    "id": 284200056,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDIwMDA1Ng==",
    "user": {
      "login": "ivanov",
      "id": 118211,
      "node_id": "MDQ6VXNlcjExODIxMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/118211?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ivanov",
      "html_url": "https://github.com/ivanov",
      "followers_url": "https://api.github.com/users/ivanov/followers",
      "following_url": "https://api.github.com/users/ivanov/following{/other_user}",
      "gists_url": "https://api.github.com/users/ivanov/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ivanov/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ivanov/subscriptions",
      "organizations_url": "https://api.github.com/users/ivanov/orgs",
      "repos_url": "https://api.github.com/users/ivanov/repos",
      "events_url": "https://api.github.com/users/ivanov/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ivanov/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-05T02:23:53Z",
    "updated_at": "2017-03-05T02:23:53Z",
    "author_association": "MEMBER",
    "body": "Thank you a bunch for looking more into this, @joined, this will help us make progress. I met with @michaelpacer to get him up to speed on the javascript testing stuff earlier this week. We'll get there.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/284796356",
    "html_url": "https://github.com/jupyter/notebook/pull/2220#issuecomment-284796356",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2220",
    "id": 284796356,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDc5NjM1Ng==",
    "user": {
      "login": "gnestor",
      "id": 512354,
      "node_id": "MDQ6VXNlcjUxMjM1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/512354?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnestor",
      "html_url": "https://github.com/gnestor",
      "followers_url": "https://api.github.com/users/gnestor/followers",
      "following_url": "https://api.github.com/users/gnestor/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnestor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnestor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnestor/subscriptions",
      "organizations_url": "https://api.github.com/users/gnestor/orgs",
      "repos_url": "https://api.github.com/users/gnestor/repos",
      "events_url": "https://api.github.com/users/gnestor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnestor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-07T17:32:17Z",
    "updated_at": "2017-03-07T17:33:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "Fix on jupyterlab with tests: https://github.com/jupyterlab/jupyterlab/pull/1846",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/284879965",
    "html_url": "https://github.com/jupyter/notebook/pull/2220#issuecomment-284879965",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2220",
    "id": 284879965,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDg3OTk2NQ==",
    "user": {
      "login": "gnestor",
      "id": 512354,
      "node_id": "MDQ6VXNlcjUxMjM1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/512354?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnestor",
      "html_url": "https://github.com/gnestor",
      "followers_url": "https://api.github.com/users/gnestor/followers",
      "following_url": "https://api.github.com/users/gnestor/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnestor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnestor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnestor/subscriptions",
      "organizations_url": "https://api.github.com/users/gnestor/orgs",
      "repos_url": "https://api.github.com/users/gnestor/repos",
      "events_url": "https://api.github.com/users/gnestor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnestor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-07T22:24:03Z",
    "updated_at": "2017-03-07T22:24:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "@michaelpacer Let me know what I can do to help get this merged!",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/284913356",
    "html_url": "https://github.com/jupyter/notebook/pull/2220#issuecomment-284913356",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2220",
    "id": 284913356,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDkxMzM1Ng==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-08T01:07:31Z",
    "updated_at": "2017-03-08T01:07:31Z",
    "author_association": "MEMBER",
    "body": "Test added and passing for a case confirmed to fail on master. Thanks, @michaelpacer!",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/285112177",
    "html_url": "https://github.com/jupyter/notebook/pull/2220#issuecomment-285112177",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2220",
    "id": 285112177,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTExMjE3Nw==",
    "user": {
      "login": "mpacer",
      "id": 2482408,
      "node_id": "MDQ6VXNlcjI0ODI0MDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2482408?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mpacer",
      "html_url": "https://github.com/mpacer",
      "followers_url": "https://api.github.com/users/mpacer/followers",
      "following_url": "https://api.github.com/users/mpacer/following{/other_user}",
      "gists_url": "https://api.github.com/users/mpacer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mpacer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mpacer/subscriptions",
      "organizations_url": "https://api.github.com/users/mpacer/orgs",
      "repos_url": "https://api.github.com/users/mpacer/repos",
      "events_url": "https://api.github.com/users/mpacer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mpacer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-08T17:40:43Z",
    "updated_at": "2017-03-08T17:40:43Z",
    "author_association": "MEMBER",
    "body": "Also, this closes #759.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/285271474",
    "html_url": "https://github.com/jupyter/notebook/pull/2220#issuecomment-285271474",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2220",
    "id": 285271474,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTI3MTQ3NA==",
    "user": {
      "login": "gnestor",
      "id": 512354,
      "node_id": "MDQ6VXNlcjUxMjM1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/512354?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnestor",
      "html_url": "https://github.com/gnestor",
      "followers_url": "https://api.github.com/users/gnestor/followers",
      "following_url": "https://api.github.com/users/gnestor/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnestor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnestor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnestor/subscriptions",
      "organizations_url": "https://api.github.com/users/gnestor/orgs",
      "repos_url": "https://api.github.com/users/gnestor/repos",
      "events_url": "https://api.github.com/users/gnestor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnestor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-09T06:59:18Z",
    "updated_at": "2017-03-09T06:59:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "Are we ready to merge!?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/285408023",
    "html_url": "https://github.com/jupyter/notebook/pull/2220#issuecomment-285408023",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2220",
    "id": 285408023,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NTQwODAyMw==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-09T16:46:17Z",
    "updated_at": "2017-03-09T16:46:17Z",
    "author_association": "MEMBER",
    "body": "Thank you @joined, @michaelpacer, and all the reviewers",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/293883840",
    "html_url": "https://github.com/jupyter/notebook/pull/2220#issuecomment-293883840",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2220",
    "id": 293883840,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5Mzg4Mzg0MA==",
    "user": {
      "login": "mgeier",
      "id": 705404,
      "node_id": "MDQ6VXNlcjcwNTQwNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/705404?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mgeier",
      "html_url": "https://github.com/mgeier",
      "followers_url": "https://api.github.com/users/mgeier/followers",
      "following_url": "https://api.github.com/users/mgeier/following{/other_user}",
      "gists_url": "https://api.github.com/users/mgeier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mgeier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mgeier/subscriptions",
      "organizations_url": "https://api.github.com/users/mgeier/orgs",
      "repos_url": "https://api.github.com/users/mgeier/repos",
      "events_url": "https://api.github.com/users/mgeier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mgeier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-13T12:39:44Z",
    "updated_at": "2017-04-13T12:39:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "I just happened to notice that now `\\\\(` is supported in the notebook as math delimiter, and I think this is a really bad idea!\r\n\r\nThis goes very much against the spirit of Markdown and is very inconsistent from a Markdown standpoint. A backslash is normally used to avoid something being interpreted as formatting command, here it is used for the exact opposite!\r\n\r\nIt also increases the already bad fragmentation of Markdown extensions.\r\n\r\nWhat about just not supporting this style of separators?\r\nWe have already `$` and `$$` and `\\begin{equation}...\\end{equation}` (and many other math environments) ... why do we need more?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/294019811",
    "html_url": "https://github.com/jupyter/notebook/pull/2220#issuecomment-294019811",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2220",
    "id": 294019811,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDAxOTgxMQ==",
    "user": {
      "login": "mpacer",
      "id": 2482408,
      "node_id": "MDQ6VXNlcjI0ODI0MDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2482408?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mpacer",
      "html_url": "https://github.com/mpacer",
      "followers_url": "https://api.github.com/users/mpacer/followers",
      "following_url": "https://api.github.com/users/mpacer/following{/other_user}",
      "gists_url": "https://api.github.com/users/mpacer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mpacer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mpacer/subscriptions",
      "organizations_url": "https://api.github.com/users/mpacer/orgs",
      "repos_url": "https://api.github.com/users/mpacer/repos",
      "events_url": "https://api.github.com/users/mpacer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mpacer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-13T20:58:13Z",
    "updated_at": "2017-04-13T20:58:13Z",
    "author_association": "MEMBER",
    "body": "@mgeier many people prefer to use this style of equation formatting command (even if I do not) \r\n\r\nTechnically, the LaTeX community discourages the use of $$ as it is a TeX command that has different spacing rules than the LaTeX command (in which case the one backslash version `\\[…\\]` is the officially preferred option which doesn't apply for the aforementioned reason).\r\n\r\nProbably most importantly though, these delimiters _have been_ supported in the notebook for a while now, they are not new. Now, they are being parsed correctly when rendered (making previous issues with subscript rendering vs. italics rendering disappear).",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/294021397",
    "html_url": "https://github.com/jupyter/notebook/pull/2220#issuecomment-294021397",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2220",
    "id": 294021397,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDAyMTM5Nw==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-13T21:05:16Z",
    "updated_at": "2017-04-13T21:05:16Z",
    "author_association": "MEMBER",
    "body": "Of note: nteract only supports the `$` and `$$` varieties, largely to stick with @jgm recommendations with commonmark and a hopeful future commonmark extension pathway.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/294110795",
    "html_url": "https://github.com/jupyter/notebook/pull/2220#issuecomment-294110795",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2220",
    "id": 294110795,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDExMDc5NQ==",
    "user": {
      "login": "mgeier",
      "id": 705404,
      "node_id": "MDQ6VXNlcjcwNTQwNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/705404?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mgeier",
      "html_url": "https://github.com/mgeier",
      "followers_url": "https://api.github.com/users/mgeier/followers",
      "following_url": "https://api.github.com/users/mgeier/following{/other_user}",
      "gists_url": "https://api.github.com/users/mgeier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mgeier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mgeier/subscriptions",
      "organizations_url": "https://api.github.com/users/mgeier/orgs",
      "repos_url": "https://api.github.com/users/mgeier/repos",
      "events_url": "https://api.github.com/users/mgeier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mgeier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-14T07:54:57Z",
    "updated_at": "2017-04-14T07:54:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "@mpacer \r\n\r\n> Probably most importantly though, these delimiters *have been* supported in the notebook for a while now, they are not new.\r\n\r\nThanks for the information, I wasn't aware of that.\r\n\r\nI still think it was an unfortunate decision to support them.\r\n\r\nI understand that it may be hard to get rid of them now, but I would still discourage their use in the future.\r\nAnd probably with some future version of `nbformat`, they could be automatically converted to their preferred alternative?\r\n\r\n> the LaTeX community discourages the use of `$$`\r\n\r\nThat's fair enough, I can totally live without those. I wouldn't even mention them in the documentation (and I don't mention them when I write documentation).\r\nI highly recommend to use math environments (with `\\begin{...}` and `\\end{...}`) instead.\r\nThey can and should be used in \"normal\" LaTeX documents, they don't clash with Markdown, they are fully supported in Pandoc (which is kind of the reference, isn't it?), and they are much more flexible anyway.\r\n\r\n@rgbkrk \r\n\r\n> ... and a hopeful future commonmark extension pathway\r\n\r\nExactly.",
    "performed_via_github_app": null
  }
]
