[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/397736725",
    "html_url": "https://github.com/jupyter/notebook/issues/3691#issuecomment-397736725",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3691",
    "id": 397736725,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzczNjcyNQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-15T20:43:07Z",
    "updated_at": "2018-06-15T20:43:07Z",
    "author_association": "MEMBER",
    "body": "I think the issue is with doing it in the same cell where you import matplotlib - there's some setup that only happens after that cell has run.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/397916753",
    "html_url": "https://github.com/jupyter/notebook/issues/3691#issuecomment-397916753",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3691",
    "id": 397916753,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzkxNjc1Mw==",
    "user": {
      "login": "rnelsonchem",
      "id": 3750670,
      "node_id": "MDQ6VXNlcjM3NTA2NzA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3750670?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rnelsonchem",
      "html_url": "https://github.com/rnelsonchem",
      "followers_url": "https://api.github.com/users/rnelsonchem/followers",
      "following_url": "https://api.github.com/users/rnelsonchem/following{/other_user}",
      "gists_url": "https://api.github.com/users/rnelsonchem/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rnelsonchem/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rnelsonchem/subscriptions",
      "organizations_url": "https://api.github.com/users/rnelsonchem/orgs",
      "repos_url": "https://api.github.com/users/rnelsonchem/repos",
      "events_url": "https://api.github.com/users/rnelsonchem/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rnelsonchem/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-18T00:25:04Z",
    "updated_at": "2018-06-18T00:25:04Z",
    "author_association": "NONE",
    "body": "Does this mean that this is the expected notebook behavior? Or is this actually a bug? I can confirm that this is an issue for me, and I can also confirm that splitting out the import into a separate cell does work. (It would be preferable if this wasn't happening for a short course that I'm teaching soon-ish, which is why I ask.)",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/398002113",
    "html_url": "https://github.com/jupyter/notebook/issues/3691#issuecomment-398002113",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3691",
    "id": 398002113,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODAwMjExMw==",
    "user": {
      "login": "sebma",
      "id": 4569306,
      "node_id": "MDQ6VXNlcjQ1NjkzMDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4569306?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sebma",
      "html_url": "https://github.com/sebma",
      "followers_url": "https://api.github.com/users/sebma/followers",
      "following_url": "https://api.github.com/users/sebma/following{/other_user}",
      "gists_url": "https://api.github.com/users/sebma/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sebma/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sebma/subscriptions",
      "organizations_url": "https://api.github.com/users/sebma/orgs",
      "repos_url": "https://api.github.com/users/sebma/repos",
      "events_url": "https://api.github.com/users/sebma/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sebma/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-18T09:52:22Z",
    "updated_at": "2018-06-18T09:52:22Z",
    "author_association": "NONE",
    "body": "@takluyver Hi, I added the `import matplotlib.pyplot as plt` import at the end of my `$HOME/.jupyter/jupyter_notebook_config.py` as a workaround : \r\n\r\n```python\r\ntry :\r\n    import matplotlib as mpl\r\n    import matplotlib.pyplot as plt\r\nexcept :\r\n    pass\r\n```\r\nOnce I restart the `jupyter-notebook` process, then restart my new `ipynb` notebook file and run the first cell containing `plt.plot([1,2,3,4])`, it says : \r\n\r\n```python\r\n---------------------------------------------------------------------------\r\nNameError                                 Traceback (most recent call last)\r\n<ipython-input-1-61e052f4bd52> in <module>()\r\n----> 1 plt.plot([1,2,3,4])\r\n\r\nNameError: name 'plt' is not defined\r\n```\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/398009162",
    "html_url": "https://github.com/jupyter/notebook/issues/3691#issuecomment-398009162",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3691",
    "id": 398009162,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODAwOTE2Mg==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-18T10:20:22Z",
    "updated_at": "2018-06-18T10:20:22Z",
    "author_association": "MEMBER",
    "body": "@rnelsonchem it's somewhere inbetween. I think that if someone can figure out a way to fix it that doesn't break other things, that would probably be welcome.\r\n\r\n@sebma config files don't go into your interactive namespace. Try a [startup file](http://ipython.readthedocs.io/en/stable/interactive/tutorial.html#startup-files) instead.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/398027236",
    "html_url": "https://github.com/jupyter/notebook/issues/3691#issuecomment-398027236",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3691",
    "id": 398027236,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODAyNzIzNg==",
    "user": {
      "login": "sebma",
      "id": 4569306,
      "node_id": "MDQ6VXNlcjQ1NjkzMDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4569306?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sebma",
      "html_url": "https://github.com/sebma",
      "followers_url": "https://api.github.com/users/sebma/followers",
      "following_url": "https://api.github.com/users/sebma/following{/other_user}",
      "gists_url": "https://api.github.com/users/sebma/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sebma/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sebma/subscriptions",
      "organizations_url": "https://api.github.com/users/sebma/orgs",
      "repos_url": "https://api.github.com/users/sebma/repos",
      "events_url": "https://api.github.com/users/sebma/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sebma/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-18T11:44:22Z",
    "updated_at": "2018-06-18T11:44:50Z",
    "author_association": "NONE",
    "body": "@takluyver Thanks, for the tip !\r\n\r\nI'm a little confused, why are the config files shared across `~/.jupyter` and `~/.ipython` subdirectories ?\r\n\r\nIs this because IPython is the Jupyter kernel for Python language ?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/398117735",
    "html_url": "https://github.com/jupyter/notebook/issues/3691#issuecomment-398117735",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3691",
    "id": 398117735,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODExNzczNQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-18T16:40:12Z",
    "updated_at": "2018-06-18T16:40:12Z",
    "author_association": "MEMBER",
    "body": "Yep. IPython deals with running your Python code, Jupyter provides the notebook interface, including things like saving and loading notebook files.\r\n\r\nSo there's an extra reason that putting it in `jupyter_notebook_config.py` won't work - that code is not even run in your kernel. But even putting it in an IPython config file wouldn't do what you want. You specifically need an IPython *startup* file.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/398118329",
    "html_url": "https://github.com/jupyter/notebook/issues/3691#issuecomment-398118329",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3691",
    "id": 398118329,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5ODExODMyOQ==",
    "user": {
      "login": "sebma",
      "id": 4569306,
      "node_id": "MDQ6VXNlcjQ1NjkzMDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4569306?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sebma",
      "html_url": "https://github.com/sebma",
      "followers_url": "https://api.github.com/users/sebma/followers",
      "following_url": "https://api.github.com/users/sebma/following{/other_user}",
      "gists_url": "https://api.github.com/users/sebma/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sebma/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sebma/subscriptions",
      "organizations_url": "https://api.github.com/users/sebma/orgs",
      "repos_url": "https://api.github.com/users/sebma/repos",
      "events_url": "https://api.github.com/users/sebma/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sebma/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-18T16:42:12Z",
    "updated_at": "2018-06-18T16:42:12Z",
    "author_association": "NONE",
    "body": "@takluyver Thanks :-) ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/416265280",
    "html_url": "https://github.com/jupyter/notebook/issues/3691#issuecomment-416265280",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3691",
    "id": 416265280,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxNjI2NTI4MA==",
    "user": {
      "login": "SabrinaJLi",
      "id": 38417275,
      "node_id": "MDQ6VXNlcjM4NDE3Mjc1",
      "avatar_url": "https://avatars.githubusercontent.com/u/38417275?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SabrinaJLi",
      "html_url": "https://github.com/SabrinaJLi",
      "followers_url": "https://api.github.com/users/SabrinaJLi/followers",
      "following_url": "https://api.github.com/users/SabrinaJLi/following{/other_user}",
      "gists_url": "https://api.github.com/users/SabrinaJLi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SabrinaJLi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SabrinaJLi/subscriptions",
      "organizations_url": "https://api.github.com/users/SabrinaJLi/orgs",
      "repos_url": "https://api.github.com/users/SabrinaJLi/repos",
      "events_url": "https://api.github.com/users/SabrinaJLi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SabrinaJLi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-27T15:27:22Z",
    "updated_at": "2018-08-27T15:27:22Z",
    "author_association": "NONE",
    "body": "Try using “%matplotlib inline”. \r\naccording to IPython [documentation](https://ipython.readthedocs.io/en/stable/interactive/plotting.html): \r\n...\r\n%matplotlib inline\r\nWith this backend, the output of plotting commands is displayed inline within frontends like the Jupyter notebook, directly below the code cell that produced it. The resulting plots will then also be stored in the notebook document.\r\n\r\nThere are some discussions on %matplotlib inline:\r\nhttps://stackoverflow.com/questions/43027980/purpose-of-matplotlib-inline\r\n\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/535764993",
    "html_url": "https://github.com/jupyter/notebook/issues/3691#issuecomment-535764993",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3691",
    "id": 535764993,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNTc2NDk5Mw==",
    "user": {
      "login": "benjimin",
      "id": 12852539,
      "node_id": "MDQ6VXNlcjEyODUyNTM5",
      "avatar_url": "https://avatars.githubusercontent.com/u/12852539?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benjimin",
      "html_url": "https://github.com/benjimin",
      "followers_url": "https://api.github.com/users/benjimin/followers",
      "following_url": "https://api.github.com/users/benjimin/following{/other_user}",
      "gists_url": "https://api.github.com/users/benjimin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benjimin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benjimin/subscriptions",
      "organizations_url": "https://api.github.com/users/benjimin/orgs",
      "repos_url": "https://api.github.com/users/benjimin/repos",
      "events_url": "https://api.github.com/users/benjimin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benjimin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-27T02:55:48Z",
    "updated_at": "2019-09-27T02:57:53Z",
    "author_association": "NONE",
    "body": "@takluyver agree the fault may pertain to the cell where the matplotlib import occurs. \r\n\r\nThis particularly affects libraries that lazily import matplotlib, such as xarray: \r\n```python\r\nIn [1]: import xarray, numpy as np\r\nIn [2]: x = xarray.DataArray(np.random.random((5,5)))\r\nIn [3]: x.plot() # does not work\r\nIn [4]: x.plot() # does work\r\n```\r\nI think this behaviour is counter-intuitive and undesirable.\r\n\r\nHow exactly does the notebook change when matplotlib is imported?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/539711619",
    "html_url": "https://github.com/jupyter/notebook/issues/3691#issuecomment-539711619",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3691",
    "id": 539711619,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzOTcxMTYxOQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-08T21:27:26Z",
    "updated_at": "2019-10-08T21:27:26Z",
    "author_association": "MEMBER",
    "body": "That's unfortunate. I can't really remember the details of what goes on here, but it involves [this code in ipykernel](https://github.com/ipython/ipykernel/blob/3a24c2bcc38b9712bf0df0aa7d8e0ecfdb929526/ipykernel/pylab/backend_inline.py#L151-L167) and [this code in IPython](https://github.com/ipython/ipython/blob/4a2240fb440c497e9e195d9ff43d96973b7ae33f/IPython/core/pylabtools.py#L386-L396).\r\n\r\nCertainly if you fall into the `configure_once` branch, you'll have trouble - that defers setting up the integration until after the cell has finished running, which will be too late for plots generated in that cell.\r\n\r\nThere's a comment there saying that that branch is only needed for Python 2. But it's possible that other changes since that was written mean that branch is used on Python 3 as well.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/541282905",
    "html_url": "https://github.com/jupyter/notebook/issues/3691#issuecomment-541282905",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3691",
    "id": 541282905,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU0MTI4MjkwNQ==",
    "user": {
      "login": "benjimin",
      "id": 12852539,
      "node_id": "MDQ6VXNlcjEyODUyNTM5",
      "avatar_url": "https://avatars.githubusercontent.com/u/12852539?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/benjimin",
      "html_url": "https://github.com/benjimin",
      "followers_url": "https://api.github.com/users/benjimin/followers",
      "following_url": "https://api.github.com/users/benjimin/following{/other_user}",
      "gists_url": "https://api.github.com/users/benjimin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/benjimin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/benjimin/subscriptions",
      "organizations_url": "https://api.github.com/users/benjimin/orgs",
      "repos_url": "https://api.github.com/users/benjimin/repos",
      "events_url": "https://api.github.com/users/benjimin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/benjimin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-10-12T04:16:27Z",
    "updated_at": "2019-10-12T04:16:27Z",
    "author_association": "NONE",
    "body": "If you inspect `<globals>.get_ipython().events.callbacks` you can watch some state changes occurring:\r\n\r\nWithin one cell, the line importing `matplotlib.pyplot` immediately causes `matplotlib.pyplot.install_repl_displayhook.<locals>.post_execute()` and `ipykernel.pylab.backend_inline._enable_matplotlib_integration.<locals>.configure_once(ExecutionResult)` to be scheduled at the conclusion of the cell. \r\n\r\nFor all subsequent cells, the latter callback is replaced by `ipykernel.pylab.backend_inline.flush_figures()`.\r\n\r\n(Seems `post_execute()` rasterises the current figure, then `flush_figures()` displays that image.)\r\n\r\n<hr>\r\n\r\nWhen `ipykernel.pylab.backend_inline` is being imported (by `matplotlib.pyplot`), it runs `_enable_matplotlib_integration`, which tries to set things up* (and critically, to register the `flush_figures()` callback). If that setup fails unexpectedly, it is postponed (by registering `configure_once` which will attempt the same setup again then immediately unregister itself). \r\n\r\nIt seems that the underlying bug relates to circular imports (causing that setup to initially fail). The `configure_once` mechanism is a work-around, to delay execution of setup until after the modules have finished being imported. This work-around is flawed, preventing the first cell from working (because the setup won't register `flush_figures()` until just after the callback list has been already executed for the cell).\r\n\r\n<hr>\r\n\r\nNote that everything works if the imports occur in a different order:\r\n```python\r\nIn [1]: import ipykernel.pylab.backend_inline # import this first\r\n        import matplotlib.pyplot as plt\r\n        plt.plot([1,3,2]) # this works\r\n```\r\n*The setup mentioned earlier involves executing a couple functions in `IPython.core.pylabtools` which in turn try to import and use components of `matplotlib.pyplot` and `ipykernel.pylab.backend_inline`. The complication is that (depending on the order of the top level imports) one or both of those modules will itself be only partially imported at this stage. \r\n\r\nNormally, `ipykernel.pylab.backend_inline` is imported _during_ import of `matplotlib.pyplot` (because the ipython kernel has set an environment variable to configure the default backend for matplotlib to be so). Until this finishes, python does not yet assign the `pyplot` attribute on `matplotlib`, and thus, subroutines trying to reference `pyplot` (by parent attribute) raise exceptions. The code may be more resilient agaist circular imports if  `IPython.core.pylabtools.activate_matplotlib` used the `from matplotlib import pyplot as plt` syntax (and later python versions may also improve the situtation):\r\n\r\n```python\r\nIn [1]: import inspect, IPython.core.pylabtools\r\n        exec(inspect.getsource(IPython.core.pylabtools.activate_matplotlib)\r\n                .replace('import matplotlib.pyplot', 'from matplotlib import pyplot')\r\n                .replace('matplotlib.pyplot', 'pyplot'), \r\n             IPython.core.pylabtools.__dict__) # apply patch\r\n\r\n        import matplotlib.pyplot as plt\r\n        plt.plot([1,3,2]) # this works also, in python 3.6\r\n```\r\n\r\n<hr>\r\n\r\nSo there are a several different ways of fixing our problem. Ideally, the imports should be fixed so the workaround isn't needed (ideally by eliminating circular imports and/or by not executing functions during import, but possibly just by using more resilient import syntaxes). Alternatively, `flush_figures` could be registered earlier (by `_enable_matplotlib_integration`), or be invoked invoked directly from `configure_once`, or the order of callback evaluation be changed so that `flush_figures` doesn't miss its turn (say by appending `flush_figures` to the same callback list as `configure_once`, or by executing the `post_run_cell` list prior to the `post_execute` list). \r\n\r\n```python\r\nIn [1]: import matplotlib.pyplot as plt\r\n        get_ipython().events.trigger('post_run_cell') # call configure_once() earlier\r\n        plt.plot([1,3,2]) # also works\r\n```\r\n\r\nI'll see about putting together a PR or two..",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/614968630",
    "html_url": "https://github.com/jupyter/notebook/issues/3691#issuecomment-614968630",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3691",
    "id": 614968630,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNDk2ODYzMA==",
    "user": {
      "login": "kevin-bates",
      "id": 22599560,
      "node_id": "MDQ6VXNlcjIyNTk5NTYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/22599560?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevin-bates",
      "html_url": "https://github.com/kevin-bates",
      "followers_url": "https://api.github.com/users/kevin-bates/followers",
      "following_url": "https://api.github.com/users/kevin-bates/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevin-bates/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevin-bates/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevin-bates/subscriptions",
      "organizations_url": "https://api.github.com/users/kevin-bates/orgs",
      "repos_url": "https://api.github.com/users/kevin-bates/repos",
      "events_url": "https://api.github.com/users/kevin-bates/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevin-bates/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-17T00:34:27Z",
    "updated_at": "2020-04-17T00:34:27Z",
    "author_association": "MEMBER",
    "body": "@benjimin's fix in IPython >= 7.10.0 appears to resolve the issue - so I'm closing it.  Thanks @benjimin!\r\n",
    "performed_via_github_app": null
  }
]
