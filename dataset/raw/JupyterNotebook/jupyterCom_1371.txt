[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/211827226",
    "html_url": "https://github.com/jupyter/notebook/issues/1371#issuecomment-211827226",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1371",
    "id": 211827226,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTgyNzIyNg==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-19T09:40:46Z",
    "updated_at": "2016-04-19T09:40:46Z",
    "author_association": "MEMBER",
    "body": "We've been planning to do this for some time, but hoping for an _official_ extension syntax from CommonMark as the impetus for doing so, rather than the de facto extensions where everybody defines their own markdown dialect, like markdown-it. Right now, markdown-it can _either_ implement CommonMark or have extensions, but the two are mutually exclusive.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/212519909",
    "html_url": "https://github.com/jupyter/notebook/issues/1371#issuecomment-212519909",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1371",
    "id": 212519909,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjUxOTkwOQ==",
    "user": {
      "login": "mgeier",
      "id": 705404,
      "node_id": "MDQ6VXNlcjcwNTQwNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/705404?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mgeier",
      "html_url": "https://github.com/mgeier",
      "followers_url": "https://api.github.com/users/mgeier/followers",
      "following_url": "https://api.github.com/users/mgeier/following{/other_user}",
      "gists_url": "https://api.github.com/users/mgeier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mgeier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mgeier/subscriptions",
      "organizations_url": "https://api.github.com/users/mgeier/orgs",
      "repos_url": "https://api.github.com/users/mgeier/repos",
      "events_url": "https://api.github.com/users/mgeier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mgeier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-20T17:15:53Z",
    "updated_at": "2016-04-20T17:15:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "The existence of the CommonMark spec doesn't preclude extensions.\n\nCurrently, the CommonMark people are working on finalizing the spec for the \"basic\" stuff and they don't have time for thinking about extensions, but that doesn't mean that the spec forbids extensions.\nIncidentally, the very [document holding the CommonMark spec](https://github.com/jgm/CommonMark/blob/master/spec.txt) uses an ad-hoc extension for showing Markdown/HTML examples. And that's perfectly fine. There will always be extensions!\n\nAfter the \"basic\" CommonMark spec is completed (it is unclear to me when this is going to happen ... beginning of 2016?), there might be some work on \"official\" extensions (or not). If an \"official\" math extension is made, I'm quite sure it will be the same syntax as we are already using and as pandoc is using since a very long time ago (and probably many other implementations, too).\nTherefore, regardless if there will be an \"official\" math extension or not, we'll be on the safe side if we just keep using what we are already using.\n\nLong story short: we don't have to feel dirty just because we use a (not yet and probably never \"officially authorized\") extension to CommonMark.\n\nAbout an \"official extension syntax\": Do you mean the proposed block syntax with colons? Something like:\n\n```\n::: {some strange attributes}\nI'm text in an\nextension block!\n:::\n```\n\nSure, such a thing might be officially supported in some time (in a few years), but I urge you not to force Jupyter Notebook users to use this syntax for block equations. This would be a huge step backwards for the ease-of-use of the Notebook (not to mention it would break all existing notebooks that use block equations).\n\nComing back to markdown-it: they claim \"100% CommonMark support\", the ease of creating extensions doesn't change anything about that. Just because it's harder to make extensions for commonmark.js doesn't mean one of them is more or less CommonMark compliant. But I'm not saying that markdown-it is the best, if you prefer we can also use the reference implementation commonmark.js (or something entirely different), but then we'll have to use the same hacky work-around as we are using now to get the math extension working. OTOH, it seems that commonmark.js is currently more active than markdown-it.\n\nI don't really care which library gets selected, I'm just suggesting to change to CommonMark without further delay (and of course keeping the math extension that's currently in use).\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/212531529",
    "html_url": "https://github.com/jupyter/notebook/issues/1371#issuecomment-212531529",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1371",
    "id": 212531529,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjUzMTUyOQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-20T17:44:00Z",
    "updated_at": "2016-04-20T17:44:00Z",
    "author_association": "MEMBER",
    "body": "The whole purpose of producing a common specification, though, is that Markdown can be interoperable, and not dependent on whatever ad-hoc extensions are implemented in particular libraries and not properly specified. So again, we should wait for CommonMark to specify some kind of syntax for extensions to use, analogous to roles and directives in rst. I know that's annoying, but if it increases the pressure on CommonMark to do that, everyone wins eventually.\n\nWe will probably never force people to switch to the new extension syntax for equations, because that would break existing content. But everything else should go through one extension syntax, even if that's a bit ugly, rather than trying to pick special symbols for each thing to make it concise.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/212789758",
    "html_url": "https://github.com/jupyter/notebook/issues/1371#issuecomment-212789758",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1371",
    "id": 212789758,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjc4OTc1OA==",
    "user": {
      "login": "mgeier",
      "id": 705404,
      "node_id": "MDQ6VXNlcjcwNTQwNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/705404?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mgeier",
      "html_url": "https://github.com/mgeier",
      "followers_url": "https://api.github.com/users/mgeier/followers",
      "following_url": "https://api.github.com/users/mgeier/following{/other_user}",
      "gists_url": "https://api.github.com/users/mgeier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mgeier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mgeier/subscriptions",
      "organizations_url": "https://api.github.com/users/mgeier/orgs",
      "repos_url": "https://api.github.com/users/mgeier/repos",
      "events_url": "https://api.github.com/users/mgeier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mgeier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-21T07:43:26Z",
    "updated_at": "2016-04-21T07:43:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "I'm not suggesting to add new syntax!\n\nI know we were talking about new syntax in #1292, but that's a different issue!\n\nI'm \"just\" suggesting to switch to CommonMark. And the sooner we do that, the better. Deliberately delaying that doesn't help anyone.\n\nDo you not want to switch to CommonMark?\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/212901437",
    "html_url": "https://github.com/jupyter/notebook/issues/1371#issuecomment-212901437",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1371",
    "id": 212901437,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjkwMTQzNw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-21T12:42:02Z",
    "updated_at": "2016-04-21T12:42:02Z",
    "author_association": "MEMBER",
    "body": "- Does it break rendering of any content we currently have? E.g. an upgrade of marked at one point stopped `#header` working, which broke some notebooks that previously worked. This could potentially break much more.\n- Does it make it any harder (or easier) to do the fiddling we currently do with math expressions. I suspect it needn't change, because we do them quite separately from the parser, if I recall correctly.\n\nIn principle, I'm fine with switching to Commonmark, but I don't see much advantage to it at this point. As Min mentioned, if there was an official syntax for extension points, that would be a compelling argument to change.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/212935516",
    "html_url": "https://github.com/jupyter/notebook/issues/1371#issuecomment-212935516",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1371",
    "id": 212935516,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMjkzNTUxNg==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-21T14:07:05Z",
    "updated_at": "2016-04-21T14:07:05Z",
    "author_association": "MEMBER",
    "body": "Thank you for raising this up @mgeier. I'm a fan of commonmark and have been adapting projects to use commonmark compatible parsers and renderers. In particular, commonmark.js or remark. In the notebook we've been using a markdown implementation that _is_ bundled with \"extensions\". For instance, GitHub flavored markdown is supported in the notebook by marked.\n\nAs in agreement as I am with switching to commonmark, there are several costs (the magnitude of which is unknown):\n- How difficult is adapting the MathJax/LaTeX handling to the new parser?\n- What extensions have we been implicitly supporting?\n- How many notebooks will \"break\" after a switch to another parser?\n- How does the parser handle embedded HTML?\n\nThat's likely most of the hesitation to driving forward. People are in agreement that someday we should. It's the maintenance burden we perceive, relative to finishing other work on the project. If you start the investigation @mgeier, with a PR in earnest, we'll be better able to evaluate the switch.\n\nI do agree that making our own markdown cells adhere to a well specced format is paramount to saying that we have a well specced notebook format. Same goes for embedded LaTeX/MathJax.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/213390229",
    "html_url": "https://github.com/jupyter/notebook/issues/1371#issuecomment-213390229",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1371",
    "id": 213390229,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMzM5MDIyOQ==",
    "user": {
      "login": "mgeier",
      "id": 705404,
      "node_id": "MDQ6VXNlcjcwNTQwNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/705404?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mgeier",
      "html_url": "https://github.com/mgeier",
      "followers_url": "https://api.github.com/users/mgeier/followers",
      "following_url": "https://api.github.com/users/mgeier/following{/other_user}",
      "gists_url": "https://api.github.com/users/mgeier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mgeier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mgeier/subscriptions",
      "organizations_url": "https://api.github.com/users/mgeier/orgs",
      "repos_url": "https://api.github.com/users/mgeier/repos",
      "events_url": "https://api.github.com/users/mgeier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mgeier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-22T11:44:28Z",
    "updated_at": "2016-04-22T11:44:28Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks that we can now finally talk about the actual issue instead of bashing CommonMark extensions!\n\nI think most of the concerns raised above reduce to those two points:\n1. cost of implementation (be it proper extensions or ugly work-around hacks)\n2. breakage of existing notebooks\n\nAlthough the magnitude of both is unknown at this time (as @rgbkrk mentioned), I think it's possible to make some predictions:\n- The cost of implementation will not change if we wait\n- If we change later, more notebooks will break (simply because more notebooks will be created in the meantime)\n\nFor me, this is an absolutely compelling argument to switch to CommonMark as soon as possible!\n\nAre there any objections in general?\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/213422507",
    "html_url": "https://github.com/jupyter/notebook/issues/1371#issuecomment-213422507",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1371",
    "id": 213422507,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMzQyMjUwNw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-22T13:08:26Z",
    "updated_at": "2016-04-22T13:08:26Z",
    "author_association": "MEMBER",
    "body": "> If we change later, more notebooks will break\n\nThe flip side is that when you change something that's going to break some things, it's much easier if there's a compelling advantage that comes with the changes. The 'eat your vegetables' approach - do this because it's the right thing to do, doesn't make us many friends.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/213438667",
    "html_url": "https://github.com/jupyter/notebook/issues/1371#issuecomment-213438667",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1371",
    "id": 213438667,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMzQzODY2Nw==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-22T13:55:07Z",
    "updated_at": "2016-04-22T13:55:07Z",
    "author_association": "MEMBER",
    "body": "The main argument now is that if CommonMark extensions do happen and we adopt them, then we would be breaking notebooks twice instead of once. To be clear, adopting markdown-it + extensions _is not_ adopting CommonMark, it is adopting yet another markdown dialect defined by a single implementation. That's not to say that I'm opposed to adopting markdown-it, but doing so should mean that we are giving up on the prospect of actual CommonMark extensions in the vaguely near future. Of course, if we stick with CommonMark-derived implementations (as we probably should), the domain of those incompatibilities ought to be confined to the areas affected by extensions, and not basic things like spaces in/around headings, like we've seen in the past.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/213757711",
    "html_url": "https://github.com/jupyter/notebook/issues/1371#issuecomment-213757711",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1371",
    "id": 213757711,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMzc1NzcxMQ==",
    "user": {
      "login": "mgeier",
      "id": 705404,
      "node_id": "MDQ6VXNlcjcwNTQwNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/705404?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mgeier",
      "html_url": "https://github.com/mgeier",
      "followers_url": "https://api.github.com/users/mgeier/followers",
      "following_url": "https://api.github.com/users/mgeier/following{/other_user}",
      "gists_url": "https://api.github.com/users/mgeier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mgeier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mgeier/subscriptions",
      "organizations_url": "https://api.github.com/users/mgeier/orgs",
      "repos_url": "https://api.github.com/users/mgeier/repos",
      "events_url": "https://api.github.com/users/mgeier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mgeier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-23T15:23:55Z",
    "updated_at": "2016-04-23T15:23:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "@takluyver Do you want to switch to CommonMark or not?\nIf yes, your argument doesn't make any difference if we switch now or later.\nIf no, that's a different story ...\n\nI think switching to CommonMark is enough compelling advantage on its own, we don't need anything else to \"sell\" it. Also, most users won't even see a difference.\n\n@minrk wrote:\n\n> ... if CommonMark extensions do happen and we adopt them, then we would be breaking notebooks twice instead of once.\n\nI don't get it.\nIf we switch now to CommonMark, we should try that the \"extensions\" we were using before don't change their behavior too much. This way, only \"basic\" CommonMark features will break.\nIf there are ever relevant \"official\" extensions (like inline math, block math, tables) and we change to them, there will be possible breakage there.\nBut a single spot will break at most once.\n\nAnd of course there will be breakage if the CommonMark spec changes, which hopefully will happen extremely seldom.\n\nBut really, all this won't be such a big deal. Only some extreme cases will break when switching to CommonMark. And I'm quite sure that if there will ever be a LaTeX-math extension, it will look very similar to what we are using now (i.e. what is used in pandoc).\nI'm not so sure about tables, but I also hope that there won't be too much breakage.\n\n> adopting markdown-it + extensions _is not_ adopting CommonMark, it is adopting yet another markdown dialect defined by a single implementation\n\nTBH, I don't care what JavaScript library will be used, I don't have experience with any of them. I was just mentioning markdown-it because I found it by a quick web search and it seemed to be the only JavaScript library available that provides an API for syntax extensions (and many existing extensions using this API), all other libraries provide \"only\" an API for AST transformations and custom writers. But since the ugly hack for math blocks is already in place, that's probably not such a big problem. The only thing that may be problematic is the implementation of tables, which are not (and won't be) part of \"core\" CommonMark.\n\nmarkdown-it claims to follow the CommonMark spec, so if they are not lying, it _would be_ adopting CommonMark. The existence or non-existence of extensions doesn't change anything about that.\n\n> doing so should mean that we are giving up on the prospect of actual CommonMark extensions in the vaguely near future\n\nAs I said above, potential \"official\" extensions for LaTeX math and tables will very likely be very close to what we're using now. They will probably be less restrictive, but this wouldn't be a backwards-compatibility problem.\n\n> if we stick with CommonMark-derived implementations\n\nI'm not quite sure what you mean by that.\nDo you mean implementations that pass the test suite provided by https://github.com/jgm/CommonMark?\nIf yes, I agree, whatever library we choose should pass all those tests.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/213767713",
    "html_url": "https://github.com/jupyter/notebook/issues/1371#issuecomment-213767713",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1371",
    "id": 213767713,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMzc2NzcxMw==",
    "user": {
      "login": "willingc",
      "id": 2680980,
      "node_id": "MDQ6VXNlcjI2ODA5ODA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2680980?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/willingc",
      "html_url": "https://github.com/willingc",
      "followers_url": "https://api.github.com/users/willingc/followers",
      "following_url": "https://api.github.com/users/willingc/following{/other_user}",
      "gists_url": "https://api.github.com/users/willingc/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/willingc/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/willingc/subscriptions",
      "organizations_url": "https://api.github.com/users/willingc/orgs",
      "repos_url": "https://api.github.com/users/willingc/repos",
      "events_url": "https://api.github.com/users/willingc/events{/privacy}",
      "received_events_url": "https://api.github.com/users/willingc/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-23T15:47:50Z",
    "updated_at": "2016-04-23T15:47:50Z",
    "author_association": "MEMBER",
    "body": "@mgeier Historically, the Jupyter team has been very committed to providing installed users, even those that may be working with edge use cases, backward compatibility and minimal breakage when making changes to the code base.\n\nBreakage now, or in the future, is still breakage for the end user and their organization. As for the implementation costs, there are a number of variables (developer time, support for users experiencing breakage, resource availability within the larger project scope, etc.) that make it difficult to prove with a high degree of certainty that implementing changes now is preferable to waiting.\n\nOverall, I believe that @minrk and @takluyver may simply be saying that their preference is to err on the side of caution when it comes to impacting our end users. \n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/219213743",
    "html_url": "https://github.com/jupyter/notebook/issues/1371#issuecomment-219213743",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1371",
    "id": 219213743,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxOTIxMzc0Mw==",
    "user": {
      "login": "mgeier",
      "id": 705404,
      "node_id": "MDQ6VXNlcjcwNTQwNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/705404?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mgeier",
      "html_url": "https://github.com/mgeier",
      "followers_url": "https://api.github.com/users/mgeier/followers",
      "following_url": "https://api.github.com/users/mgeier/following{/other_user}",
      "gists_url": "https://api.github.com/users/mgeier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mgeier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mgeier/subscriptions",
      "organizations_url": "https://api.github.com/users/mgeier/orgs",
      "repos_url": "https://api.github.com/users/mgeier/repos",
      "events_url": "https://api.github.com/users/mgeier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mgeier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-14T10:48:26Z",
    "updated_at": "2016-05-14T10:48:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "Just a little update: I haven't found an extensible CommonMark implementation for Python, which I would need for `nbsphinx` (and which would be needed for `nbconvert`, too).\nI hope an implementation will turn up at some point, if not, I guess I'll have to do it ...\n\nUntil then, we can also wait with changing the JavaScript implementation.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/232102750",
    "html_url": "https://github.com/jupyter/notebook/issues/1371#issuecomment-232102750",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1371",
    "id": 232102750,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzMjEwMjc1MA==",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-07-12T16:35:38Z",
    "updated_at": "2016-07-12T16:35:38Z",
    "author_association": "MEMBER",
    "body": "Another argument for switching from marked - the last commit to master was about a year ago.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/425696316",
    "html_url": "https://github.com/jupyter/notebook/issues/1371#issuecomment-425696316",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1371",
    "id": 425696316,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNTY5NjMxNg==",
    "user": {
      "login": "gazzar",
      "id": 131836,
      "node_id": "MDQ6VXNlcjEzMTgzNg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/131836?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gazzar",
      "html_url": "https://github.com/gazzar",
      "followers_url": "https://api.github.com/users/gazzar/followers",
      "following_url": "https://api.github.com/users/gazzar/following{/other_user}",
      "gists_url": "https://api.github.com/users/gazzar/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gazzar/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gazzar/subscriptions",
      "organizations_url": "https://api.github.com/users/gazzar/orgs",
      "repos_url": "https://api.github.com/users/gazzar/repos",
      "events_url": "https://api.github.com/users/gazzar/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gazzar/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-30T05:40:35Z",
    "updated_at": "2018-09-30T05:40:47Z",
    "author_association": "NONE",
    "body": "@mgeier Just an update that there is now an MIT-licensed \"fast, extensible and spec-compliant Markdown parser in pure Python\" called mistletoe\r\nhttps://github.com/miyuchina/mistletoe",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/427098552",
    "html_url": "https://github.com/jupyter/notebook/issues/1371#issuecomment-427098552",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1371",
    "id": 427098552,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyNzA5ODU1Mg==",
    "user": {
      "login": "mgeier",
      "id": 705404,
      "node_id": "MDQ6VXNlcjcwNTQwNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/705404?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mgeier",
      "html_url": "https://github.com/mgeier",
      "followers_url": "https://api.github.com/users/mgeier/followers",
      "following_url": "https://api.github.com/users/mgeier/following{/other_user}",
      "gists_url": "https://api.github.com/users/mgeier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mgeier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mgeier/subscriptions",
      "organizations_url": "https://api.github.com/users/mgeier/orgs",
      "repos_url": "https://api.github.com/users/mgeier/repos",
      "events_url": "https://api.github.com/users/mgeier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mgeier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-10-04T17:13:32Z",
    "updated_at": "2018-10-04T17:13:32Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks for the hint, @gazzar! It indeed looks like it has an API for syntax extensions. Now I don't have an excuse anymore ...",
    "performed_via_github_app": null
  }
]
