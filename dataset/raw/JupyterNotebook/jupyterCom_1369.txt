[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/211829024",
    "html_url": "https://github.com/jupyter/notebook/issues/1369#issuecomment-211829024",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1369",
    "id": 211829024,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxMTgyOTAyNA==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-04-19T09:45:14Z",
    "updated_at": "2016-04-19T09:45:14Z",
    "author_association": "MEMBER",
    "body": "The kernel won't be involved in this, it's all up to the browser. Rendering markdown only puts the `img` element on the page. It's up to the browser and its caching to determine whether the file should be redownloaded or not. Refreshing the page may be required, but restarting the kernel never will be. I'm not sure if there is a way to put a reference to the same image URL on the same page multiple times and have it re-fetch each time. It's possible our cache headers set by the server when requesting the image could accomplish this.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/217976038",
    "html_url": "https://github.com/jupyter/notebook/issues/1369#issuecomment-217976038",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1369",
    "id": 217976038,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIxNzk3NjAzOA==",
    "user": {
      "login": "mccullerlp",
      "id": 413939,
      "node_id": "MDQ6VXNlcjQxMzkzOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/413939?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mccullerlp",
      "html_url": "https://github.com/mccullerlp",
      "followers_url": "https://api.github.com/users/mccullerlp/followers",
      "following_url": "https://api.github.com/users/mccullerlp/following{/other_user}",
      "gists_url": "https://api.github.com/users/mccullerlp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mccullerlp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mccullerlp/subscriptions",
      "organizations_url": "https://api.github.com/users/mccullerlp/orgs",
      "repos_url": "https://api.github.com/users/mccullerlp/repos",
      "events_url": "https://api.github.com/users/mccullerlp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mccullerlp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-05-09T20:15:03Z",
    "updated_at": "2016-05-09T20:15:03Z",
    "author_association": "NONE",
    "body": "I also ran into this issue as I prefer to render matplotlib images and import them into the notebook with `<img src=\"...\">` tags.\n\nThere is a solution to adjust the caching. In this case the server is set-up to prevent caching for files with arguments to their http request. \n\nIn notebook.files.handlers.py you can make the edit:\n\n``` python\n        if self.get_argument(\"download\", False):\n            self.set_header('Content-Disposition','attachment; filename=\"%s\"' % name)\n\n        if \"?\" in name:\n            self.set_header(\"Cache-Control\", \"no-cache; no-store\")\n\n        # get mimetype from filename\n```\n\nnow access images which you want to force refreshing with\n\nas `![\"title\"](image.png?arg)` or `<img src=\"image.png?arg\">`\n\nand the webserver will prevent caching.\n\nIn general, the browser should prevent caching if you vary the arguments anyway, but I was finding that firefox at least would still cache them, so I added this fix. I was actually going to submit my own bug report to suggest the addition, but here is a good place.\n\nIf this is a reasonable change, It would be nice to insert it to the project.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/225149799",
    "html_url": "https://github.com/jupyter/notebook/issues/1369#issuecomment-225149799",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1369",
    "id": 225149799,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTE0OTc5OQ==",
    "user": {
      "login": "mobcdi",
      "id": 3854701,
      "node_id": "MDQ6VXNlcjM4NTQ3MDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3854701?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mobcdi",
      "html_url": "https://github.com/mobcdi",
      "followers_url": "https://api.github.com/users/mobcdi/followers",
      "following_url": "https://api.github.com/users/mobcdi/following{/other_user}",
      "gists_url": "https://api.github.com/users/mobcdi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mobcdi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mobcdi/subscriptions",
      "organizations_url": "https://api.github.com/users/mobcdi/orgs",
      "repos_url": "https://api.github.com/users/mobcdi/repos",
      "events_url": "https://api.github.com/users/mobcdi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mobcdi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-10T10:35:13Z",
    "updated_at": "2016-06-10T10:35:13Z",
    "author_association": "NONE",
    "body": "Since you made the change have you noticed any adverse affects in it or other workbooks?\nRefreshing the webpage via the browser appears to work for me without needing to terminate the kernel but maybe it would be nice to be able to indicate cells as not to cache if that were possible\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/227033259",
    "html_url": "https://github.com/jupyter/notebook/issues/1369#issuecomment-227033259",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1369",
    "id": 227033259,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzAzMzI1OQ==",
    "user": {
      "login": "mccullerlp",
      "id": 413939,
      "node_id": "MDQ6VXNlcjQxMzkzOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/413939?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mccullerlp",
      "html_url": "https://github.com/mccullerlp",
      "followers_url": "https://api.github.com/users/mccullerlp/followers",
      "following_url": "https://api.github.com/users/mccullerlp/following{/other_user}",
      "gists_url": "https://api.github.com/users/mccullerlp/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mccullerlp/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mccullerlp/subscriptions",
      "organizations_url": "https://api.github.com/users/mccullerlp/orgs",
      "repos_url": "https://api.github.com/users/mccullerlp/repos",
      "events_url": "https://api.github.com/users/mccullerlp/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mccullerlp/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-20T01:25:31Z",
    "updated_at": "2016-06-20T01:25:31Z",
    "author_association": "NONE",
    "body": "I have not noticed any issues so far, though I'll note that I am using\nnewest Firefox and these issues tend to occur in less compliant browsers.\n\nI agree that some granularity would be nice. Ideally you could hook it into\nthe \"display\" functions to have action not just for the json sent to the\nclients but for the server as well. There would have to be additional\nmetadata in the stored format for this to work and so would be a pretty\nnontrivial change.\n\nI suspect actually that having the image loaded by a json scriptlet that\ninjects the image into the DOM would work as well, (and give some options\nfor bypassing local caching), but that was beyond the scope of this quick\nfix.\n\nOn Fri, Jun 10, 2016 at 6:35 AM, mobcdi notifications@github.com wrote:\n\n> Since you made the change have you noticed any adverse affects in it or\n> other workbooks?\n> Refreshing the webpage via the browser appears to work for me without\n> needing to terminate the kernel but maybe it would be nice to be able to\n> indicate cells as not to cache if that were possible\n> \n> â€”\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> https://github.com/jupyter/notebook/issues/1369#issuecomment-225149799,\n> or mute the thread\n> https://github.com/notifications/unsubscribe/AAZQ850PJKtz-dRVjAc5bD8hCaO7yALjks5qKT3mgaJpZM4IKHkp\n> .\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/376227660",
    "html_url": "https://github.com/jupyter/notebook/issues/1369#issuecomment-376227660",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1369",
    "id": 376227660,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3NjIyNzY2MA==",
    "user": {
      "login": "OliverEvans96",
      "id": 15915043,
      "node_id": "MDQ6VXNlcjE1OTE1MDQz",
      "avatar_url": "https://avatars.githubusercontent.com/u/15915043?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/OliverEvans96",
      "html_url": "https://github.com/OliverEvans96",
      "followers_url": "https://api.github.com/users/OliverEvans96/followers",
      "following_url": "https://api.github.com/users/OliverEvans96/following{/other_user}",
      "gists_url": "https://api.github.com/users/OliverEvans96/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/OliverEvans96/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/OliverEvans96/subscriptions",
      "organizations_url": "https://api.github.com/users/OliverEvans96/orgs",
      "repos_url": "https://api.github.com/users/OliverEvans96/repos",
      "events_url": "https://api.github.com/users/OliverEvans96/events{/privacy}",
      "received_events_url": "https://api.github.com/users/OliverEvans96/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-03-26T16:29:03Z",
    "updated_at": "2018-03-26T16:29:39Z",
    "author_association": "NONE",
    "body": "Any plans to implement cache busting in the classic notebook? Ping @gnestor? As @ian-r-rose pointed out in JuliaPlots/Plots.jl#1447, it makes sense for it to be the responsibility of the frontend, and is being done in Jupyter Lab.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/452944163",
    "html_url": "https://github.com/jupyter/notebook/issues/1369#issuecomment-452944163",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1369",
    "id": 452944163,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1Mjk0NDE2Mw==",
    "user": {
      "login": "ImportanceOfBeingErnest",
      "id": 23121882,
      "node_id": "MDQ6VXNlcjIzMTIxODgy",
      "avatar_url": "https://avatars.githubusercontent.com/u/23121882?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ImportanceOfBeingErnest",
      "html_url": "https://github.com/ImportanceOfBeingErnest",
      "followers_url": "https://api.github.com/users/ImportanceOfBeingErnest/followers",
      "following_url": "https://api.github.com/users/ImportanceOfBeingErnest/following{/other_user}",
      "gists_url": "https://api.github.com/users/ImportanceOfBeingErnest/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ImportanceOfBeingErnest/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ImportanceOfBeingErnest/subscriptions",
      "organizations_url": "https://api.github.com/users/ImportanceOfBeingErnest/orgs",
      "repos_url": "https://api.github.com/users/ImportanceOfBeingErnest/repos",
      "events_url": "https://api.github.com/users/ImportanceOfBeingErnest/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ImportanceOfBeingErnest/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-10T02:11:30Z",
    "updated_at": "2019-01-10T02:11:30Z",
    "author_association": "NONE",
    "body": "I noticed the same issue when doing something along the lines of \r\n\r\n     display(SVG(data=buffer.get_value()))\r\n\r\nI think at least in the case of IPython's own display methods, there should be an option to prevent caching.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/453183849",
    "html_url": "https://github.com/jupyter/notebook/issues/1369#issuecomment-453183849",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1369",
    "id": 453183849,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MzE4Mzg0OQ==",
    "user": {
      "login": "gnestor",
      "id": 512354,
      "node_id": "MDQ6VXNlcjUxMjM1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/512354?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnestor",
      "html_url": "https://github.com/gnestor",
      "followers_url": "https://api.github.com/users/gnestor/followers",
      "following_url": "https://api.github.com/users/gnestor/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnestor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnestor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnestor/subscriptions",
      "organizations_url": "https://api.github.com/users/gnestor/orgs",
      "repos_url": "https://api.github.com/users/gnestor/repos",
      "events_url": "https://api.github.com/users/gnestor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnestor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-10T17:32:18Z",
    "updated_at": "2019-01-10T17:32:18Z",
    "author_association": "CONTRIBUTOR",
    "body": "AFAIK, the browser is caching the image (not ipython or anything Jupyter-related). The trick for invalidating an image cache is to add a query string to the URL:\r\n\r\n```html\r\n<img src=\"image.png?modified=12345678\" />\r\n```\r\n\r\nSource: https://stackoverflow.com/a/321871/2217533\r\n\r\nI haven't tested this using `IPython.display.SVG` or any other ipython display functions...",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/454694541",
    "html_url": "https://github.com/jupyter/notebook/issues/1369#issuecomment-454694541",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1369",
    "id": 454694541,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDY5NDU0MQ==",
    "user": {
      "login": "mkborregaard",
      "id": 8429802,
      "node_id": "MDQ6VXNlcjg0Mjk4MDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8429802?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mkborregaard",
      "html_url": "https://github.com/mkborregaard",
      "followers_url": "https://api.github.com/users/mkborregaard/followers",
      "following_url": "https://api.github.com/users/mkborregaard/following{/other_user}",
      "gists_url": "https://api.github.com/users/mkborregaard/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mkborregaard/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mkborregaard/subscriptions",
      "organizations_url": "https://api.github.com/users/mkborregaard/orgs",
      "repos_url": "https://api.github.com/users/mkborregaard/repos",
      "events_url": "https://api.github.com/users/mkborregaard/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mkborregaard/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-16T08:33:26Z",
    "updated_at": "2019-01-16T08:33:26Z",
    "author_association": "NONE",
    "body": "Is there a planned fix on this? It's causing problems for Julia users: https://github.com/JuliaPlots/Plots.jl/pull/1448",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/454707514",
    "html_url": "https://github.com/jupyter/notebook/issues/1369#issuecomment-454707514",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1369",
    "id": 454707514,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NDcwNzUxNA==",
    "user": {
      "login": "gnestor",
      "id": 512354,
      "node_id": "MDQ6VXNlcjUxMjM1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/512354?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnestor",
      "html_url": "https://github.com/gnestor",
      "followers_url": "https://api.github.com/users/gnestor/followers",
      "following_url": "https://api.github.com/users/gnestor/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnestor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnestor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnestor/subscriptions",
      "organizations_url": "https://api.github.com/users/gnestor/orgs",
      "repos_url": "https://api.github.com/users/gnestor/repos",
      "events_url": "https://api.github.com/users/gnestor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnestor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-16T09:17:36Z",
    "updated_at": "2019-01-16T09:17:36Z",
    "author_association": "CONTRIBUTOR",
    "body": "I just commented at https://github.com/JuliaPlots/Plots.jl/issues/1447#issuecomment-454707443",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/675790408",
    "html_url": "https://github.com/jupyter/notebook/issues/1369#issuecomment-675790408",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1369",
    "id": 675790408,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NTc5MDQwOA==",
    "user": {
      "login": "merriam",
      "id": 159998,
      "node_id": "MDQ6VXNlcjE1OTk5OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/159998?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/merriam",
      "html_url": "https://github.com/merriam",
      "followers_url": "https://api.github.com/users/merriam/followers",
      "following_url": "https://api.github.com/users/merriam/following{/other_user}",
      "gists_url": "https://api.github.com/users/merriam/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/merriam/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/merriam/subscriptions",
      "organizations_url": "https://api.github.com/users/merriam/orgs",
      "repos_url": "https://api.github.com/users/merriam/repos",
      "events_url": "https://api.github.com/users/merriam/events{/privacy}",
      "received_events_url": "https://api.github.com/users/merriam/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-19T00:54:40Z",
    "updated_at": "2020-08-19T00:54:40Z",
    "author_association": "NONE",
    "body": "Sorry if this is stale bug; I just ran into it.\r\n\r\nShouldn't it be possible to modify the Jupyter Markdown display to automatically put a nonsense parameter into the URL and update that parameter if and only if the cell is excuted?  That is, `![\"Title\"](image.png)` is quietly transformed to `![\"Title\"](image.png?_ipython_update=20200718165242)`.\r\n\r\nWhat am I misunderstanding?",
    "performed_via_github_app": null
  }
]
