[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/726067963",
    "html_url": "https://github.com/jupyter/notebook/issues/5863#issuecomment-726067963",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5863",
    "id": 726067963,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNjA2Nzk2Mw==",
    "user": {
      "login": "bollwyvl",
      "id": 45380,
      "node_id": "MDQ6VXNlcjQ1Mzgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/45380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bollwyvl",
      "html_url": "https://github.com/bollwyvl",
      "followers_url": "https://api.github.com/users/bollwyvl/followers",
      "following_url": "https://api.github.com/users/bollwyvl/following{/other_user}",
      "gists_url": "https://api.github.com/users/bollwyvl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bollwyvl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bollwyvl/subscriptions",
      "organizations_url": "https://api.github.com/users/bollwyvl/orgs",
      "repos_url": "https://api.github.com/users/bollwyvl/repos",
      "events_url": "https://api.github.com/users/bollwyvl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bollwyvl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-12T13:10:53Z",
    "updated_at": "2020-11-12T13:10:53Z",
    "author_association": "CONTRIBUTOR",
    "body": "this is most likely an ipykernel/ipython issue, not a notebook one, as the\nkernel is running in a different process altogether.  You could try asking\nover there!\n\nhttps://github.com/ipython\n\nAnyhow; Before you import your code, Ipykernel has already started (and\npotentially tweaked) the main asyncio event loop in its process, and its\nlifecycle is tied to that. I see your code is not being awaited. If your\ncode ever stops the loop, it will stop the kernel.... patterns like\n\"run_until_completed\" _might_ work, as might some other mechanism, e.g\nthreads, dask.\n\nHowever, you'd get the same behavior in any other cooperative async\nprogram, e.g. fastapi, django3.\n\nhttps://ipython.readthedocs.io/en/stable/interactive/autoawait.html\n\nUnfortunately: we've probably not going to be able to change anything to\nsuit your specific library.\n\nTo keep on top of this, I recommend checking in and running some demo\nnotebooks during CI with nbconvert:\n\nhttps://nbconvert.readthedocs.io/en/latest/execute_api.html\n\nNotebooks also make great documentation, and your users can use them\nwithout downloading anything on a number of services, like mybinder.org.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/726316617",
    "html_url": "https://github.com/jupyter/notebook/issues/5863#issuecomment-726316617",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5863",
    "id": 726316617,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNjMxNjYxNw==",
    "user": {
      "login": "hanxiao",
      "id": 2041322,
      "node_id": "MDQ6VXNlcjIwNDEzMjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2041322?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hanxiao",
      "html_url": "https://github.com/hanxiao",
      "followers_url": "https://api.github.com/users/hanxiao/followers",
      "following_url": "https://api.github.com/users/hanxiao/following{/other_user}",
      "gists_url": "https://api.github.com/users/hanxiao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hanxiao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hanxiao/subscriptions",
      "organizations_url": "https://api.github.com/users/hanxiao/orgs",
      "repos_url": "https://api.github.com/users/hanxiao/repos",
      "events_url": "https://api.github.com/users/hanxiao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hanxiao/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-12T20:15:59Z",
    "updated_at": "2020-11-12T20:17:49Z",
    "author_association": "NONE",
    "body": "i see! Thank you @bollwyvl for pointing me to the right direction. Now I look carefully at our log again, it does use builtin `asyncio` instead of `uvloop` for the eventloop when running inside Jupyter, whereas it should use `uvloop` by default:\r\n\r\n>        JINA@28923[I]:using <class 'asyncio.unix_events._UnixSelectorEventLoop'> as event loop\r\n\r\nThat should be the indicator of this problem.\r\n\r\nThis link you sent looks pretty relevant: https://ipython.readthedocs.io/en/stable/interactive/autoawait.html \r\nLet me check what we can do here.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/727159957",
    "html_url": "https://github.com/jupyter/notebook/issues/5863#issuecomment-727159957",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5863",
    "id": 727159957,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcyNzE1OTk1Nw==",
    "user": {
      "login": "hanxiao",
      "id": 2041322,
      "node_id": "MDQ6VXNlcjIwNDEzMjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2041322?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hanxiao",
      "html_url": "https://github.com/hanxiao",
      "followers_url": "https://api.github.com/users/hanxiao/followers",
      "following_url": "https://api.github.com/users/hanxiao/following{/other_user}",
      "gists_url": "https://api.github.com/users/hanxiao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hanxiao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hanxiao/subscriptions",
      "organizations_url": "https://api.github.com/users/hanxiao/orgs",
      "repos_url": "https://api.github.com/users/hanxiao/repos",
      "events_url": "https://api.github.com/users/hanxiao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hanxiao/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-14T07:24:19Z",
    "updated_at": "2020-11-14T07:24:47Z",
    "author_association": "NONE",
    "body": "after some dig in, i think this is most related to ipykernel. similar issue reported here https://github.com/ipython/ipykernel/issues/548",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/744413479",
    "html_url": "https://github.com/jupyter/notebook/issues/5863#issuecomment-744413479",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5863",
    "id": 744413479,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc0NDQxMzQ3OQ==",
    "user": {
      "login": "hanxiao",
      "id": 2041322,
      "node_id": "MDQ6VXNlcjIwNDEzMjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2041322?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hanxiao",
      "html_url": "https://github.com/hanxiao",
      "followers_url": "https://api.github.com/users/hanxiao/followers",
      "following_url": "https://api.github.com/users/hanxiao/following{/other_user}",
      "gists_url": "https://api.github.com/users/hanxiao/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hanxiao/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hanxiao/subscriptions",
      "organizations_url": "https://api.github.com/users/hanxiao/orgs",
      "repos_url": "https://api.github.com/users/hanxiao/repos",
      "events_url": "https://api.github.com/users/hanxiao/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hanxiao/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-14T12:42:04Z",
    "updated_at": "2020-12-14T12:42:04Z",
    "author_association": "NONE",
    "body": "We have refactored the asyncio ops (https://github.com/jina-ai/jina/pull/1450/) on our end, this issue is solved. The main idea is, jupyter already has a running eventloop in the beginning. Do not try to terminate/stop that event loop. Use `asyncio.create_task` if possible.\r\n\r\n",
    "performed_via_github_app": null
  }
]
