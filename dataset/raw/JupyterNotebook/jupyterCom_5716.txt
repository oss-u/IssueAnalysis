[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/685117291",
    "html_url": "https://github.com/jupyter/notebook/pull/5716#issuecomment-685117291",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5716",
    "id": 685117291,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NTExNzI5MQ==",
    "user": {
      "login": "abaelhe",
      "id": 1689677,
      "node_id": "MDQ6VXNlcjE2ODk2Nzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1689677?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abaelhe",
      "html_url": "https://github.com/abaelhe",
      "followers_url": "https://api.github.com/users/abaelhe/followers",
      "following_url": "https://api.github.com/users/abaelhe/following{/other_user}",
      "gists_url": "https://api.github.com/users/abaelhe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abaelhe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abaelhe/subscriptions",
      "organizations_url": "https://api.github.com/users/abaelhe/orgs",
      "repos_url": "https://api.github.com/users/abaelhe/repos",
      "events_url": "https://api.github.com/users/abaelhe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abaelhe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-01T20:35:03Z",
    "updated_at": "2020-09-02T03:00:26Z",
    "author_association": "NONE",
    "body": "> Thanks for opening this pull request. I understand why this is being done, although I'm curious how often you're finding the PIDs getting recycled (I know some OSs recycle much more frequently than others) and wonder why you're encountering \"stale\" nbserver files in the first place. How are you terminating the Notebook server normally? Is there some interaction that is using `SIGKILL` instead of `SIGTERM` or a larger problem where the server is improperly terminating? I suppose it takes just one bad apple (i.e., stale PID) and things can go wrong, and, I agree, this approach helps mitigate that - I'm just not sure about the trade-off.\r\n\r\ni am building a Dockerfile on  RedHat's quay.io, to deploy my Cloud based Amazon.com Crawler on Mac/Linux/...;\r\nin the meantime; god or the Operating System selected my dear \"jupyter-notebook\" process;\r\nmeanwhile, i am making my IPython Kernel for Apple Swift Language(Python/C++/Swift/LLVM/CLang/LLDB... );\r\nand i choose this reliable and better design and implement as my first milestone;\r\n\r\n\r\n> \r\n> I've provided a few comments and observations that I hope you find helpful. I didn't comment on the test code and it appears some socket-based tests are failing which rely on the list and stop functionality.\r\n\r\nyour sparks are welcome.\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/685163196",
    "html_url": "https://github.com/jupyter/notebook/pull/5716#issuecomment-685163196",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5716",
    "id": 685163196,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NTE2MzE5Ng==",
    "user": {
      "login": "kevin-bates",
      "id": 22599560,
      "node_id": "MDQ6VXNlcjIyNTk5NTYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/22599560?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevin-bates",
      "html_url": "https://github.com/kevin-bates",
      "followers_url": "https://api.github.com/users/kevin-bates/followers",
      "following_url": "https://api.github.com/users/kevin-bates/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevin-bates/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevin-bates/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevin-bates/subscriptions",
      "organizations_url": "https://api.github.com/users/kevin-bates/orgs",
      "repos_url": "https://api.github.com/users/kevin-bates/repos",
      "events_url": "https://api.github.com/users/kevin-bates/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevin-bates/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-01T22:18:29Z",
    "updated_at": "2020-09-01T22:18:29Z",
    "author_association": "MEMBER",
    "body": "I just now found that Lab returns yet a different title.  This implies any front-end extension will have a different \"title\", making this approach too fragile.  Since those applications could also rely on `jupyter notebook list` and `jupyter notebook stop <port/socket>` functionality, I believe a different approach should be adopted and, again, question the utility when, in practice, PID reuse would be rare in normal circumstances (i.e., when the notebook server is stopped gracefully).",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/685417630",
    "html_url": "https://github.com/jupyter/notebook/pull/5716#issuecomment-685417630",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5716",
    "id": 685417630,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NTQxNzYzMA==",
    "user": {
      "login": "abaelhe",
      "id": 1689677,
      "node_id": "MDQ6VXNlcjE2ODk2Nzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1689677?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abaelhe",
      "html_url": "https://github.com/abaelhe",
      "followers_url": "https://api.github.com/users/abaelhe/followers",
      "following_url": "https://api.github.com/users/abaelhe/following{/other_user}",
      "gists_url": "https://api.github.com/users/abaelhe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abaelhe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abaelhe/subscriptions",
      "organizations_url": "https://api.github.com/users/abaelhe/orgs",
      "repos_url": "https://api.github.com/users/abaelhe/repos",
      "events_url": "https://api.github.com/users/abaelhe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abaelhe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-02T07:44:29Z",
    "updated_at": "2020-09-02T07:44:29Z",
    "author_association": "NONE",
    "body": "reopen",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/686632477",
    "html_url": "https://github.com/jupyter/notebook/pull/5716#issuecomment-686632477",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5716",
    "id": 686632477,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NjYzMjQ3Nw==",
    "user": {
      "login": "abaelhe",
      "id": 1689677,
      "node_id": "MDQ6VXNlcjE2ODk2Nzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1689677?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abaelhe",
      "html_url": "https://github.com/abaelhe",
      "followers_url": "https://api.github.com/users/abaelhe/followers",
      "following_url": "https://api.github.com/users/abaelhe/following{/other_user}",
      "gists_url": "https://api.github.com/users/abaelhe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abaelhe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abaelhe/subscriptions",
      "organizations_url": "https://api.github.com/users/abaelhe/orgs",
      "repos_url": "https://api.github.com/users/abaelhe/repos",
      "events_url": "https://api.github.com/users/abaelhe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abaelhe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-03T17:13:00Z",
    "updated_at": "2020-09-03T17:14:51Z",
    "author_association": "NONE",
    "body": "> > Thanks @abaelhe - this is getting much closer. I'm still slightly concerned about requiring the use of the same notebook version, but I'm not sure that's a very big deal. It's certainly better than terminating the wrong process! To that point, and as I noted in the review, we should probably eliminate the PID-based termination altogether for this PR.\r\n> \r\n> really useful key point;\r\n> i will change the \"/api\" protocol, define a better policy for jupyter determination;\r\n> and i still invite you as the reviewer.\r\n\r\ncommit 978d883c8cc3a9e7410eafd0b1cf0c5f2f558944\r\nAuthor: git <abaelhe@icloud.com>\r\nDate:   Thu Sep 3 21:19:26 2020 +0800\r\n\r\n    Multi-instance and multi-version of Jupyter Notebook\r\n\r\ncommit 07570c67bb6c84194298907aea9253199da2ae3f\r\nAuthor: Abael He <abaelhe@icloud.com>\r\nDate:   Thu Sep 3 08:11:22 2020 +0800\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/686769770",
    "html_url": "https://github.com/jupyter/notebook/pull/5716#issuecomment-686769770",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5716",
    "id": 686769770,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4Njc2OTc3MA==",
    "user": {
      "login": "kevin-bates",
      "id": 22599560,
      "node_id": "MDQ6VXNlcjIyNTk5NTYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/22599560?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevin-bates",
      "html_url": "https://github.com/kevin-bates",
      "followers_url": "https://api.github.com/users/kevin-bates/followers",
      "following_url": "https://api.github.com/users/kevin-bates/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevin-bates/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevin-bates/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevin-bates/subscriptions",
      "organizations_url": "https://api.github.com/users/kevin-bates/orgs",
      "repos_url": "https://api.github.com/users/kevin-bates/repos",
      "events_url": "https://api.github.com/users/kevin-bates/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevin-bates/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-03T21:18:12Z",
    "updated_at": "2020-09-03T21:18:12Z",
    "author_association": "MEMBER",
    "body": "Hi @abaelhe - thank you for your patience.\r\n\r\nI believe this is getting too complicated for the original goals.  \r\n1. List running servers without using an HTTP request instead of PID.\r\n2. Do not terminate any process that may have reused the PID.\r\n\r\nInstead of adding a version to the `/api` request and force upgrades, could we just check that the response succeeded?  I think we can change to use `/api/status` later so useful information can be displayed when listing the servers, but for now, I think we just need to check the success status.\r\n\r\nLet's try to keep these changes as simple as possible.  Does that work for you?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/686887640",
    "html_url": "https://github.com/jupyter/notebook/pull/5716#issuecomment-686887640",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5716",
    "id": 686887640,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4Njg4NzY0MA==",
    "user": {
      "login": "abaelhe",
      "id": 1689677,
      "node_id": "MDQ6VXNlcjE2ODk2Nzc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1689677?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abaelhe",
      "html_url": "https://github.com/abaelhe",
      "followers_url": "https://api.github.com/users/abaelhe/followers",
      "following_url": "https://api.github.com/users/abaelhe/following{/other_user}",
      "gists_url": "https://api.github.com/users/abaelhe/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abaelhe/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abaelhe/subscriptions",
      "organizations_url": "https://api.github.com/users/abaelhe/orgs",
      "repos_url": "https://api.github.com/users/abaelhe/repos",
      "events_url": "https://api.github.com/users/abaelhe/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abaelhe/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-04T03:54:08Z",
    "updated_at": "2020-09-04T12:58:38Z",
    "author_association": "NONE",
    "body": "> Hi @abaelhe - thank you for your patience.\r\n> \r\n> I believe this is getting too complicated for the original goals.\r\n> 1. List running servers without using an HTTP request instead of PID.\r\n\r\nwe are on the way to build a reliable ipython/jupyter; a right way requires a bit efforts;\r\n\r\n> 2. Do not terminate any process that may have reused the PID.\r\n\r\nno matter reused process is processing a billions transaction or just hello world;\r\nwe MUST respect to user's ownner rights.\r\nespecially ipython/jupyter are used to process valuable massive data at most time;\r\n\r\n> \r\n> Instead of adding a version to the `/api` request and force upgrades, could we just check that the response succeeded? I think we can change to use `/api/status` later so useful information can be displayed when listing the servers, but for now, I think we just need to check the success status.\r\n> Let's try to keep these changes as simple as possible. Does that work for you?\r\n\r\nthe response status is success if response.body marked with JUPYTER_NOTEBOOK_TAG;\r\nwe already did that in a reliable and fast \"/api\" way;\r\ni can't achieve it without you.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/687305368",
    "html_url": "https://github.com/jupyter/notebook/pull/5716#issuecomment-687305368",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5716",
    "id": 687305368,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4NzMwNTM2OA==",
    "user": {
      "login": "Zsailer",
      "id": 2791223,
      "node_id": "MDQ6VXNlcjI3OTEyMjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2791223?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zsailer",
      "html_url": "https://github.com/Zsailer",
      "followers_url": "https://api.github.com/users/Zsailer/followers",
      "following_url": "https://api.github.com/users/Zsailer/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zsailer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zsailer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zsailer/subscriptions",
      "organizations_url": "https://api.github.com/users/Zsailer/orgs",
      "repos_url": "https://api.github.com/users/Zsailer/repos",
      "events_url": "https://api.github.com/users/Zsailer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zsailer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-04T18:15:03Z",
    "updated_at": "2020-09-04T18:15:03Z",
    "author_association": "MEMBER",
    "body": "> kernel_request() MUST retrieve Jupyter Notebook identification tag before or after authentication.\r\nand \"api/status\" is an AUTHENTICATED ONLY call.\r\n\r\nAh, I see. You're right. That is an issue. I agree with you, the `/api` endpoint should probably return more specific information about the application (namely, Jupyter Notebook).\r\n\r\nHere's the problem... changing the response model is a significant REST API **breaking** change. Such changes take longer to review for us (at Jupyter). As I mentioned before, this type of change affects multiple other applications. In order to accept it, we would have to get buy-in from the larger community. That could take weeks (or even months). \r\n\r\nWhat you're trying to achieve in this PR is a rather small change (though much appreciate!!). To move forward, I see two possible choices:\r\n1) Drop the API breaking change to the response model in this PR and merge the `api_request` function that pings the server to verify it's running when `list_running_servers` is called. Then, sometime in a later PR, we can lobby to change the `/api` endpoint and improve this function further.\r\n2) Pause any further review on this PR, propose the change to the REST API through the [Jupyter Enhancement Proposals](https://github.com/jupyter/enhancement-proposals) repository, wait for approval there, then return to this PR once everything is approved. \r\n\r\nUnfortunately, I (and likely @kevin-bates) don't have the bandwidth to shepherd (2) through the process, but I'd be happy to review a proposal over there. In full disclosure, (2) will likely take much longer to happen. \r\n\r\nIf you decide (1) is the direction you want to go, I'm happy to merge this after the final review. \r\n\r\nThanks again, @abaelhe, for all your work here. It's great stuff!  \r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/689020600",
    "html_url": "https://github.com/jupyter/notebook/pull/5716#issuecomment-689020600",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5716",
    "id": 689020600,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY4OTAyMDYwMA==",
    "user": {
      "login": "Zsailer",
      "id": 2791223,
      "node_id": "MDQ6VXNlcjI3OTEyMjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2791223?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Zsailer",
      "html_url": "https://github.com/Zsailer",
      "followers_url": "https://api.github.com/users/Zsailer/followers",
      "following_url": "https://api.github.com/users/Zsailer/following{/other_user}",
      "gists_url": "https://api.github.com/users/Zsailer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Zsailer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Zsailer/subscriptions",
      "organizations_url": "https://api.github.com/users/Zsailer/orgs",
      "repos_url": "https://api.github.com/users/Zsailer/repos",
      "events_url": "https://api.github.com/users/Zsailer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Zsailer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-09-08T17:16:36Z",
    "updated_at": "2020-09-08T17:16:36Z",
    "author_association": "MEMBER",
    "body": ">we break DOS into Windows; RPC into REST API; and many things.\r\nwe keep break REST API if that is reasonable;\r\n> \r\n> merge into master branch first;\r\n> JUST DO IT!\r\n\r\nThis isn't how we do things in the Jupyter ecosystem, for better or worse. Jupyter's REST API is an old protocol that many applications depend on. Changes require formal review through the enhancement proposal process.\r\n\r\nIn this case, we need to follow Jupyter's process. If you want to propose such a change, we'd appreciate if you'd open the discussion on the [enhancement-proposals](https://github.com/jupyter/enhancement-proposals) repo. I am guessing you'll get plenty of support for this idea and we'll be able to move forward fairly quickly. (I just don't have the bandwidth to champion this change myself.)\r\n\r\nAs this PR stands, we can't accept it until that process is complete **or** we drop the changes to the REST API. \r\n\r\n\r\n",
    "performed_via_github_app": null
  }
]
