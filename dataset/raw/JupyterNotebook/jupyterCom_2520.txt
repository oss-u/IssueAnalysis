[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/304355407",
    "html_url": "https://github.com/jupyter/notebook/issues/2520#issuecomment-304355407",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2520",
    "id": 304355407,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDM1NTQwNw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-26T18:25:37Z",
    "updated_at": "2017-05-26T18:25:37Z",
    "author_association": "MEMBER",
    "body": "This is definitely a good idea, but it's not trivial to get it right.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/304405237",
    "html_url": "https://github.com/jupyter/notebook/issues/2520#issuecomment-304405237",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2520",
    "id": 304405237,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDQwNTIzNw==",
    "user": {
      "login": "pde",
      "id": 479213,
      "node_id": "MDQ6VXNlcjQ3OTIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/479213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pde",
      "html_url": "https://github.com/pde",
      "followers_url": "https://api.github.com/users/pde/followers",
      "following_url": "https://api.github.com/users/pde/following{/other_user}",
      "gists_url": "https://api.github.com/users/pde/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pde/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pde/subscriptions",
      "organizations_url": "https://api.github.com/users/pde/orgs",
      "repos_url": "https://api.github.com/users/pde/repos",
      "events_url": "https://api.github.com/users/pde/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pde/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-26T23:03:05Z",
    "updated_at": "2017-06-03T15:16:15Z",
    "author_association": "NONE",
    "body": "It doesn't seem that hard to get the basic case right! This snippet seems to correctly print the location of the error on the Python side:\r\n\r\n```\r\nimport re\r\nimport sys\r\ntry:\r\n    import nosuchthing\r\nexcept:\r\n    exc_type, value, tb = sys.exc_info()\r\n    line = tb.tb_lineno\r\n    context = tb.tb_frame and tb.tb_frame.f_code and tb.tb_frame.f_code.co_filename\r\n    if context:\r\n        match = re.match(r\"<ipython-input-([0-9]+)-\", context)\r\n        input_id = match and match.group(0)\r\n    \r\n    print \"Input:\", input_id, \"line\", line\r\n    raise\r\n```",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/304405428",
    "html_url": "https://github.com/jupyter/notebook/issues/2520#issuecomment-304405428",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2520",
    "id": 304405428,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDQwNTQyOA==",
    "user": {
      "login": "pde",
      "id": 479213,
      "node_id": "MDQ6VXNlcjQ3OTIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/479213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pde",
      "html_url": "https://github.com/pde",
      "followers_url": "https://api.github.com/users/pde/followers",
      "following_url": "https://api.github.com/users/pde/following{/other_user}",
      "gists_url": "https://api.github.com/users/pde/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pde/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pde/subscriptions",
      "organizations_url": "https://api.github.com/users/pde/orgs",
      "repos_url": "https://api.github.com/users/pde/repos",
      "events_url": "https://api.github.com/users/pde/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pde/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-26T23:04:31Z",
    "updated_at": "2017-05-26T23:04:31Z",
    "author_association": "NONE",
    "body": "![tb-demo](https://cloud.githubusercontent.com/assets/479213/26515178/feabc420-422c-11e7-84bf-c460718bca84.png)\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/304406547",
    "html_url": "https://github.com/jupyter/notebook/issues/2520#issuecomment-304406547",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2520",
    "id": 304406547,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDQwNjU0Nw==",
    "user": {
      "login": "pde",
      "id": 479213,
      "node_id": "MDQ6VXNlcjQ3OTIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/479213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pde",
      "html_url": "https://github.com/pde",
      "followers_url": "https://api.github.com/users/pde/followers",
      "following_url": "https://api.github.com/users/pde/following{/other_user}",
      "gists_url": "https://api.github.com/users/pde/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pde/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pde/subscriptions",
      "organizations_url": "https://api.github.com/users/pde/orgs",
      "repos_url": "https://api.github.com/users/pde/repos",
      "events_url": "https://api.github.com/users/pde/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pde/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-26T23:13:58Z",
    "updated_at": "2017-05-26T23:13:58Z",
    "author_association": "NONE",
    "body": "The CSS selector path for the line in question would be something like\r\n* Find the right `div.input_prompt` (ideally that div should get the number added to it as an id, currently I see `<div class=\"prompt input_prompt\">In&nbsp;[1182]:</div>`, so you'd need to walk them to find the right one at present)\r\n* within that DOM subtree, cssselect on `div.CodeMirror-code pre` and you have a reference to the line for highlighting / jumping.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/305981144",
    "html_url": "https://github.com/jupyter/notebook/issues/2520#issuecomment-305981144",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2520",
    "id": 305981144,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTk4MTE0NA==",
    "user": {
      "login": "pde",
      "id": 479213,
      "node_id": "MDQ6VXNlcjQ3OTIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/479213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pde",
      "html_url": "https://github.com/pde",
      "followers_url": "https://api.github.com/users/pde/followers",
      "following_url": "https://api.github.com/users/pde/following{/other_user}",
      "gists_url": "https://api.github.com/users/pde/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pde/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pde/subscriptions",
      "organizations_url": "https://api.github.com/users/pde/orgs",
      "repos_url": "https://api.github.com/users/pde/repos",
      "events_url": "https://api.github.com/users/pde/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pde/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-03T15:14:58Z",
    "updated_at": "2017-06-03T15:14:58Z",
    "author_association": "NONE",
    "body": "@takluyver am I missing anything important there? If not, I might be tempted to make a quick PR for this, though I'd appreciate working with someone who's familiar with Jupyter Notebook's JS front end to do this faster/better.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/307103548",
    "html_url": "https://github.com/jupyter/notebook/issues/2520#issuecomment-307103548",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2520",
    "id": 307103548,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzEwMzU0OA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-08T13:30:09Z",
    "updated_at": "2017-06-08T13:30:09Z",
    "author_association": "MEMBER",
    "body": "I think the tricky bits are:\r\n\r\n- Working out how the line info gets to the frontend in a language agnostic way (the frontend shouldn't be regexing for IPython tracebacks)\r\n- Codemirror has something called 'overlays', IIRC, for this kind of information, but I don't know how to use them.\r\n - When and how do we clear the highlighting? If the line is modified? If any part of the cell is modified?\r\n\r\nIt's all doable if you're keen to work on it, but it's a bit more than a 'quick PR' - it's going to require changes in at least a couple of repositories (this one and ipykernel).",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/310265571",
    "html_url": "https://github.com/jupyter/notebook/issues/2520#issuecomment-310265571",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2520",
    "id": 310265571,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMDI2NTU3MQ==",
    "user": {
      "login": "pde",
      "id": 479213,
      "node_id": "MDQ6VXNlcjQ3OTIxMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/479213?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/pde",
      "html_url": "https://github.com/pde",
      "followers_url": "https://api.github.com/users/pde/followers",
      "following_url": "https://api.github.com/users/pde/following{/other_user}",
      "gists_url": "https://api.github.com/users/pde/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/pde/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/pde/subscriptions",
      "organizations_url": "https://api.github.com/users/pde/orgs",
      "repos_url": "https://api.github.com/users/pde/repos",
      "events_url": "https://api.github.com/users/pde/events{/privacy}",
      "received_events_url": "https://api.github.com/users/pde/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-22T03:29:32Z",
    "updated_at": "2017-06-22T03:29:32Z",
    "author_association": "NONE",
    "body": "* I wasn't proposing regexing for Python tracebacks in the frontend; my example would be backend code that is added to whatever piece of python executes the cell.  The regex is just there to recognise the Notebook cells from within the Python interpreter. An initial PR would probably just work with Python, but it would include an interface for signalling to the front end, so that support for other languages could be added later. Having said that, I don't know how the Jupyter Notebook front and back ends talk to each other, but I presume a new \"hey there's a traceback on line X of cell Y\" call/event could be added?\r\n* I think that skips needing to do anything with Codemirror Overlays?\r\n* I think \"cell modified or any cell executed\" would be a good time to clear the highlight.\r\n\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/526981629",
    "html_url": "https://github.com/jupyter/notebook/issues/2520#issuecomment-526981629",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2520",
    "id": 526981629,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUyNjk4MTYyOQ==",
    "user": {
      "login": "daranday",
      "id": 3279434,
      "node_id": "MDQ6VXNlcjMyNzk0MzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3279434?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/daranday",
      "html_url": "https://github.com/daranday",
      "followers_url": "https://api.github.com/users/daranday/followers",
      "following_url": "https://api.github.com/users/daranday/following{/other_user}",
      "gists_url": "https://api.github.com/users/daranday/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/daranday/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/daranday/subscriptions",
      "organizations_url": "https://api.github.com/users/daranday/orgs",
      "repos_url": "https://api.github.com/users/daranday/repos",
      "events_url": "https://api.github.com/users/daranday/events{/privacy}",
      "received_events_url": "https://api.github.com/users/daranday/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-02T02:36:10Z",
    "updated_at": "2019-09-02T02:36:33Z",
    "author_association": "NONE",
    "body": "It's 2019 and would love to see if technology has matured for this feature for Jupyter notebook or lab?",
    "performed_via_github_app": null
  }
]
