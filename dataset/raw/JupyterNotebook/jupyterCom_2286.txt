[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/286491572",
    "html_url": "https://github.com/jupyter/notebook/pull/2286#issuecomment-286491572",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2286",
    "id": 286491572,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjQ5MTU3Mg==",
    "user": {
      "login": "gnestor",
      "id": 512354,
      "node_id": "MDQ6VXNlcjUxMjM1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/512354?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnestor",
      "html_url": "https://github.com/gnestor",
      "followers_url": "https://api.github.com/users/gnestor/followers",
      "following_url": "https://api.github.com/users/gnestor/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnestor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnestor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnestor/subscriptions",
      "organizations_url": "https://api.github.com/users/gnestor/orgs",
      "repos_url": "https://api.github.com/users/gnestor/repos",
      "events_url": "https://api.github.com/users/gnestor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnestor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-14T17:09:15Z",
    "updated_at": "2017-03-14T17:09:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Carreau I'd like to get this in before releasing 5.0.0. Can you foresee any issues with pushing data to `output_area.outputs` before displaying data vs. after?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/286493468",
    "html_url": "https://github.com/jupyter/notebook/pull/2286#issuecomment-286493468",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2286",
    "id": 286493468,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjQ5MzQ2OA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-14T17:15:09Z",
    "updated_at": "2017-03-14T17:15:09Z",
    "author_association": "MEMBER",
    "body": "I don't see any issues from the top of my head. ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/286610117",
    "html_url": "https://github.com/jupyter/notebook/pull/2286#issuecomment-286610117",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2286",
    "id": 286610117,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjYxMDExNw==",
    "user": {
      "login": "gnestor",
      "id": 512354,
      "node_id": "MDQ6VXNlcjUxMjM1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/512354?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnestor",
      "html_url": "https://github.com/gnestor",
      "followers_url": "https://api.github.com/users/gnestor/followers",
      "following_url": "https://api.github.com/users/gnestor/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnestor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnestor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnestor/subscriptions",
      "organizations_url": "https://api.github.com/users/gnestor/orgs",
      "repos_url": "https://api.github.com/users/gnestor/repos",
      "events_url": "https://api.github.com/users/gnestor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnestor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-15T01:05:54Z",
    "updated_at": "2017-03-15T01:05:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "It looks like we have some failed tests:\r\n\r\n```\r\nIn /home/travis/build/jupyter/notebook/notebook/tests/notebook/display_id.js\r\n  Untitled suite in /home/travis/build/jupyter/notebook/notebook/tests/notebook/display_id.js\r\n    assertEquals: Subject equals the expected value\r\nIn /home/travis/build/jupyter/notebook/notebook/tests/notebook/display_id.js\r\n  Untitled suite in /home/travis/build/jupyter/notebook/notebook/tests/notebook/display_id.js\r\n    assertEquals: correct number of callback outputs\r\nIn /home/travis/build/jupyter/notebook/notebook/tests/notebook/display_id.js\r\n  Untitled suite in /home/travis/build/jupyter/notebook/notebook/tests/notebook/display_id.js\r\n    assertEquals: correct number of cell outputs\r\n```\r\n\r\n@rgbkrk Any idea why this change is causing these `display_id` tests to fail?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/286611273",
    "html_url": "https://github.com/jupyter/notebook/pull/2286#issuecomment-286611273",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2286",
    "id": 286611273,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjYxMTI3Mw==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-15T01:13:53Z",
    "updated_at": "2017-03-15T01:13:53Z",
    "author_association": "MEMBER",
    "body": "Not sure, @minrk did the implementation for the jupyter notebook. nteract's is situated a bit differently.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/286611874",
    "html_url": "https://github.com/jupyter/notebook/pull/2286#issuecomment-286611874",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2286",
    "id": 286611874,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjYxMTg3NA==",
    "user": {
      "login": "rgbkrk",
      "id": 836375,
      "node_id": "MDQ6VXNlcjgzNjM3NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/836375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rgbkrk",
      "html_url": "https://github.com/rgbkrk",
      "followers_url": "https://api.github.com/users/rgbkrk/followers",
      "following_url": "https://api.github.com/users/rgbkrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/rgbkrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rgbkrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rgbkrk/subscriptions",
      "organizations_url": "https://api.github.com/users/rgbkrk/orgs",
      "repos_url": "https://api.github.com/users/rgbkrk/repos",
      "events_url": "https://api.github.com/users/rgbkrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rgbkrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-15T01:17:56Z",
    "updated_at": "2017-03-15T01:17:56Z",
    "author_association": "MEMBER",
    "body": "Since silence is consent, I should probably speak up by saying that I'm not a big fan of passing the entire mimebundle through to a renderer. It seems like there's a mismatch between the way we declare the notebook format and the way it's being interpreted here. Can't quite put my finger on it though.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/286620580",
    "html_url": "https://github.com/jupyter/notebook/pull/2286#issuecomment-286620580",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2286",
    "id": 286620580,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjYyMDU4MA==",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-15T02:15:25Z",
    "updated_at": "2017-03-15T02:15:25Z",
    "author_association": "MEMBER",
    "body": "> It seems like there's a mismatch between the way we declare the notebook format and the way it's being interpreted here. Can't quite put my finger on it though.\r\n\r\nI can't quite put my finger on it either, but it has smelled a bit off to me too to isolate the mimetypes, have renderers say they can handle specific mimetypes, but then let the renderers change the state from the server however they wanted. I know the use-case of having the frontend render a static image and saving that in the notebook, for example, but it still feels a bit off.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/286646237",
    "html_url": "https://github.com/jupyter/notebook/pull/2286#issuecomment-286646237",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2286",
    "id": 286646237,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjY0NjIzNw==",
    "user": {
      "login": "gnestor",
      "id": 512354,
      "node_id": "MDQ6VXNlcjUxMjM1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/512354?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnestor",
      "html_url": "https://github.com/gnestor",
      "followers_url": "https://api.github.com/users/gnestor/followers",
      "following_url": "https://api.github.com/users/gnestor/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnestor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnestor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnestor/subscriptions",
      "organizations_url": "https://api.github.com/users/gnestor/orgs",
      "repos_url": "https://api.github.com/users/gnestor/repos",
      "events_url": "https://api.github.com/users/gnestor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnestor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-15T05:40:16Z",
    "updated_at": "2017-03-15T05:40:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, interesting. @rgbkrk hinted at this the other day but I didn't quite understand the issue... \r\n\r\nSome high-level questions:\r\n\r\n* What is the rationale for allowing an output to have multiple mime types?\r\n* What is the rationale for isolating mime types?\r\n* What are the dangers of allowing a renderer to access data/metadata of other mime types?\r\n\r\nSome things to consider:\r\n\r\n* Jupyterlab has supported mime bundle _injection_ for a while and @blink1073 recently refactored the rendermime interface to make output data and metadata observable and editable by a renderer: https://github.com/jupyterlab/jupyterlab/pull/1709\r\n* According to @ellisonbg, including a static image in the mime bundle is a requirement for jupyterlab_vega (as ipyvega provided this and it's proven to be an important feature): https://github.com/altair-viz/jupyterlab_vega/issues/4\r\n\r\nMy thoughts:\r\n\r\nA renderer is responsible for rendering output of a specific mime type in the notebook. The notebook is no longer a single environment but many (classic notebook, jupyterlab, nteract, nbviewer, Github's nbviewer, etc.). Ideally, a renderer will work across environments, but it doesn't. As a result, instead of seeing a nice plot on Github, you end up seeing `<altair.Vega object>`. How can this be improved? Well, all notebook environments can render `image/png` and `text/html`. The renderer on the client-side is well-suited to provide `image/png` and `text/html` representations of data that's already been renderered vs. a library of the kernel-side. Additionally, if the renderer is responsible for providing fallback mime types, then all kernels benefit from this feature, not just IPython. Now, it's not perfect (I'm seeing many edge cases where both static images and HTML fall short, especially on Github), but it solves a legitimate problem. \r\n\r\nIn my ideal world, a user would not be required to install an extension for every mime type they would like to render because this adds a lot of complexity to a user's workflow and makes reproducibility less guaranteed. I did [a little experiment](https://github.com/gnestor/jupyterlab_react) that lazy loads remote renderers, meaning that as soon as an output is available, the renderer fetches the required package for that mime type from npm, dynamically imports it using SystemJS, and renders it using using that package (which is a React component). Now don't get me wrong, this raises **huge** security concerns, but it demonstrates how renderers could be more dynamic and less coupled with the environment.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/286692030",
    "html_url": "https://github.com/jupyter/notebook/pull/2286#issuecomment-286692030",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2286",
    "id": 286692030,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjY5MjAzMA==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-15T09:48:43Z",
    "updated_at": "2017-03-15T09:48:43Z",
    "author_association": "MEMBER",
    "body": "One important consideration for this PR as-is: it's giving different behavior to execute_result when compared with display_data. `display_data` will have access to the 'current' mime-bundle as `outputs[-1]`, whereas `execute_result` (and other output types) will not. `outputs.length` will have a different meaning for display_data output vs all other outputs, and the display_id target relies on this value having the same meaning. I've fixed the test above, but I know that display_id will now no longer work for execute_results. The test coverage doesn't check that case yet, though.\r\n\r\nIf renderers should have access to the whole mime-bundle, I think passing the whole mime-bundle to the renderer makes more sense than ensuring it is stored on the outputs list prior to rendering. Relying on the outputs list means async code can't use it, as other outputs can have been appended in the meantime.\r\n\r\nPerhaps the simplest version of this is to add an `output_added.OutputArea` event with the output data, which could allow it to be modified.\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/286697999",
    "html_url": "https://github.com/jupyter/notebook/pull/2286#issuecomment-286697999",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2286",
    "id": 286697999,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjY5Nzk5OQ==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-15T10:12:51Z",
    "updated_at": "2017-03-15T10:12:51Z",
    "author_association": "MEMBER",
    "body": "@gnestor I updated the PR to add the `output_added.OutputArea` event, which I think should satisfy the need for \"do something with this output\", instead of relying on the `.outputs` list.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/286698372",
    "html_url": "https://github.com/jupyter/notebook/pull/2286#issuecomment-286698372",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2286",
    "id": 286698372,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjY5ODM3Mg==",
    "user": {
      "login": "blink1073",
      "id": 2096628,
      "node_id": "MDQ6VXNlcjIwOTY2Mjg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2096628?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blink1073",
      "html_url": "https://github.com/blink1073",
      "followers_url": "https://api.github.com/users/blink1073/followers",
      "following_url": "https://api.github.com/users/blink1073/following{/other_user}",
      "gists_url": "https://api.github.com/users/blink1073/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blink1073/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blink1073/subscriptions",
      "organizations_url": "https://api.github.com/users/blink1073/orgs",
      "repos_url": "https://api.github.com/users/blink1073/repos",
      "events_url": "https://api.github.com/users/blink1073/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blink1073/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-15T10:14:24Z",
    "updated_at": "2017-03-15T10:14:24Z",
    "author_association": "MEMBER",
    "body": "Sounds good, @minrk.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/286763790",
    "html_url": "https://github.com/jupyter/notebook/pull/2286#issuecomment-286763790",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2286",
    "id": 286763790,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4Njc2Mzc5MA==",
    "user": {
      "login": "gnestor",
      "id": 512354,
      "node_id": "MDQ6VXNlcjUxMjM1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/512354?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnestor",
      "html_url": "https://github.com/gnestor",
      "followers_url": "https://api.github.com/users/gnestor/followers",
      "following_url": "https://api.github.com/users/gnestor/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnestor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnestor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnestor/subscriptions",
      "organizations_url": "https://api.github.com/users/gnestor/orgs",
      "repos_url": "https://api.github.com/users/gnestor/repos",
      "events_url": "https://api.github.com/users/gnestor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnestor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-15T14:44:54Z",
    "updated_at": "2017-03-15T14:44:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks, @minrk! I will test this out with the extensions that depend on this functionality now.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/286939811",
    "html_url": "https://github.com/jupyter/notebook/pull/2286#issuecomment-286939811",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2286",
    "id": 286939811,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NjkzOTgxMQ==",
    "user": {
      "login": "gnestor",
      "id": 512354,
      "node_id": "MDQ6VXNlcjUxMjM1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/512354?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnestor",
      "html_url": "https://github.com/gnestor",
      "followers_url": "https://api.github.com/users/gnestor/followers",
      "following_url": "https://api.github.com/users/gnestor/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnestor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnestor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnestor/subscriptions",
      "organizations_url": "https://api.github.com/users/gnestor/orgs",
      "repos_url": "https://api.github.com/users/gnestor/repos",
      "events_url": "https://api.github.com/users/gnestor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnestor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-16T02:28:43Z",
    "updated_at": "2017-03-16T02:28:43Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ok, let's merge this and we can iterate if need be. Thanks again, @minrk!",
    "performed_via_github_app": null
  }
]
