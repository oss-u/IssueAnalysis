[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/189745743",
    "html_url": "https://github.com/jupyter/notebook/issues/1150#issuecomment-189745743",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1150",
    "id": 189745743,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4OTc0NTc0Mw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-27T23:14:03Z",
    "updated_at": "2016-02-27T23:14:03Z",
    "author_association": "MEMBER",
    "body": "Yes, there are plan. \n\nIt's not super trivial and will require massive changes in browser javascript and on server side. \n\nThere are many steps that can **help**. IMHO:\n1. separate in memory representation of notebook from **on disk**. \n2. have the server keep an in memory version that have more temporary informations that the on disk one. Like a map from kernel messages to cells. \n3. refactor the js to no t register callbacks, but a mapping that in (2)\n4. design a API that store/load this mapping from the js to the server. \n\nThat would allow **some** messages to still work after page reload. \nMore complex things like messages that arrives while the browser is closed might not be able to be persisted. \n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/249645832",
    "html_url": "https://github.com/jupyter/notebook/issues/1150#issuecomment-249645832",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1150",
    "id": 249645832,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTY0NTgzMg==",
    "user": {
      "login": "wmayner",
      "id": 1775632,
      "node_id": "MDQ6VXNlcjE3NzU2MzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1775632?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wmayner",
      "html_url": "https://github.com/wmayner",
      "followers_url": "https://api.github.com/users/wmayner/followers",
      "following_url": "https://api.github.com/users/wmayner/following{/other_user}",
      "gists_url": "https://api.github.com/users/wmayner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wmayner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wmayner/subscriptions",
      "organizations_url": "https://api.github.com/users/wmayner/orgs",
      "repos_url": "https://api.github.com/users/wmayner/repos",
      "events_url": "https://api.github.com/users/wmayner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wmayner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-26T17:55:35Z",
    "updated_at": "2016-09-26T17:55:35Z",
    "author_association": "NONE",
    "body": "üëç üò∏ \n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/266610805",
    "html_url": "https://github.com/jupyter/notebook/issues/1150#issuecomment-266610805",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1150",
    "id": 266610805,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2NjYxMDgwNQ==",
    "user": {
      "login": "ieee8023",
      "id": 446367,
      "node_id": "MDQ6VXNlcjQ0NjM2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/446367?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ieee8023",
      "html_url": "https://github.com/ieee8023",
      "followers_url": "https://api.github.com/users/ieee8023/followers",
      "following_url": "https://api.github.com/users/ieee8023/following{/other_user}",
      "gists_url": "https://api.github.com/users/ieee8023/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ieee8023/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ieee8023/subscriptions",
      "organizations_url": "https://api.github.com/users/ieee8023/orgs",
      "repos_url": "https://api.github.com/users/ieee8023/repos",
      "events_url": "https://api.github.com/users/ieee8023/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ieee8023/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-12-13T01:45:50Z",
    "updated_at": "2016-12-13T01:45:50Z",
    "author_association": "NONE",
    "body": "This feature would be great! ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/273359745",
    "html_url": "https://github.com/jupyter/notebook/issues/1150#issuecomment-273359745",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1150",
    "id": 273359745,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3MzM1OTc0NQ==",
    "user": {
      "login": "miquelmarti",
      "id": 11225150,
      "node_id": "MDQ6VXNlcjExMjI1MTUw",
      "avatar_url": "https://avatars.githubusercontent.com/u/11225150?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/miquelmarti",
      "html_url": "https://github.com/miquelmarti",
      "followers_url": "https://api.github.com/users/miquelmarti/followers",
      "following_url": "https://api.github.com/users/miquelmarti/following{/other_user}",
      "gists_url": "https://api.github.com/users/miquelmarti/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/miquelmarti/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/miquelmarti/subscriptions",
      "organizations_url": "https://api.github.com/users/miquelmarti/orgs",
      "repos_url": "https://api.github.com/users/miquelmarti/repos",
      "events_url": "https://api.github.com/users/miquelmarti/events{/privacy}",
      "received_events_url": "https://api.github.com/users/miquelmarti/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-18T01:54:44Z",
    "updated_at": "2017-01-18T01:54:44Z",
    "author_association": "NONE",
    "body": "I was expecting this feature to be there for sure, the \"Running\" tab in the dashboard is really confusing, looks like you will be able to click there and reattach to a running notebook... :disappointed:\r\n\r\nIs there any hacky way of doing so or is all hope lost to recover the output of a running notebook after closing the tab?\r\n\r\nSuch a pity I cannot use jupyter for my purposes. I hope it is implemented in the near future!",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/281893792",
    "html_url": "https://github.com/jupyter/notebook/issues/1150#issuecomment-281893792",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1150",
    "id": 281893792,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MTg5Mzc5Mg==",
    "user": {
      "login": "AdrienLemaire",
      "id": 260983,
      "node_id": "MDQ6VXNlcjI2MDk4Mw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/260983?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/AdrienLemaire",
      "html_url": "https://github.com/AdrienLemaire",
      "followers_url": "https://api.github.com/users/AdrienLemaire/followers",
      "following_url": "https://api.github.com/users/AdrienLemaire/following{/other_user}",
      "gists_url": "https://api.github.com/users/AdrienLemaire/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/AdrienLemaire/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/AdrienLemaire/subscriptions",
      "organizations_url": "https://api.github.com/users/AdrienLemaire/orgs",
      "repos_url": "https://api.github.com/users/AdrienLemaire/repos",
      "events_url": "https://api.github.com/users/AdrienLemaire/events{/privacy}",
      "received_events_url": "https://api.github.com/users/AdrienLemaire/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-23T04:48:33Z",
    "updated_at": "2017-02-23T04:48:33Z",
    "author_association": "NONE",
    "body": "Similar issue as https://github.com/jupyter/notebook/issues/641 ?\r\n\r\nI'm a bit confused here. What is the function of the Kernel‚ÜíReconnect feature ? I thought this would show again the computation in progress to my output.\r\n\r\nI'm having lot of issues with my chrome pages crashing from time to time, not seeing previously executed cells output displayed after a refresh, seeing memory usage multiplied after rerunning those cells, etc..\r\n\r\nAlso, when asking for multiple cells to be executed one after the other, then refreshing the page, why does it look like the execution was cancelled ?\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/281899712",
    "html_url": "https://github.com/jupyter/notebook/issues/1150#issuecomment-281899712",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1150",
    "id": 281899712,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MTg5OTcxMg==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-23T05:36:34Z",
    "updated_at": "2017-02-23T05:36:34Z",
    "author_association": "MEMBER",
    "body": "> I'm a bit confused here. What is the function of the Kernel‚ÜíReconnect feature ? I thought this would show again the computation in progress to my output.\r\n> \r\n> I'm having lot of issues with my chrome pages crashing from time to time, not seeing previously executed cells output displayed after a refresh, seeing memory usage multiplied after rerunning those cells, etc..\r\n> \r\n> Also, when asking for multiple cells to be executed one after the other, then refreshing the page, why does it look like the execution was cancelled ?\r\n\r\nAll of these are inherent nature to a few of the pieces we across the stack.\r\n\r\nZMQ act as a message queue, with subscriber. If a result arrives while a subscriber is not subscribed, then there is no chance to get. So in the case of:\r\n\r\n   - execute `sleep 5, print('hey')`\r\n   - close tab\r\n   - hey is \"printed\" nowhere\r\n   - reopen tab. \r\n\r\nThe \"hey\" is gone. \r\n\r\nThe second thing is that when you press shift-enter the callback that \"listen\" for the reply in in the Javascript context, somewhere we have no control over. When you refresh the page, the context is gone. We can't do anything about it. The you can reconnect, but some messages will have no remaining handler. So result don't display cause they don't know where to go.\r\n\r\nYou have to remember that current notebook is based on the websocket architecture with first version released on 2012,  using websockets. Websockets have been standardized in 2011 ( ! ), and notebook was brewing  for a few month (also we are python programmers, and the team was ~ 6 peoples including 3 in their PhD...), so we made non optimal decisions in the long term, but we kind of couldn't imagine what the future would be, and what would be available. \r\n\r\nSome of the solutions to these problems are easy to handwave, but require much more bandwidth than we have, and are harder to get right that it appears at first, especially without breaking APIs.\r\n\r\nIf some of you want to give it a try, even just small steps toward the solution, they we'll be happy to show you some of the changes that are necessary and key pieces to implement to make the behavior maybe not perfect; but at least much better. \r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/294063840",
    "html_url": "https://github.com/jupyter/notebook/issues/1150#issuecomment-294063840",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1150",
    "id": 294063840,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NDA2Mzg0MA==",
    "user": {
      "login": "tmbdev",
      "id": 333887,
      "node_id": "MDQ6VXNlcjMzMzg4Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/333887?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tmbdev",
      "html_url": "https://github.com/tmbdev",
      "followers_url": "https://api.github.com/users/tmbdev/followers",
      "following_url": "https://api.github.com/users/tmbdev/following{/other_user}",
      "gists_url": "https://api.github.com/users/tmbdev/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tmbdev/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tmbdev/subscriptions",
      "organizations_url": "https://api.github.com/users/tmbdev/orgs",
      "repos_url": "https://api.github.com/users/tmbdev/repos",
      "events_url": "https://api.github.com/users/tmbdev/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tmbdev/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-14T01:36:15Z",
    "updated_at": "2017-04-14T01:36:15Z",
    "author_association": "NONE",
    "body": "I think the fact that updates are lost is not so much of a problem; when I have long-running programs, I frequently call IPython display functions and/or generate new output anyway. That is, the lack of buffering is something that we can fairly easily handle in user code (of course, it would still be nicer if we didn't have to, but it's just not that important).\r\n\r\nThe first and foremost problem is that when connecting to the notebook server with a new browser, the new browser never gets any updates. So even if the display is refreshed and/or new output appears, it still doesn't show up.\r\n\r\nAs far as I can tell, the notebook server simply doesn't send output to all browser, but only to the one that actually originally executed the cell. Fixing that would fix most of the problems for long-running notebooks.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/314864326",
    "html_url": "https://github.com/jupyter/notebook/issues/1150#issuecomment-314864326",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1150",
    "id": 314864326,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNDg2NDMyNg==",
    "user": {
      "login": "t-vi",
      "id": 20787943,
      "node_id": "MDQ6VXNlcjIwNzg3OTQz",
      "avatar_url": "https://avatars.githubusercontent.com/u/20787943?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/t-vi",
      "html_url": "https://github.com/t-vi",
      "followers_url": "https://api.github.com/users/t-vi/followers",
      "following_url": "https://api.github.com/users/t-vi/following{/other_user}",
      "gists_url": "https://api.github.com/users/t-vi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/t-vi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/t-vi/subscriptions",
      "organizations_url": "https://api.github.com/users/t-vi/orgs",
      "repos_url": "https://api.github.com/users/t-vi/repos",
      "events_url": "https://api.github.com/users/t-vi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/t-vi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-12T18:56:53Z",
    "updated_at": "2017-07-12T18:56:53Z",
    "author_association": "NONE",
    "body": "Hi,\r\n\r\nthank you for Jupyter! It is incredibly useful for me!\r\n\r\nAs I have a setup where Jupyter runs on one computer and I connect from another and I have long-running jobs, I hacked a very much *quick and dirty* reconnect and replay proof of concept.\r\n\r\nIt is not really good enough, but it felt wrong not to share it just in case someone needs it something like it badly enough to cope with it. So here it is:\r\nhttps://github.com/t-vi/notebook/tree/replay\r\n\r\nIf I did not believe it before, this clearly showed to me that something along the lines of @Carreau's list above is needed for an actual solution, but maybe this is useful until a more appropriate solution is available.\r\nThe hack does replay instead of keeping the form of the notebook as Carreau suggested. This keeps everything on the browser side but probably isn't half as good as a solution.\r\nOn top of not being designed properly it is implemented in a very messy way, so you really want to use something else if you can.\r\n\r\nBest regards\r\n\r\nThomas\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/381476594",
    "html_url": "https://github.com/jupyter/notebook/issues/1150#issuecomment-381476594",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1150",
    "id": 381476594,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTQ3NjU5NA==",
    "user": {
      "login": "ckane",
      "id": 3454769,
      "node_id": "MDQ6VXNlcjM0NTQ3Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3454769?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ckane",
      "html_url": "https://github.com/ckane",
      "followers_url": "https://api.github.com/users/ckane/followers",
      "following_url": "https://api.github.com/users/ckane/following{/other_user}",
      "gists_url": "https://api.github.com/users/ckane/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ckane/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ckane/subscriptions",
      "organizations_url": "https://api.github.com/users/ckane/orgs",
      "repos_url": "https://api.github.com/users/ckane/repos",
      "events_url": "https://api.github.com/users/ckane/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ckane/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-16T04:26:03Z",
    "updated_at": "2018-04-16T04:26:03Z",
    "author_association": "CONTRIBUTOR",
    "body": "So I found a useful work-around to this problem, and documented it here. It requires installing Firefox server-side and using an X11 server/forwarder called XPRA. It will be a usable stop-gap for me in the interim as this feature set gets worked out:\r\n* https://github.com/jupyterlab/jupyterlab/issues/4237",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/457026106",
    "html_url": "https://github.com/jupyter/notebook/issues/1150#issuecomment-457026106",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1150",
    "id": 457026106,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzAyNjEwNg==",
    "user": {
      "login": "cduguet",
      "id": 1536515,
      "node_id": "MDQ6VXNlcjE1MzY1MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1536515?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cduguet",
      "html_url": "https://github.com/cduguet",
      "followers_url": "https://api.github.com/users/cduguet/followers",
      "following_url": "https://api.github.com/users/cduguet/following{/other_user}",
      "gists_url": "https://api.github.com/users/cduguet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cduguet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cduguet/subscriptions",
      "organizations_url": "https://api.github.com/users/cduguet/orgs",
      "repos_url": "https://api.github.com/users/cduguet/repos",
      "events_url": "https://api.github.com/users/cduguet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cduguet/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-24T01:01:35Z",
    "updated_at": "2019-01-24T01:01:35Z",
    "author_association": "NONE",
    "body": "I have two ideas for workarounds which I am not 100% sure would work, so if you guys have tried it before, please comment. Both are around colaboration wrappers for jupyter notebooks. \r\n1. It seems you could use Google Colab connected to your machine as server, so all the output would be immediately saved in colab. \r\n2. It is possible to do jupyter collaboration with cocalc.com. However, it does not seem cocalc can connect to your remote machine. ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/457483604",
    "html_url": "https://github.com/jupyter/notebook/issues/1150#issuecomment-457483604",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1150",
    "id": 457483604,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzQ4MzYwNA==",
    "user": {
      "login": "concretevitamin",
      "id": 592670,
      "node_id": "MDQ6VXNlcjU5MjY3MA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/592670?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/concretevitamin",
      "html_url": "https://github.com/concretevitamin",
      "followers_url": "https://api.github.com/users/concretevitamin/followers",
      "following_url": "https://api.github.com/users/concretevitamin/following{/other_user}",
      "gists_url": "https://api.github.com/users/concretevitamin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/concretevitamin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/concretevitamin/subscriptions",
      "organizations_url": "https://api.github.com/users/concretevitamin/orgs",
      "repos_url": "https://api.github.com/users/concretevitamin/repos",
      "events_url": "https://api.github.com/users/concretevitamin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/concretevitamin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-25T07:40:30Z",
    "updated_at": "2019-01-25T07:40:30Z",
    "author_association": "NONE",
    "body": "This feature would be a life saver.\r\n\r\n@cduguet Can you elaborate the steps for (1)?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/457559802",
    "html_url": "https://github.com/jupyter/notebook/issues/1150#issuecomment-457559802",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1150",
    "id": 457559802,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzU1OTgwMg==",
    "user": {
      "login": "cduguet",
      "id": 1536515,
      "node_id": "MDQ6VXNlcjE1MzY1MTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1536515?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cduguet",
      "html_url": "https://github.com/cduguet",
      "followers_url": "https://api.github.com/users/cduguet/followers",
      "following_url": "https://api.github.com/users/cduguet/following{/other_user}",
      "gists_url": "https://api.github.com/users/cduguet/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cduguet/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cduguet/subscriptions",
      "organizations_url": "https://api.github.com/users/cduguet/orgs",
      "repos_url": "https://api.github.com/users/cduguet/repos",
      "events_url": "https://api.github.com/users/cduguet/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cduguet/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-25T12:35:30Z",
    "updated_at": "2019-01-25T12:35:30Z",
    "author_association": "NONE",
    "body": "> This feature would be a life saver.\r\n> \r\n> @cduguet Can you elaborate the steps for (1)?\r\n\r\nI have not tried it myself, but you can follow [these steps](https://research.google.com/colaboratory/local-runtimes.html) to use google colab connected to your machine as backend. then the output should be saved in the colab notebook instead of your browser. Again this is just a theory. \"Normal\" colab notebooks (connected to Google CPUs/GPUs) stop executing when you close the page, but I don't know if notebooks with custom backend do. I just posted these ideas to know if anyone has tried them out.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/457569895",
    "html_url": "https://github.com/jupyter/notebook/issues/1150#issuecomment-457569895",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1150",
    "id": 457569895,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1NzU2OTg5NQ==",
    "user": {
      "login": "t-vi",
      "id": 20787943,
      "node_id": "MDQ6VXNlcjIwNzg3OTQz",
      "avatar_url": "https://avatars.githubusercontent.com/u/20787943?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/t-vi",
      "html_url": "https://github.com/t-vi",
      "followers_url": "https://api.github.com/users/t-vi/followers",
      "following_url": "https://api.github.com/users/t-vi/following{/other_user}",
      "gists_url": "https://api.github.com/users/t-vi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/t-vi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/t-vi/subscriptions",
      "organizations_url": "https://api.github.com/users/t-vi/orgs",
      "repos_url": "https://api.github.com/users/t-vi/repos",
      "events_url": "https://api.github.com/users/t-vi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/t-vi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-25T13:18:12Z",
    "updated_at": "2019-01-25T13:18:12Z",
    "author_association": "NONE",
    "body": "With all the warts it has, I'm still using the branch I linked to above and am reasonably happy about it. The only thing is to either not run into the message rate limit during replay. But if you don't output too much or periodically call `IPython.display.clear()`, it works very well for me.\r\nI would not advertise that as a solution for general consumption, but if you like to keep your notebook on your  side of the internet, it might be worth a try.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/620066073",
    "html_url": "https://github.com/jupyter/notebook/issues/1150#issuecomment-620066073",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1150",
    "id": 620066073,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMDA2NjA3Mw==",
    "user": {
      "login": "vishal733",
      "id": 3748992,
      "node_id": "MDQ6VXNlcjM3NDg5OTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3748992?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/vishal733",
      "html_url": "https://github.com/vishal733",
      "followers_url": "https://api.github.com/users/vishal733/followers",
      "following_url": "https://api.github.com/users/vishal733/following{/other_user}",
      "gists_url": "https://api.github.com/users/vishal733/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/vishal733/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/vishal733/subscriptions",
      "organizations_url": "https://api.github.com/users/vishal733/orgs",
      "repos_url": "https://api.github.com/users/vishal733/repos",
      "events_url": "https://api.github.com/users/vishal733/events{/privacy}",
      "received_events_url": "https://api.github.com/users/vishal733/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-27T15:41:48Z",
    "updated_at": "2020-04-27T15:41:48Z",
    "author_association": "NONE",
    "body": "Do we have a solution for this yet?\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/628794795",
    "html_url": "https://github.com/jupyter/notebook/issues/1150#issuecomment-628794795",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1150",
    "id": 628794795,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyODc5NDc5NQ==",
    "user": {
      "login": "sasasagagaga",
      "id": 32341040,
      "node_id": "MDQ6VXNlcjMyMzQxMDQw",
      "avatar_url": "https://avatars.githubusercontent.com/u/32341040?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sasasagagaga",
      "html_url": "https://github.com/sasasagagaga",
      "followers_url": "https://api.github.com/users/sasasagagaga/followers",
      "following_url": "https://api.github.com/users/sasasagagaga/following{/other_user}",
      "gists_url": "https://api.github.com/users/sasasagagaga/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sasasagagaga/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sasasagagaga/subscriptions",
      "organizations_url": "https://api.github.com/users/sasasagagaga/orgs",
      "repos_url": "https://api.github.com/users/sasasagagaga/repos",
      "events_url": "https://api.github.com/users/sasasagagaga/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sasasagagaga/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-14T17:57:26Z",
    "updated_at": "2020-05-14T17:57:26Z",
    "author_association": "NONE",
    "body": "> Do we have a solution for this yet?\r\n\r\nI have the same question.\r\nAnd also I can't get the meaning of \"Reconnect\" button. Does anyone have any guesses?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/632263744",
    "html_url": "https://github.com/jupyter/notebook/issues/1150#issuecomment-632263744",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1150",
    "id": 632263744,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMjI2Mzc0NA==",
    "user": {
      "login": "rosstex",
      "id": 3675149,
      "node_id": "MDQ6VXNlcjM2NzUxNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3675149?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rosstex",
      "html_url": "https://github.com/rosstex",
      "followers_url": "https://api.github.com/users/rosstex/followers",
      "following_url": "https://api.github.com/users/rosstex/following{/other_user}",
      "gists_url": "https://api.github.com/users/rosstex/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rosstex/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rosstex/subscriptions",
      "organizations_url": "https://api.github.com/users/rosstex/orgs",
      "repos_url": "https://api.github.com/users/rosstex/repos",
      "events_url": "https://api.github.com/users/rosstex/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rosstex/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-21T18:17:22Z",
    "updated_at": "2020-05-21T18:17:22Z",
    "author_association": "NONE",
    "body": "This would be a super cool feature, especially when using library functions that don't report intermittent output.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/640029665",
    "html_url": "https://github.com/jupyter/notebook/issues/1150#issuecomment-640029665",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1150",
    "id": 640029665,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MDAyOTY2NQ==",
    "user": {
      "login": "kaikun213",
      "id": 18282228,
      "node_id": "MDQ6VXNlcjE4MjgyMjI4",
      "avatar_url": "https://avatars.githubusercontent.com/u/18282228?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kaikun213",
      "html_url": "https://github.com/kaikun213",
      "followers_url": "https://api.github.com/users/kaikun213/followers",
      "following_url": "https://api.github.com/users/kaikun213/following{/other_user}",
      "gists_url": "https://api.github.com/users/kaikun213/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kaikun213/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kaikun213/subscriptions",
      "organizations_url": "https://api.github.com/users/kaikun213/orgs",
      "repos_url": "https://api.github.com/users/kaikun213/repos",
      "events_url": "https://api.github.com/users/kaikun213/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kaikun213/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-06T10:14:05Z",
    "updated_at": "2020-06-06T10:14:05Z",
    "author_association": "NONE",
    "body": "This would be extremely useful! Any news?\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/646026213",
    "html_url": "https://github.com/jupyter/notebook/issues/1150#issuecomment-646026213",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1150",
    "id": 646026213,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NjAyNjIxMw==",
    "user": {
      "login": "louis-she",
      "id": 2050207,
      "node_id": "MDQ6VXNlcjIwNTAyMDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2050207?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/louis-she",
      "html_url": "https://github.com/louis-she",
      "followers_url": "https://api.github.com/users/louis-she/followers",
      "following_url": "https://api.github.com/users/louis-she/following{/other_user}",
      "gists_url": "https://api.github.com/users/louis-she/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/louis-she/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/louis-she/subscriptions",
      "organizations_url": "https://api.github.com/users/louis-she/orgs",
      "repos_url": "https://api.github.com/users/louis-she/repos",
      "events_url": "https://api.github.com/users/louis-she/events{/privacy}",
      "received_events_url": "https://api.github.com/users/louis-she/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-18T13:44:31Z",
    "updated_at": "2020-06-18T13:45:04Z",
    "author_association": "NONE",
    "body": "I'm not 100% sure but Google Colab seems to use the `Replay` to achieve this too, as what the  branch does of  @t-vi 's",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/656521084",
    "html_url": "https://github.com/jupyter/notebook/issues/1150#issuecomment-656521084",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1150",
    "id": 656521084,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY1NjUyMTA4NA==",
    "user": {
      "login": "hugo1005",
      "id": 11254578,
      "node_id": "MDQ6VXNlcjExMjU0NTc4",
      "avatar_url": "https://avatars.githubusercontent.com/u/11254578?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hugo1005",
      "html_url": "https://github.com/hugo1005",
      "followers_url": "https://api.github.com/users/hugo1005/followers",
      "following_url": "https://api.github.com/users/hugo1005/following{/other_user}",
      "gists_url": "https://api.github.com/users/hugo1005/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hugo1005/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hugo1005/subscriptions",
      "organizations_url": "https://api.github.com/users/hugo1005/orgs",
      "repos_url": "https://api.github.com/users/hugo1005/repos",
      "events_url": "https://api.github.com/users/hugo1005/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hugo1005/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-10T07:07:22Z",
    "updated_at": "2020-07-10T07:07:22Z",
    "author_association": "NONE",
    "body": "So i've found a sort of workaround that provides some information.\r\nIf you are using AWS SageMaker (Basically identical to JupyterLab )\r\n\r\nIf you go view > show log console > Log Level = Info .\r\nThen anytime your progress bar etc updates it will print in here.\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/662441301",
    "html_url": "https://github.com/jupyter/notebook/issues/1150#issuecomment-662441301",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1150",
    "id": 662441301,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2MjQ0MTMwMQ==",
    "user": {
      "login": "munael",
      "id": 5769148,
      "node_id": "MDQ6VXNlcjU3NjkxNDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5769148?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/munael",
      "html_url": "https://github.com/munael",
      "followers_url": "https://api.github.com/users/munael/followers",
      "following_url": "https://api.github.com/users/munael/following{/other_user}",
      "gists_url": "https://api.github.com/users/munael/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/munael/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/munael/subscriptions",
      "organizations_url": "https://api.github.com/users/munael/orgs",
      "repos_url": "https://api.github.com/users/munael/repos",
      "events_url": "https://api.github.com/users/munael/events{/privacy}",
      "received_events_url": "https://api.github.com/users/munael/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-22T13:05:57Z",
    "updated_at": "2020-07-22T13:05:57Z",
    "author_association": "NONE",
    "body": "@hugo1005 , Same UI path in base Jupyter Lab as well.\r\n\r\nI'd certainly prefer to have output back where it belongs in the notebook, but this beats taking the long wait if a long-running job was on during the disconnect.\r\n\r\nDoesn't seem like it'd work if you have multiple notebooks running, though :/ So it's merely a thin stopgap.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/769788768",
    "html_url": "https://github.com/jupyter/notebook/issues/1150#issuecomment-769788768",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1150",
    "id": 769788768,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2OTc4ODc2OA==",
    "user": {
      "login": "jtlz2",
      "id": 3842318,
      "node_id": "MDQ6VXNlcjM4NDIzMTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3842318?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtlz2",
      "html_url": "https://github.com/jtlz2",
      "followers_url": "https://api.github.com/users/jtlz2/followers",
      "following_url": "https://api.github.com/users/jtlz2/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtlz2/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtlz2/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtlz2/subscriptions",
      "organizations_url": "https://api.github.com/users/jtlz2/orgs",
      "repos_url": "https://api.github.com/users/jtlz2/repos",
      "events_url": "https://api.github.com/users/jtlz2/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtlz2/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-29T12:55:22Z",
    "updated_at": "2021-01-29T12:55:22Z",
    "author_association": "NONE",
    "body": "Any update? :\\",
    "performed_via_github_app": null
  }
]
