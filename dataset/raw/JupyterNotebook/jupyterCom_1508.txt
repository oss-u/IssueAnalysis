[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/224480686",
    "html_url": "https://github.com/jupyter/notebook/issues/1508#issuecomment-224480686",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1508",
    "id": 224480686,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDQ4MDY4Ng==",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-08T03:53:37Z",
    "updated_at": "2016-06-08T03:53:37Z",
    "author_association": "CONTRIBUTOR",
    "body": "Do you propose that both follow:\n- Merge\n- User wins\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/224530401",
    "html_url": "https://github.com/jupyter/notebook/issues/1508#issuecomment-224530401",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1508",
    "id": 224530401,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDUzMDQwMQ==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-08T08:59:45Z",
    "updated_at": "2016-06-08T08:59:45Z",
    "author_association": "MEMBER",
    "body": "Yup, I think that makes good sense as a goal. Where we have some trouble is that the traitlets config system doesn't perform any merging of the values of individual traits, it only merges at the configurable-object level (i.e. it merges user_config.Config with sys_config.Config, but doesn't merge the contents of user_config.Config.value with sys_config.Config.value). While this isn't desirable for extension loading, it is most of the time. In some ways, this points to the traitlets config system simply being a bad fit for extensions, as we rapidly expand the scope of what configuration we are talking about enabling.\n\n@SylvainCorlay discussed at the meeting a conf.d trait-type that would implement the directory-style loading without requiring changes to how traitlets.config works.\n\nAlternately, we could move the serverextensions piece to use the exact same code as nbextensions, which would ensure the behavior of the two is totally consistent, rather than using traitlets.config for one and frontend-config for the other. Right now, I'm leaning a bit toward this option.\n\nI think the nbextensions case is just a bug where the load order is backwards. That should be readily fixable.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/224652398",
    "html_url": "https://github.com/jupyter/notebook/issues/1508#issuecomment-224652398",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1508",
    "id": 224652398,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDY1MjM5OA==",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-08T16:45:12Z",
    "updated_at": "2016-06-08T16:45:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "@minrk but if both used the frontend extensions stuff, wouldn't that be an\nAPI change as the actual location of the config would be different?\n\nOn Wed, Jun 8, 2016 at 1:59 AM, Min RK notifications@github.com wrote:\n\n> Yup, I think that makes good sense as a goal. Where we have some trouble\n> is that the traitlets config system doesn't perform any merging of the\n> values of individual traits, it only merges at the configurable-object\n> level (i.e. it merges user_config.Config with sys_config.Config, but\n> doesn't merge the contents of user_config.Config.value with\n> sys_config.Config.value). While this isn't desirable for extension loading,\n> it is most of the time. In some ways, this points to the traitlets config\n> system simply being a bad fit for extensions, as we rapidly expand the\n> scope of what configuration we are talking about enabling.\n> \n> @SylvainCorlay https://github.com/SylvainCorlay discussed at the\n> meeting a conf.d trait-type that would implement the directory-style\n> loading without requiring changes to how traitlets.config works.\n> \n> Alternately, we could move the serverextensions piece to use the exact\n> same code as nbextensions, which would ensure the behavior of the two is\n> totally consistent, rather than using traitlets.config for one and\n> frontend-config for the other. Right now, I'm leaning a bit toward this\n> option.\n> \n> I think the nbextensions case is just a bug where the load order is\n> backwards. That should be readily fixable.\n> \n> â€”\n> You are receiving this because you commented.\n> Reply to this email directly, view it on GitHub\n> https://github.com/jupyter/notebook/issues/1508#issuecomment-224530401,\n> or mute the thread\n> https://github.com/notifications/unsubscribe/AABr0Fj8CnIDObeEFoSSuJ4_w6ZL5tv_ks5qJoSBgaJpZM4Is9PS\n> .\n\n## \n\nBrian E. Granger\nAssociate Professor of Physics and Data Science\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/224842254",
    "html_url": "https://github.com/jupyter/notebook/issues/1508#issuecomment-224842254",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1508",
    "id": 224842254,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDg0MjI1NA==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-09T09:17:30Z",
    "updated_at": "2016-06-09T09:17:30Z",
    "author_association": "MEMBER",
    "body": "@ellisonbg yes, though it could be shimmed (the CLI API doesn't need to change). Any fix involving changes to existing traitlets behavior would be a more significant backward-incompatible change.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/224884627",
    "html_url": "https://github.com/jupyter/notebook/issues/1508#issuecomment-224884627",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1508",
    "id": 224884627,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDg4NDYyNw==",
    "user": {
      "login": "bollwyvl",
      "id": 45380,
      "node_id": "MDQ6VXNlcjQ1Mzgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/45380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bollwyvl",
      "html_url": "https://github.com/bollwyvl",
      "followers_url": "https://api.github.com/users/bollwyvl/followers",
      "following_url": "https://api.github.com/users/bollwyvl/following{/other_user}",
      "gists_url": "https://api.github.com/users/bollwyvl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bollwyvl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bollwyvl/subscriptions",
      "organizations_url": "https://api.github.com/users/bollwyvl/orgs",
      "repos_url": "https://api.github.com/users/bollwyvl/repos",
      "events_url": "https://api.github.com/users/bollwyvl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bollwyvl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-09T12:50:20Z",
    "updated_at": "2016-06-09T12:50:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "Perhaps having:\n\ndef merge(self, target, deep=False)\n\nwould allow this to work without breaking behavior.\n\nIf the conf.d implementation (still working on a poc) did live in\ntraitlets, used this approach (merge on the d files first, then the real\nfile) and had no knowledge of extensions per se, then an extension could\nchange **anything**, allowing things like nb_conda_ kernels (which I think\nchanges the kernel_spec_manager_class) to not need bespoke install steps.\n\nThen the distinction between types of extensions would fall away... though\nthe existing cli method would still be good for user-level tweaking.\n\nOn 04:17, Thu, Jun 9, 2016 Min RK notifications@github.com wrote:\n\n> @ellisonbg https://github.com/ellisonbg yes, though it could be shimmed\n> (the CLI API doesn't need to change). Any fix involving changes to existing\n> traitlets behavior would be a more significant backward-incompatible change.\n> \n> â€”\n> You are receiving this because you authored the thread.\n> Reply to this email directly, view it on GitHub\n> https://github.com/jupyter/notebook/issues/1508#issuecomment-224842254,\n> or mute the thread\n> https://github.com/notifications/unsubscribe/AACxRBcOID_fZPEV_HHA6LeJ6om9mld_ks5qJ9ougaJpZM4Is9PS\n> .\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/224906596",
    "html_url": "https://github.com/jupyter/notebook/issues/1508#issuecomment-224906596",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1508",
    "id": 224906596,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDkwNjU5Ng==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-09T14:11:11Z",
    "updated_at": "2016-06-09T14:11:11Z",
    "author_association": "MEMBER",
    "body": "A couple of questions for that proposal:\n- What would merge(deep=True) do with a list?\n- How would you recover the current behavior of strictly setting values of container traits? For example, `c.Class.dict_trait = {}`, which currently ensures the trait is an empty dict, overriding less-specific configuration.\n\nWe do have some of this functionality, just not in json config. _Python_ config files do support modifications for container traits, which json config files do not. You can do:\n\n``` python\nc.Class.dict_trait.update({'a': 5})\n```\n\nand it will add values, rather than overriding the whole trait. We could try to define a scheme for expressing such operations in JSON config, though I am wary of defining _operations_ in such a format, rather than values.\n\nRe: nb_conda_kernels, I actually really _don't_ want installing a package like that to be able to change the kernel manager. I really do think installing a package and modifying configuration _should_ be separate steps in the vast majority of cases. What happens when I've installed two custom kernel managers, and they have registered themselves at install time, and assume that `conda install` is everything you need to do? With conf.d-style, I'm guessing the alphabetically last manager would be used. With post-link, it would at least be the most recently installed, probably. Neither one sounds like a good experience.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/224956351",
    "html_url": "https://github.com/jupyter/notebook/issues/1508#issuecomment-224956351",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1508",
    "id": 224956351,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDk1NjM1MQ==",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-09T16:49:12Z",
    "updated_at": "2016-06-09T16:50:11Z",
    "author_association": "MEMBER",
    "body": "@minrk I think I have a very simple proposal for a conf.d mechanism.\n\nImports:\n\n``` python\nfrom traitlets import List, Dict, default\nfrom traitlets.config import LoggingConfigurable\nfrom jupyter_core.paths import jupyter_config_path\nimport itertools\nfrom glob import glob\nimport json\nimport os\n```\n\nA first simple version that does not take into account precedence:\n\n``` python\nclass NotebookApp0(LoggingConfigurable):\n\n    nbextensions = List(trait=Dict()).tag(config=True)\n\n    @default('nbextensions')\n    def _default_nbextensions(self):\n        files = itertools.chain.from_iterable(glob(d + '/nbextensions.d/*.json') \n                                              for d in jupyter_config_path())\n        return list(self.json_load(file) for file in files)\n\n    def json_load(self, name):\n        with open(name) as file:\n            return json.load(file)\n```\n\nA version that takes into account directory precedence.\n\n``` python\nclass NotebookApp1(LoggingConfigurable):\n\n    nbextensions = List(trait=Dict()).tag(config=True)\n\n    @default('nbextensions')\n    def _default_nbextensions(self):\n        dicts = reversed([{\n            os.path.basename(v) : v for v in glob(d + '/nbextensions.d/*.json')\n        } for d in jupyter_config_path()])\n        return list({\n            k: self.json_load(v) \n        for d in dicts for k, v in d.items() }.values())\n\n    def json_load(self, name):\n        with open(name) as file:\n            return json.load(file)\n```\n\nNow if I have a file `bqplot.json` in `./jupyter/nbextensions.d/`, the code\n\n``` python\nn = NotebookApp1()\nn.nbextensions\n```\n\nReturns `[{'dest': 'bqplot', 'require': 'bqplot/extension', 'src': 'static'}]`.\n\n(the content of bqplot.json is)\n\n``` json\n{\n    \"src\": \"static\",\n    \"dest\": \"bqplot\",\n    \"require\": \"bqplot/extension\"\n}\n```\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/224957741",
    "html_url": "https://github.com/jupyter/notebook/issues/1508#issuecomment-224957741",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1508",
    "id": 224957741,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDk1Nzc0MQ==",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-09T16:54:26Z",
    "updated_at": "2016-06-09T16:54:26Z",
    "author_association": "MEMBER",
    "body": "This is much simpler than trying to have the whole configuration be based on configuration directories. Besides, we can enforce a schema for nbextension declarations via the `trait` and `traits` attributes of the `nbextension` config attribute.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/224958609",
    "html_url": "https://github.com/jupyter/notebook/issues/1508#issuecomment-224958609",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1508",
    "id": 224958609,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDk1ODYwOQ==",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-09T16:57:22Z",
    "updated_at": "2016-06-09T16:57:44Z",
    "author_association": "MEMBER",
    "body": "I am sure @minrk will find a clever way to make that dict comprehension even shorter.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/224959589",
    "html_url": "https://github.com/jupyter/notebook/issues/1508#issuecomment-224959589",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1508",
    "id": 224959589,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNDk1OTU4OQ==",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-09T17:00:45Z",
    "updated_at": "2016-06-09T17:00:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "My question more pertains to the fact that the frontend and traditional\ntraitlets config files live in different locations and have significantly\ndifferent purposes and symantics (the frontend config can be written by the\nlive app, but only in the user area). I think we should aim to keep the\ncommand line APIs the same, but don't know how to solve these problems\nwithout:\n\n1) breaking the location and/or content of existing config files.\n2) Creating an even uglier implementation or model.\n\nTo address Nick's point - our answer to this point is that installation and\nactivation should always be separate. I know that people (including\nourselves) have figured out how to break that and automatically enable\nthings like ipywidgets when they are installed. I think we will regret that\nin the long run for exactly the reasons you are stating. We should make\nenabling extensions easier though - preferably through a nice UI.\n\nOn Thu, Jun 9, 2016 at 7:11 AM, Min RK notifications@github.com wrote:\n\n> A couple of questions for that proposal:\n> - What would merge(deep=True) do with a list?\n> - How would you recover the current behavior of strictly setting\n>   values of container traits? For example, c.Class.dict_trait = {},\n>   which currently ensures the trait is an empty dict, overriding\n>   less-specific configuration.\n> \n> We do have some of this functionality, just not in json config. _Python_\n> config files do support modifications for container traits, which json\n> config files do not. You can do:\n> \n> c.Class.dict_trait.update({'a': 5})\n> \n> and it will add values, rather than overriding the whole trait. We could\n> try to define a scheme for expressing such operations in JSON config,\n> though I am wary of defining _operations_ in such a format, rather than\n> values.\n> \n> Re: nb_conda_kernels, I actually really _don't_ want installing a package\n> like that to be able to change the kernel manager. I really do think\n> installing a package and modifying configuration _should_ be separate\n> steps in the vast majority of cases. What happens when I've installed two\n> custom kernel managers, and they have registered themselves at install\n> time, and assume that conda install is everything you need to do? With\n> conf.d-style, I'm guessing the alphabetically last manager would be used.\n> With post-link, it would at least be the most recently installed, probably.\n> Neither one sounds like a good experience.\n> \n> â€”\n> You are receiving this because you were mentioned.\n> Reply to this email directly, view it on GitHub\n> https://github.com/jupyter/notebook/issues/1508#issuecomment-224906596,\n> or mute the thread\n> https://github.com/notifications/unsubscribe/AABr0J1k7R6p3WuZw9jQuLjwyQMfm_Erks5qKB7_gaJpZM4Is9PS\n> .\n\n## \n\nBrian E. Granger\nAssociate Professor of Physics and Data Science\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/225019697",
    "html_url": "https://github.com/jupyter/notebook/issues/1508#issuecomment-225019697",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1508",
    "id": 225019697,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTAxOTY5Nw==",
    "user": {
      "login": "bollwyvl",
      "id": 45380,
      "node_id": "MDQ6VXNlcjQ1Mzgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/45380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bollwyvl",
      "html_url": "https://github.com/bollwyvl",
      "followers_url": "https://api.github.com/users/bollwyvl/followers",
      "following_url": "https://api.github.com/users/bollwyvl/following{/other_user}",
      "gists_url": "https://api.github.com/users/bollwyvl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bollwyvl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bollwyvl/subscriptions",
      "organizations_url": "https://api.github.com/users/bollwyvl/orgs",
      "repos_url": "https://api.github.com/users/bollwyvl/repos",
      "events_url": "https://api.github.com/users/bollwyvl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bollwyvl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-09T20:41:11Z",
    "updated_at": "2016-06-09T20:41:11Z",
    "author_association": "CONTRIBUTOR",
    "body": "> our answer to this point is that installation and activation should always be separate. \n\nRight, for developers, but we had discussed that package managers need to have the ability to do this sensibly. I guess my downstream needs are now really driven by what it takes to deploy a (or hundreds) of running notebook servers each with bespoke configuration, and every extra step needed is a step that can break.\n\n> though I am wary of defining operations in such a format, rather than values.\n\nTurns out there is a standard for doing just such a thing, as we have discussed over on `nbdime`, namely JSON Patch, built on JSON pointer, etc. The python-based configuration files are are really a lot harder to reason about, not sure how they figure into all this.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/225029768",
    "html_url": "https://github.com/jupyter/notebook/issues/1508#issuecomment-225029768",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1508",
    "id": 225029768,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTAyOTc2OA==",
    "user": {
      "login": "SylvainCorlay",
      "id": 2397974,
      "node_id": "MDQ6VXNlcjIzOTc5NzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2397974?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/SylvainCorlay",
      "html_url": "https://github.com/SylvainCorlay",
      "followers_url": "https://api.github.com/users/SylvainCorlay/followers",
      "following_url": "https://api.github.com/users/SylvainCorlay/following{/other_user}",
      "gists_url": "https://api.github.com/users/SylvainCorlay/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/SylvainCorlay/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/SylvainCorlay/subscriptions",
      "organizations_url": "https://api.github.com/users/SylvainCorlay/orgs",
      "repos_url": "https://api.github.com/users/SylvainCorlay/repos",
      "events_url": "https://api.github.com/users/SylvainCorlay/events{/privacy}",
      "received_events_url": "https://api.github.com/users/SylvainCorlay/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-09T21:18:01Z",
    "updated_at": "2016-06-09T21:18:01Z",
    "author_association": "MEMBER",
    "body": "What do you guys think of my implementation proposal above (which is simpler than what was proposed earlier IMO).\n\nThe _registration_ of an nbextension would correspond to adding the corresponding file. Enabling would correspond to set an `enabled` attribute to true in its json file.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/225140108",
    "html_url": "https://github.com/jupyter/notebook/issues/1508#issuecomment-225140108",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1508",
    "id": 225140108,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTE0MDEwOA==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-10T09:43:46Z",
    "updated_at": "2016-06-10T09:43:46Z",
    "author_association": "MEMBER",
    "body": "I think @SylvainCorlay's solution is a good one if we want to go the route of supporting this principle for extensions specifically, rather than for configuration as a whole.\n\nIf we want to do this more generally for configuration that is not this list-of-extensions structure in particular, then I'm guessing we probably shouldn't do both.\n\n@ellisonbg I think we can take any of these approaches in a way that's compatible with 4.2, by updating the new-in-4.2 APIs to load into this structure. I don't think anyone is proposing the removal of the currently defined places to look for config, but a strict addition.\n\nSince we already look for config in:\n\n```\nJUPYTER_CONFIG_PATH/config_name.{py,json}\n```\n\nThe simplest implementation of conf.d in my mind is to add\n\n```\nJUPYTER_CONFIG_PATH/config_name.{py,json,d}\n```\n\nwhere all .py/.json (or we could limit it to .json) in JUPYTER_CONFIG_PATH/config_name.d/ are loaded in lexicographical order, as is the tradition of conf.d.\n\nThat would be quite a small change to traitlets.config. I implemented a simple version of this in ipython/traitlets#242. The trickier bit is the merge behavior that's actually the topic of this issue. I fixed the nbconfig side in #1526, since that was just a bug in iteration direction. The traitlets side would require doing something like @bollwyvl suggested with `merge(deep=True)`. While I brought up some issues with this being a backward-incompatible change, that doesn't mean we shouldn't do it, and the affected cases are both rare and small. I also mentioned that merging is ill-defined for lists, so I would propose that we only support merging on dicts, which is easy enough.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/225167707",
    "html_url": "https://github.com/jupyter/notebook/issues/1508#issuecomment-225167707",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1508",
    "id": 225167707,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTE2NzcwNw==",
    "user": {
      "login": "bollwyvl",
      "id": 45380,
      "node_id": "MDQ6VXNlcjQ1Mzgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/45380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bollwyvl",
      "html_url": "https://github.com/bollwyvl",
      "followers_url": "https://api.github.com/users/bollwyvl/followers",
      "following_url": "https://api.github.com/users/bollwyvl/following{/other_user}",
      "gists_url": "https://api.github.com/users/bollwyvl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bollwyvl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bollwyvl/subscriptions",
      "organizations_url": "https://api.github.com/users/bollwyvl/orgs",
      "repos_url": "https://api.github.com/users/bollwyvl/repos",
      "events_url": "https://api.github.com/users/bollwyvl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bollwyvl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-10T12:21:57Z",
    "updated_at": "2016-06-10T12:21:57Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks @minrk, @sylvancorley,  looks like good stuff.\n\nI am still in/am the camp of \"let's configure it all,\" but appreciate\nanything that moves us incrementally forward.\n\nI think the list merging behavior is a fine thing to take off the table, as\nnot even a patch-like spec can solve that one satisfactorily. i think that\nwas part of the complexity we ran into with nbviewer entry_points pr.\n\n@ellisonbg the ring 0 configurator/relauncher UI direction sounds good as\nwell! Sounds like the electron thing...\n\nOn 04:43, Fri, Jun 10, 2016 Min RK notifications@github.com wrote:\n\n> I think @SylvainCorlay https://github.com/SylvainCorlay's solution is a\n> good one if we want to go the route of supporting this principle for\n> extensions specifically, rather than for configuration as a whole.\n> \n> If we want to do this more generally for configuration that is not this\n> list-of-extensions structure in particular, then I'm guessing we probably\n> shouldn't do both.\n> \n> @ellisonbg https://github.com/ellisonbg I think we can take any of\n> these approaches in a way that's compatible with 4.2, by updating the\n> new-in-4.2 APIs to load into this structure. I don't think anyone is\n> proposing the removal of the currently defined places to look for config,\n> but a strict addition.\n> \n> Since we already look for config in:\n> \n> JUPYTER_CONFIG_PATH/config_name.{py,json}\n> \n> The simplest implementation of conf.d in my mind is to add\n> \n> JUPYTER_CONFIG_PATH/config_name.{py,json,d}\n> \n> where all .py/.json (or we could limit it to .json) in\n> JUPYTER_CONFIG_PATH/config_name.d/ are loaded in lexicographical order, as\n> is the tradition of conf.d.\n> \n> That would be quite a small change to traitlets.config. I implemented a\n> simple version of this in ipython/traitlets#242\n> https://github.com/ipython/traitlets/pull/242. The trickier bit is the\n> merge behavior that's actually the topic of this issue. I fixed the\n> nbconfig side in #1526 https://github.com/jupyter/notebook/pull/1526,\n> since that was just a bug in iteration direction. The traitlets side would\n> require doing something like @bollwyvl https://github.com/bollwyvl\n> suggested with merge(deep=True). While I b rought up some issues with\n> this being a backward-incompatible change, that doesn't mean we shouldn't\n> do it, and the affected cases are both rare and small. I also mentioned\n> that merging is ill-defined for lists, so I would propose that we only\n> support merging on dicts, which is easy enough.\n> \n> â€”\n> You are receiving this because you were mentioned.\n> \n> Reply to this email directly, view it on GitHub\n> https://github.com/jupyter/notebook/issues/1508#issuecomment-225140108,\n> or mute the thread\n> https://github.com/notifications/unsubscribe/AACxRNadYPaKPXMxcPM7G89V9VhW-rLRks5qKTHWgaJpZM4Is9PS\n> .\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/225170815",
    "html_url": "https://github.com/jupyter/notebook/issues/1508#issuecomment-225170815",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1508",
    "id": 225170815,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNTE3MDgxNQ==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-10T12:37:44Z",
    "updated_at": "2016-06-10T13:56:12Z",
    "author_association": "MEMBER",
    "body": "Yeah, and any list-like configurable that wants merge can always switch from a list to a dict of bools, like we did with server extensions.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/237873807",
    "html_url": "https://github.com/jupyter/notebook/issues/1508#issuecomment-237873807",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1508",
    "id": 237873807,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNzg3MzgwNw==",
    "user": {
      "login": "bollwyvl",
      "id": 45380,
      "node_id": "MDQ6VXNlcjQ1Mzgw",
      "avatar_url": "https://avatars.githubusercontent.com/u/45380?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bollwyvl",
      "html_url": "https://github.com/bollwyvl",
      "followers_url": "https://api.github.com/users/bollwyvl/followers",
      "following_url": "https://api.github.com/users/bollwyvl/following{/other_user}",
      "gists_url": "https://api.github.com/users/bollwyvl/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bollwyvl/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bollwyvl/subscriptions",
      "organizations_url": "https://api.github.com/users/bollwyvl/orgs",
      "repos_url": "https://api.github.com/users/bollwyvl/repos",
      "events_url": "https://api.github.com/users/bollwyvl/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bollwyvl/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-05T15:00:20Z",
    "updated_at": "2016-08-05T15:00:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "As part of this, perhaps we add a `--conf-d` flag to the various config changers?\n\n```\njupyter serverextension enable foo --py --sys-prefix --conf-d=foo\n```\n\nto create a `$PREFIX/etc/jupyter/jupyter_notebook_config.json.d/foo.json`?\n\nAdditionally, more generally, I'd love a high-level `config` subcommand that knew how to work with _any_ `Application`:\n\n```\njupyter config nbconvert --sys-prefix --conf-d=foo \\\n  --NbConvertApp.executor_class=foo.KernelEnvExecutor [... more config]\n```\n\nor take a JSON file, I suppose.\n\nThis would remove the need for extension maintainers/packagers having to maintain things like `foo.enable`, where we have to use nasty business like `BaseJSONConfigLoader`, etc.\n\nAdditionally, `jupyter config <subcommand>` could show a pretty listing of exactly what would be used if the app was loaded, which would be really helpful for both supporting config issues, and creating/exporting reproducible configurations.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/260096404",
    "html_url": "https://github.com/jupyter/notebook/issues/1508#issuecomment-260096404",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1508",
    "id": 260096404,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MDA5NjQwNA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-12T02:36:24Z",
    "updated_at": "2016-11-12T02:36:24Z",
    "author_association": "MEMBER",
    "body": "Can we bump this from 4.3 to a later release? I'm aware that there are various fixes it would be good to get out to users, and this sounds like a bit of a bigger task.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/262253998",
    "html_url": "https://github.com/jupyter/notebook/issues/1508#issuecomment-262253998",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1508",
    "id": 262253998,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI2MjI1Mzk5OA==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-11-22T14:26:42Z",
    "updated_at": "2016-11-22T14:26:42Z",
    "author_association": "MEMBER",
    "body": "@takluyver bumped",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/277683410",
    "html_url": "https://github.com/jupyter/notebook/issues/1508#issuecomment-277683410",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1508",
    "id": 277683410,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NzY4MzQxMA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-06T13:39:54Z",
    "updated_at": "2017-02-06T13:39:54Z",
    "author_association": "MEMBER",
    "body": "@minrk Am I right that #2108 fixes/works around this as much as we intend to for 5.0?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/277768037",
    "html_url": "https://github.com/jupyter/notebook/issues/1508#issuecomment-277768037",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1508",
    "id": 277768037,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3Nzc2ODAzNw==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-06T18:22:54Z",
    "updated_at": "2017-02-06T18:22:54Z",
    "author_association": "MEMBER",
    "body": "@takluyver that's my understanding.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/277860668",
    "html_url": "https://github.com/jupyter/notebook/issues/1508#issuecomment-277860668",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1508",
    "id": 277860668,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3Nzg2MDY2OA==",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-07T00:31:51Z",
    "updated_at": "2017-02-07T00:31:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "@minrk can you summarize how all this will work as of 5.0? I want to make sure this stuff is sufficiently resolved that we don't have to change it again before moving to the conf.d approach.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/277943076",
    "html_url": "https://github.com/jupyter/notebook/issues/1508#issuecomment-277943076",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1508",
    "id": 277943076,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3Nzk0MzA3Ng==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-07T09:19:38Z",
    "updated_at": "2017-02-07T09:19:38Z",
    "author_association": "MEMBER",
    "body": "@ellisonbg the only change for 5.0 is that `nbserver_extensions` from various config levels is merged in the same way as nbextensions, rather than clobbering at each level. Everything else is unchanged.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/277943604",
    "html_url": "https://github.com/jupyter/notebook/issues/1508#issuecomment-277943604",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1508",
    "id": 277943604,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3Nzk0MzYwNA==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-07T09:21:56Z",
    "updated_at": "2017-02-07T09:21:56Z",
    "author_association": "MEMBER",
    "body": "Closing here, since the titular issue is fixed: user wins, merge happens, nbextensions and serverextensions should behave the same now.",
    "performed_via_github_app": null
  }
]
