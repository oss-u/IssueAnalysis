[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/193929467",
    "html_url": "https://github.com/jupyter/notebook/issues/1185#issuecomment-193929467",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1185",
    "id": 193929467,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MzkyOTQ2Nw==",
    "user": {
      "login": "julienr",
      "id": 506602,
      "node_id": "MDQ6VXNlcjUwNjYwMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/506602?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/julienr",
      "html_url": "https://github.com/julienr",
      "followers_url": "https://api.github.com/users/julienr/followers",
      "following_url": "https://api.github.com/users/julienr/following{/other_user}",
      "gists_url": "https://api.github.com/users/julienr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/julienr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/julienr/subscriptions",
      "organizations_url": "https://api.github.com/users/julienr/orgs",
      "repos_url": "https://api.github.com/users/julienr/repos",
      "events_url": "https://api.github.com/users/julienr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/julienr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-08T19:22:13Z",
    "updated_at": "2016-03-08T19:22:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "I think this is because unused attachments are garbage collected on notebook save (this should only happen for manual save though).\nI'm not sure how to fix that, short of trying to determine if an attachment is present in the clipboard.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/193970654",
    "html_url": "https://github.com/jupyter/notebook/issues/1185#issuecomment-193970654",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1185",
    "id": 193970654,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5Mzk3MDY1NA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-08T21:14:46Z",
    "updated_at": "2016-03-08T21:14:46Z",
    "author_association": "MEMBER",
    "body": "> I'm not sure how to fix that, short of trying to determine if an attachment is present in the clipboard.\n\nyou could garbage collect only what is sent on the wire, not what is in memory in the frontend. \n\nit's probably a matter of using `copy` at the right place. \n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/195516235",
    "html_url": "https://github.com/jupyter/notebook/issues/1185#issuecomment-195516235",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1185",
    "id": 195516235,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTUxNjIzNQ==",
    "user": {
      "login": "julienr",
      "id": 506602,
      "node_id": "MDQ6VXNlcjUwNjYwMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/506602?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/julienr",
      "html_url": "https://github.com/julienr",
      "followers_url": "https://api.github.com/users/julienr/followers",
      "following_url": "https://api.github.com/users/julienr/following{/other_user}",
      "gists_url": "https://api.github.com/users/julienr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/julienr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/julienr/subscriptions",
      "organizations_url": "https://api.github.com/users/julienr/orgs",
      "repos_url": "https://api.github.com/users/julienr/repos",
      "events_url": "https://api.github.com/users/julienr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/julienr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-11T19:40:10Z",
    "updated_at": "2016-03-11T19:40:10Z",
    "author_association": "CONTRIBUTOR",
    "body": "The garbage collection is done on the JS side. So as soon as you cut the content from the markdown cell, there is now way for the JS to know if it was erased or put in the clipboard. \n\nThe solution I see is to have the garbage collection happen on the python side, so the attachments are kept in memory on the JS side until the tab is closed. If I understand correctly, this is the solution you proposed.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/195528112",
    "html_url": "https://github.com/jupyter/notebook/issues/1185#issuecomment-195528112",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1185",
    "id": 195528112,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTUyODExMg==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-11T20:14:21Z",
    "updated_at": "2016-03-11T20:14:21Z",
    "author_association": "MEMBER",
    "body": "> The solution I see is to have the garbage collection happen on the python side, so the attachments are kept in memory on the JS side until the tab is closed. If I understand correctly, this is the solution you proposed.\n\nNo you don't need to, just don't mutate that current state client side and send a cleaned **copy** of the json. \n\n```\nNotebook.prototype.save = function(){\n    var json = this.to_json()\n\n    var cleaned_json = remove_garbage(json)\n\n    this.content.manager.save(cleaned_json)\n}\n```\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/195529433",
    "html_url": "https://github.com/jupyter/notebook/issues/1185#issuecomment-195529433",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1185",
    "id": 195529433,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTUyOTQzMw==",
    "user": {
      "login": "julienr",
      "id": 506602,
      "node_id": "MDQ6VXNlcjUwNjYwMg==",
      "avatar_url": "https://avatars.githubusercontent.com/u/506602?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/julienr",
      "html_url": "https://github.com/julienr",
      "followers_url": "https://api.github.com/users/julienr/followers",
      "following_url": "https://api.github.com/users/julienr/following{/other_user}",
      "gists_url": "https://api.github.com/users/julienr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/julienr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/julienr/subscriptions",
      "organizations_url": "https://api.github.com/users/julienr/orgs",
      "repos_url": "https://api.github.com/users/julienr/repos",
      "events_url": "https://api.github.com/users/julienr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/julienr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-11T20:17:55Z",
    "updated_at": "2016-03-11T20:17:55Z",
    "author_association": "CONTRIBUTOR",
    "body": "Ah that's smart ! Will do this, thanks.\nOn Mar 11, 2016 9:14 PM, \"Matthias Bussonnier\" notifications@github.com\nwrote:\n\n> The solution I see is to have the garbage collection happen on the python\n> side, so the attachments are kept in memory on the JS side until the tab is\n> closed. If I understand correctly, this is the solution you proposed.\n> \n> No you don't need to, just don't mutate that current state client side and\n> send a cleaned _copy_ of the json.\n> \n> Notebook.prototype.save = function(){\n>     var json = this.to_json()\n> \n> ```\n> var cleaned_json = remove_garbage(json)\n> \n> this.content.manager.save(cleaned_json)\n> ```\n> \n> }\n> \n> â€”\n> Reply to this email directly or view it on GitHub\n> https://github.com/jupyter/notebook/issues/1185#issuecomment-195528112.\n",
    "performed_via_github_app": null
  }
]
