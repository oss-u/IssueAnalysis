[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/358277201",
    "html_url": "https://github.com/jupyter/notebook/issues/3224#issuecomment-358277201",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3224",
    "id": 358277201,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODI3NzIwMQ==",
    "user": {
      "login": "OrangeBot",
      "id": 30196026,
      "node_id": "MDQ6VXNlcjMwMTk2MDI2",
      "avatar_url": "https://avatars.githubusercontent.com/u/30196026?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/OrangeBot",
      "html_url": "https://github.com/OrangeBot",
      "followers_url": "https://api.github.com/users/OrangeBot/followers",
      "following_url": "https://api.github.com/users/OrangeBot/following{/other_user}",
      "gists_url": "https://api.github.com/users/OrangeBot/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/OrangeBot/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/OrangeBot/subscriptions",
      "organizations_url": "https://api.github.com/users/OrangeBot/orgs",
      "repos_url": "https://api.github.com/users/OrangeBot/repos",
      "events_url": "https://api.github.com/users/OrangeBot/events{/privacy}",
      "received_events_url": "https://api.github.com/users/OrangeBot/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-17T11:29:49Z",
    "updated_at": "2018-01-17T11:29:49Z",
    "author_association": "NONE",
    "body": "This is quite straightforward hypothesis, but still: maybe remote server becomes overloaded and cannot handle the load? Some garbage collector issues? Did you check resource usage on remote server (you can try to check notebook memory consumption as well). Do you use heavy nbextensions? I've experienced problems with memory in some of such cases.\r\nOther potential issue is that connection somehow becomes overloaded, but i have little knowledge of that area.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/358385977",
    "html_url": "https://github.com/jupyter/notebook/issues/3224#issuecomment-358385977",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3224",
    "id": 358385977,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODM4NTk3Nw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-17T17:49:41Z",
    "updated_at": "2018-01-17T17:49:41Z",
    "author_association": "MEMBER",
    "body": "Is the kernel busy before you run those cells when they're slow? There should be a little circle in the top right of the interface. It's filled when the kernel is busy, and open when it's idle:\r\n\r\n![screenshot from 2018-01-17 17-48-14](https://user-images.githubusercontent.com/327925/35058055-abe67bf4-fbae-11e7-8da7-e957bccbf7bd.png)",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/358410413",
    "html_url": "https://github.com/jupyter/notebook/issues/3224#issuecomment-358410413",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3224",
    "id": 358410413,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODQxMDQxMw==",
    "user": {
      "login": "jmhsi",
      "id": 12853718,
      "node_id": "MDQ6VXNlcjEyODUzNzE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/12853718?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmhsi",
      "html_url": "https://github.com/jmhsi",
      "followers_url": "https://api.github.com/users/jmhsi/followers",
      "following_url": "https://api.github.com/users/jmhsi/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmhsi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmhsi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmhsi/subscriptions",
      "organizations_url": "https://api.github.com/users/jmhsi/orgs",
      "repos_url": "https://api.github.com/users/jmhsi/repos",
      "events_url": "https://api.github.com/users/jmhsi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmhsi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-17T19:11:43Z",
    "updated_at": "2018-01-17T19:11:43Z",
    "author_association": "NONE",
    "body": "@OrangeBot I'll try and check those out.\r\n@takluyver In both cases the kernel is not busy before I run those 3 cells. In the first case its a fresh kernel, and in the second case I wait for all previous cells to finish and then run the 3 datetime cells.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/358610307",
    "html_url": "https://github.com/jupyter/notebook/issues/3224#issuecomment-358610307",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3224",
    "id": 358610307,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODYxMDMwNw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-18T10:50:43Z",
    "updated_at": "2018-01-18T10:50:43Z",
    "author_association": "MEMBER",
    "body": "#3234 just made me think of garbage collection. Is it possible that Python's garbage collector is being triggered and having to do a lot of work to clear up objects? You can temporarily turn the garbage collector off by running [gc.disable()](https://docs.python.org/3/library/gc.html#gc.disable).",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/358796543",
    "html_url": "https://github.com/jupyter/notebook/issues/3224#issuecomment-358796543",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3224",
    "id": 358796543,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1ODc5NjU0Mw==",
    "user": {
      "login": "jmhsi",
      "id": 12853718,
      "node_id": "MDQ6VXNlcjEyODUzNzE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/12853718?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmhsi",
      "html_url": "https://github.com/jmhsi",
      "followers_url": "https://api.github.com/users/jmhsi/followers",
      "following_url": "https://api.github.com/users/jmhsi/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmhsi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmhsi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmhsi/subscriptions",
      "organizations_url": "https://api.github.com/users/jmhsi/orgs",
      "repos_url": "https://api.github.com/users/jmhsi/repos",
      "events_url": "https://api.github.com/users/jmhsi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmhsi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-01-18T22:02:56Z",
    "updated_at": "2018-01-18T22:06:25Z",
    "author_association": "NONE",
    "body": "@takluyver what @SergYevtukhoff mentioned in #3234 sounds just like my problem. The gif also looks similar to problems I experience. I do often have to interrupt and then it will work pretty quickly on the second run of the cell. I'll try gc.disable().",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/365508675",
    "html_url": "https://github.com/jupyter/notebook/issues/3224#issuecomment-365508675",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3224",
    "id": 365508675,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTUwODY3NQ==",
    "user": {
      "login": "jmhsi",
      "id": 12853718,
      "node_id": "MDQ6VXNlcjEyODUzNzE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/12853718?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmhsi",
      "html_url": "https://github.com/jmhsi",
      "followers_url": "https://api.github.com/users/jmhsi/followers",
      "following_url": "https://api.github.com/users/jmhsi/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmhsi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmhsi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmhsi/subscriptions",
      "organizations_url": "https://api.github.com/users/jmhsi/orgs",
      "repos_url": "https://api.github.com/users/jmhsi/repos",
      "events_url": "https://api.github.com/users/jmhsi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmhsi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-14T06:25:46Z",
    "updated_at": "2018-02-14T06:25:46Z",
    "author_association": "NONE",
    "body": "Wanted to mention that I'm still running into this problem. Also, [#3303](https://github.com/jupyter/notebook/issues/3303) seems to be having the same issue. When I ran gc.disable(), I ended up running into memory errors. I'd like to try and help getting to the bottom of this, and would gladly provide anything that might be useful.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/365576441",
    "html_url": "https://github.com/jupyter/notebook/issues/3224#issuecomment-365576441",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3224",
    "id": 365576441,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NTU3NjQ0MQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-14T11:33:45Z",
    "updated_at": "2018-02-14T11:33:45Z",
    "author_association": "MEMBER",
    "body": "Yeah, if you run `gc.disable()`, it won't be able to clean up unused memory, so you eventually need to run garbage collection yourself (`gc.collect()`) or turn it back on (`gc.enable()`).\r\n\r\nThe question is whether, in the meantime, turning it off eliminates the random slowdowns. If it does, that validates the guess that the slowdowns are due to garbage collection. Or if you run into memory errors before you can see if there's a difference, that also suggests there's a problem with something allocating a lot of memory. Then the problem becomes working out what's doing that.\r\n\r\nIf you still see the same kind of slowdown with garbage collection disabled, then we'll need to look elsewhere. Though I don't really know where at the moment...",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/366127736",
    "html_url": "https://github.com/jupyter/notebook/issues/3224#issuecomment-366127736",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3224",
    "id": 366127736,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2NjEyNzczNg==",
    "user": {
      "login": "jmhsi",
      "id": 12853718,
      "node_id": "MDQ6VXNlcjEyODUzNzE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/12853718?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmhsi",
      "html_url": "https://github.com/jmhsi",
      "followers_url": "https://api.github.com/users/jmhsi/followers",
      "following_url": "https://api.github.com/users/jmhsi/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmhsi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmhsi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmhsi/subscriptions",
      "organizations_url": "https://api.github.com/users/jmhsi/orgs",
      "repos_url": "https://api.github.com/users/jmhsi/repos",
      "events_url": "https://api.github.com/users/jmhsi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmhsi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-16T02:26:03Z",
    "updated_at": "2018-02-16T07:56:56Z",
    "author_association": "NONE",
    "body": "General info: On Macbook Pro connecting to my Ubuntu 16.04 server (16GB ram, 16GB swap).\r\n\r\nSo I've been trying various experiments in the regular python shell, IPython shell, and in a jupyter notebook, all while monitoring ram and swap with htop. Ultimately, I noticed that I see the problem that I initially described (long run times on cells and/or commands that previously ran fast) once I max out my RAM and start using swap. Also after RAM has been maxed (even if RAM is freed up later in the notebook), cells/commands can possibly continue to run slowly. What confused me was how my RAM could remain maxed after I would delete objects (del object) after being done with them, to the point that the only variable I see of any remarkable size is my dataframe of interest at 2.7GB based on df.info(memory_usage='deep'). \r\n\r\nI was using this function (found online from stack overflow, slightly altered) to try and see what could possibly be using up so much memory.\r\n\r\n```\r\ndef check_mem():\r\n    # These are the usual ipython objects, including this one you are creating\r\n    ipython_vars = ['In', 'Out', 'exit', 'quit', 'get_ipython', 'ipython_vars']\r\n\r\n    # Get a sorted list of the objects and their sizes\r\n    print(sorted([(x, sys.getsizeof(globals().get(x))) for x in globals() if not x.startswith('_') and x not in sys.modules and x not in ipython_vars], key=lambda x: x[1], reverse=True))\r\n```\r\n\r\nOutput of this was\r\n```\r\n[('examine', 2907181481), ('CategoricalDtype', 1056), ('NamespaceMagics', 888), ('month_dict', 648), ('files', 192), ('var_dic_list', 136), ('tqdm_notebook', 136), ('check_mem', 136), ('date_cols', 96), ('data_path', 92), ('pd', 80), ('np', 80), ('plt', 80), ('dc', 80), ('getsizeof', 72), ('filename', 71)]\r\n```\r\n'examine' is my dataframe of interest. I was thinking that perhaps previous objects I had created were still being referenced by something so I decided to do some checks with large numpy arrays in the IPython shell and python shell. \r\n\r\nIn the IPython shell I run out of memory even when I'm not assigning the numpy arrays to anything:\r\n<img width=\"1435\" alt=\"screen shot 2018-02-15 at 11 18 53 pm\" src=\"https://user-images.githubusercontent.com/12853718/36297284-b88a38dc-12a6-11e8-83ce-50221348fabb.png\">\r\n\r\n\r\nWhereas in the python shell I can run the same command over and over without my memory and swap increasing:\r\n<img width=\"1422\" alt=\"screen shot 2018-02-15 at 6 09 56 pm\" src=\"https://user-images.githubusercontent.com/12853718/36290756-e9f36e28-127b-11e8-9d88-216452586d11.png\">\r\n\r\nSo the easy and immediate \"fix\" seems to be to get more RAM. Still confused about the IPython memory usage though. I thought I was freeing space with del object and what not. I was also looking at stack overflow posts which recommended things like %reset out but that also didn't seem to free up memory:\r\n<img width=\"1414\" alt=\"screen shot 2018-02-15 at 6 18 29 pm\" src=\"https://user-images.githubusercontent.com/12853718/36290882-b45db088-127c-11e8-9a27-25a9b4c61fd3.png\">\r\n\r\nI also decided to do another test of loading a pandas dataframe multiple times in a jupyter notebook, IPython shell, and python shell. Interestingly, all three experience slowdowns with repeated execution of the blocks of code (jupyter notebook slowing down the most) as RAM is used and swap starts being used:\r\n\r\nIn the notebook note that code cell 2 was queued at 34:01 and finished executing at 36:04, yet elapsed time was 7-some seconds?\r\n<img width=\"1439\" alt=\"screen shot 2018-02-15 at 11 35 53 pm\" src=\"https://user-images.githubusercontent.com/12853718/36297880-f1ef3746-12a9-11e8-8594-9f5ebcf6f6e2.png\">\r\n<img width=\"1440\" alt=\"screen shot 2018-02-15 at 11 36 14 pm\" src=\"https://user-images.githubusercontent.com/12853718/36297885-f88cf53e-12a9-11e8-8eff-c3a5aebad3e0.png\">\r\n\r\nIPython goes from 2-some seconds of elapsed time to over 13 as repeated code execution causes memory to fill and starts using swap:\r\n<img width=\"1440\" alt=\"screen shot 2018-02-15 at 11 37 02 pm\" src=\"https://user-images.githubusercontent.com/12853718/36297928-3425594c-12aa-11e8-89a9-e3e557baacba.png\">\r\n<img width=\"1439\" alt=\"screen shot 2018-02-15 at 11 38 03 pm\" src=\"https://user-images.githubusercontent.com/12853718/36297939-414b2cf0-12aa-11e8-812f-11145218126f.png\">\r\n\r\npython behaves similarly to IPython, starting fast at 2-some seconds but ending with over 17 as memory fills and swap starts being used:\r\n<img width=\"1437\" alt=\"screen shot 2018-02-15 at 11 50 06 pm\" src=\"https://user-images.githubusercontent.com/12853718/36298094-27baf83c-12ab-11e8-94f3-bd8a97ce16d8.png\">\r\n<img width=\"1437\" alt=\"screen shot 2018-02-15 at 11 50 22 pm\" src=\"https://user-images.githubusercontent.com/12853718/36298096-2e1fb686-12ab-11e8-9d3b-7b619df6e398.png\">\r\n<img width=\"1440\" alt=\"screen shot 2018-02-15 at 11 51 05 pm\" src=\"https://user-images.githubusercontent.com/12853718/36298097-30285d20-12ab-11e8-913c-c638361845ac.png\">\r\n\r\n\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/381020032",
    "html_url": "https://github.com/jupyter/notebook/issues/3224#issuecomment-381020032",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3224",
    "id": 381020032,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTAyMDAzMg==",
    "user": {
      "login": "zertrin",
      "id": 1447163,
      "node_id": "MDQ6VXNlcjE0NDcxNjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1447163?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zertrin",
      "html_url": "https://github.com/zertrin",
      "followers_url": "https://api.github.com/users/zertrin/followers",
      "following_url": "https://api.github.com/users/zertrin/following{/other_user}",
      "gists_url": "https://api.github.com/users/zertrin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zertrin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zertrin/subscriptions",
      "organizations_url": "https://api.github.com/users/zertrin/orgs",
      "repos_url": "https://api.github.com/users/zertrin/repos",
      "events_url": "https://api.github.com/users/zertrin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zertrin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-13T04:31:56Z",
    "updated_at": "2018-04-13T04:31:56Z",
    "author_association": "NONE",
    "body": "I am experiencing similar issues as OP since many months already.\r\n\r\nFirst off, disabling GC has no impact, and it seems to be that it's a wrong direction to investigate.\r\n\r\nI also load some \"big\" (200k rows, 30 columns with various datatypes) and notice slowdown of the kernel *after* the content cell executes.\r\n\r\nTo be clear, the code inside the cell executes fine and fast (a few ms), but the kernel seems to flicker and keep in busy state afterwards, so that the next cell gets executed a few seconds later (typically around 3 seconds, but it seems to increase with the length of the notebook). It doesn't matter what the content of the cell is. It can be a trivial statement like `a = 1`, and still the kernel stays busy flickering for some seconds afterwards.\r\n\r\nLet me also clarify what I mean by \"flickering\": after the code inside the cell finished executing, the kernel busy indicator very briefly go to idle (like during 1/20th of a sec), then goes back to busy for some time (more than 100 ms but usually less than one second), then flicker back to idle for extremely brief time, then again goes to busy and flicker idle again, and so on for some time...\r\n\r\nSee for yourself:\r\n\r\n![jupyter_busy_flickering](https://user-images.githubusercontent.com/1447163/38716998-981e97c2-3f16-11e8-94c2-3b4deb1c0db0.gif)\r\n\r\nI would like to be able to know what the kernel is doing after executing the content of the cell, anyone knows how to get some insight into that (some kind of debug mode which reports which events trigger the business of the kernel)?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/381032016",
    "html_url": "https://github.com/jupyter/notebook/issues/3224#issuecomment-381032016",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3224",
    "id": 381032016,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTAzMjAxNg==",
    "user": {
      "login": "zertrin",
      "id": 1447163,
      "node_id": "MDQ6VXNlcjE0NDcxNjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1447163?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zertrin",
      "html_url": "https://github.com/zertrin",
      "followers_url": "https://api.github.com/users/zertrin/followers",
      "following_url": "https://api.github.com/users/zertrin/following{/other_user}",
      "gists_url": "https://api.github.com/users/zertrin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zertrin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zertrin/subscriptions",
      "organizations_url": "https://api.github.com/users/zertrin/orgs",
      "repos_url": "https://api.github.com/users/zertrin/repos",
      "events_url": "https://api.github.com/users/zertrin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zertrin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-13T05:57:27Z",
    "updated_at": "2018-04-13T05:57:27Z",
    "author_association": "NONE",
    "body": "Ok I think I have a workaround: at the beginning of the notebook, I run the following cell:\r\n\r\n    %config Completer.use_jedi = False\r\n\r\nThen I don't observe the slowdown anymore after the cell finished execution.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/381033034",
    "html_url": "https://github.com/jupyter/notebook/issues/3224#issuecomment-381033034",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3224",
    "id": 381033034,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTAzMzAzNA==",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-13T06:04:15Z",
    "updated_at": "2018-04-13T06:04:15Z",
    "author_association": "MEMBER",
    "body": "Very interesting! My guess is that this may be an issue with ipython or ipykernel, then. @takluyver would probably know better what might be going on if it is about using jedi. Possibly @Carreau too.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/381832692",
    "html_url": "https://github.com/jupyter/notebook/issues/3224#issuecomment-381832692",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3224",
    "id": 381832692,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTgzMjY5Mg==",
    "user": {
      "login": "zertrin",
      "id": 1447163,
      "node_id": "MDQ6VXNlcjE0NDcxNjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1447163?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zertrin",
      "html_url": "https://github.com/zertrin",
      "followers_url": "https://api.github.com/users/zertrin/followers",
      "following_url": "https://api.github.com/users/zertrin/following{/other_user}",
      "gists_url": "https://api.github.com/users/zertrin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zertrin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zertrin/subscriptions",
      "organizations_url": "https://api.github.com/users/zertrin/orgs",
      "repos_url": "https://api.github.com/users/zertrin/repos",
      "events_url": "https://api.github.com/users/zertrin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zertrin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-17T04:12:24Z",
    "updated_at": "2018-04-17T04:12:24Z",
    "author_association": "NONE",
    "body": "Sadly I have to report that the workaround I posted above does not always work. It did solve the issue temporarily but right know the issue is back.\r\n\r\n**Is there a way to debug why the kernel is busy and what is it doing during the time after the content of the cell finished executing?**",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/381878865",
    "html_url": "https://github.com/jupyter/notebook/issues/3224#issuecomment-381878865",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3224",
    "id": 381878865,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MTg3ODg2NQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-17T07:32:18Z",
    "updated_at": "2018-04-17T07:32:18Z",
    "author_association": "MEMBER",
    "body": "> In the IPython shell I run out of memory even when I'm not assigning the numpy arrays to anything:\r\n\r\nWhen IPython displays an object, it keeps a reference to it so that you can do operations with it like `Out[5] + 2`. If the objects you're displaying are big, this means they will stay in memory. You can discard all this with `%reset out`, or delete a single object from IPython with `%xdel x` (where x is the variable name).\r\n\r\nYou can disable this entirely with the option [InteractiveShell.cache_size](http://ipython.readthedocs.io/en/stable/config/options/terminal.html#configtrait-InteractiveShell.cache_size).\r\n\r\n> %config Completer.use_jedi = False\r\n\r\nIt's interesting that that worked even temporarily. I don't know how Jedi could be involved in this.\r\n\r\n> Is there a way to debug why the kernel is busy and what is it doing during the time after the content of the cell finished executing?\r\n\r\nA couple of things we could try:\r\n\r\n- Check `get_ipython().events.callbacks` to see if anything has registered a post_execute or post_run_cell callback.\r\n- Try to interrupt the kernel while it's doing this, to see if we can get it to produce a traceback.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/382295776",
    "html_url": "https://github.com/jupyter/notebook/issues/3224#issuecomment-382295776",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3224",
    "id": 382295776,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjI5NTc3Ng==",
    "user": {
      "login": "zertrin",
      "id": 1447163,
      "node_id": "MDQ6VXNlcjE0NDcxNjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1447163?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zertrin",
      "html_url": "https://github.com/zertrin",
      "followers_url": "https://api.github.com/users/zertrin/followers",
      "following_url": "https://api.github.com/users/zertrin/following{/other_user}",
      "gists_url": "https://api.github.com/users/zertrin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zertrin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zertrin/subscriptions",
      "organizations_url": "https://api.github.com/users/zertrin/orgs",
      "repos_url": "https://api.github.com/users/zertrin/repos",
      "events_url": "https://api.github.com/users/zertrin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zertrin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-18T07:46:31Z",
    "updated_at": "2018-04-18T07:46:31Z",
    "author_association": "NONE",
    "body": "Ok I've dug a bit further.\r\n\r\nFirst off:\r\n\r\n> * Check get_ipython().events.callbacks to see if anything has registered a post_execute or post_run_cell callback.\r\n\r\ngives\r\n\r\n```\r\n{'post_execute': [<function matplotlib.pyplot.install_repl_displayhook.<locals>.post_execute>,\r\n  <function ipykernel.pylab.backend_inline.flush_figures>,\r\n  <function ipykernel.pylab.backend_inline.flush_figures>],\r\n 'post_run_cell': [],\r\n 'pre_execute': [<bound method InteractiveShell._clear_warning_registry of <ipykernel.zmqshell.ZMQInteractiveShell object at 0x7f4151b7e240>>],\r\n 'pre_run_cell': [],\r\n 'shell_initialized': []}\r\n```\r\n\r\nAnd\r\n\r\n> Try to interrupt the kernel while it's doing this, to see if we can get it to produce a traceback.\r\n\r\ndid not work.\r\n\r\nNow in my `jupyter_notebook_config.py` I've activated the option\r\n\r\n    c.Session.debug = True\r\n\r\nand managed to trigger the issue (partially.)\r\n\r\nFor this, I run my notebook a bit, load some data, do some analysis (which I can't publish sorry). Then I restart the kernel, and play with the notebook a bit, reloading data, reanalysing dataframes, and so on.\r\n\r\nAt some point I notice the flickering busy indicator again. So I decide to run a very simple cell with just `print('test')`, and sure enough, after the cell finished to execute, the flickering happened, but since I didn't use the notebook for a long time before, it's shorter than previously. (I have the distinct feeling that the issue increases in severity the longer the notebook is and the longer you use it without closing it, this guess seems corroborated with the results below).\r\n\r\nI have collected the debugging output of just running this very simple cell (`print('test')`) here: https://haste.zertrin.org/dicigarubu.txt (raw version https://haste.zertrin.org/raw/dicigarubu )\r\n\r\nSome things that I noticed:\r\n\r\n* Debug output related to only the execution of the content of the cell spans lines 1 to 279\r\n* From line 280 onwards, the debug output is related to another hidden execution of `print(var_dic_list())` (which does not come from me): \r\n\r\n```\r\nApr 18 13:16:36 server1 jupyter[27570]: {'buffers': [],\r\nApr 18 13:16:36 server1 jupyter[27570]:  'content': {'allow_stdin': False,\r\nApr 18 13:16:36 server1 jupyter[27570]:              'code': 'print(var_dic_list())',\r\nApr 18 13:16:36 server1 jupyter[27570]:              'silent': False,\r\nApr 18 13:16:36 server1 jupyter[27570]:              'store_history': False,\r\nApr 18 13:16:36 server1 jupyter[27570]:              'user_expressions': {}},\r\nApr 18 13:16:36 server1 jupyter[27570]:  'header': {'date': datetime.datetime(2018, 4, 18, 5, 16, 36, 678382, tzinfo=datetime.timezone.utc),\r\nApr 18 13:16:36 server1 jupyter[27570]:             'msg_id': '9201D2F3F4884502B3165454EC8D0C4D',\r\nApr 18 13:16:36 server1 jupyter[27570]:             'msg_type': 'execute_request',\r\nApr 18 13:16:36 server1 jupyter[27570]:             'session': '6B0C59C49B6C42DD83F7F810A8278327',\r\nApr 18 13:16:37 server1 jupyter[27570]:             'username': 'username',\r\nApr 18 13:16:37 server1 jupyter[27570]:             'version': '5.2'},\r\nApr 18 13:16:37 server1 jupyter[27570]:  'metadata': {},\r\nApr 18 13:16:37 server1 jupyter[27570]:  'parent_header': {}}\r\n```\r\n\r\n* the output of this `print(var_dic_list())` is very long (I redacted most of it from the log to avoid revealing private information) and grows a lot the more variables are defined in the workspace.\r\n\r\nI think it would be nice to know what triggered this hidden `print(var_dic_list())` execution after each cell.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/382300098",
    "html_url": "https://github.com/jupyter/notebook/issues/3224#issuecomment-382300098",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3224",
    "id": 382300098,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjMwMDA5OA==",
    "user": {
      "login": "zertrin",
      "id": 1447163,
      "node_id": "MDQ6VXNlcjE0NDcxNjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1447163?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zertrin",
      "html_url": "https://github.com/zertrin",
      "followers_url": "https://api.github.com/users/zertrin/followers",
      "following_url": "https://api.github.com/users/zertrin/following{/other_user}",
      "gists_url": "https://api.github.com/users/zertrin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zertrin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zertrin/subscriptions",
      "organizations_url": "https://api.github.com/users/zertrin/orgs",
      "repos_url": "https://api.github.com/users/zertrin/repos",
      "events_url": "https://api.github.com/users/zertrin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zertrin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-18T08:01:43Z",
    "updated_at": "2018-04-18T08:01:43Z",
    "author_association": "NONE",
    "body": "Ok, a bit of googling let me identify the origin of this `print(var_dic_list())` hidden execution: this was from the **_Variable Inspector_** from jupyter_contrib_nbextensions (https://github.com/ipython-contrib/jupyter_contrib_nbextensions/blob/master/src/jupyter_contrib_nbextensions/nbextensions/varInspector/var_list.py).\r\n\r\nI have now disabled this extension and I couldn't reproduce the issue on a quick test.\r\n\r\nHowever, since the issue usually happened on long sessions, I will continue to test more and report in a day or two if the issue arises again with the Variable Inspector disabled.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/382300463",
    "html_url": "https://github.com/jupyter/notebook/issues/3224#issuecomment-382300463",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3224",
    "id": 382300463,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjMwMDQ2Mw==",
    "user": {
      "login": "zertrin",
      "id": 1447163,
      "node_id": "MDQ6VXNlcjE0NDcxNjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1447163?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zertrin",
      "html_url": "https://github.com/zertrin",
      "followers_url": "https://api.github.com/users/zertrin/followers",
      "following_url": "https://api.github.com/users/zertrin/following{/other_user}",
      "gists_url": "https://api.github.com/users/zertrin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zertrin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zertrin/subscriptions",
      "organizations_url": "https://api.github.com/users/zertrin/orgs",
      "repos_url": "https://api.github.com/users/zertrin/repos",
      "events_url": "https://api.github.com/users/zertrin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zertrin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-18T08:03:16Z",
    "updated_at": "2018-04-18T08:03:16Z",
    "author_association": "NONE",
    "body": "Oh in fact the issue is already known: https://github.com/ipython-contrib/jupyter_contrib_nbextensions/issues/1275\r\n\r\nNot sure if OP @jmhsi also uses this extension.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/382429084",
    "html_url": "https://github.com/jupyter/notebook/issues/3224#issuecomment-382429084",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3224",
    "id": 382429084,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4MjQyOTA4NA==",
    "user": {
      "login": "jmhsi",
      "id": 12853718,
      "node_id": "MDQ6VXNlcjEyODUzNzE4",
      "avatar_url": "https://avatars.githubusercontent.com/u/12853718?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jmhsi",
      "html_url": "https://github.com/jmhsi",
      "followers_url": "https://api.github.com/users/jmhsi/followers",
      "following_url": "https://api.github.com/users/jmhsi/following{/other_user}",
      "gists_url": "https://api.github.com/users/jmhsi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jmhsi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jmhsi/subscriptions",
      "organizations_url": "https://api.github.com/users/jmhsi/orgs",
      "repos_url": "https://api.github.com/users/jmhsi/repos",
      "events_url": "https://api.github.com/users/jmhsi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jmhsi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-18T15:32:14Z",
    "updated_at": "2018-04-18T15:32:14Z",
    "author_association": "NONE",
    "body": "I do not use the Variable Inspector extension",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/384072012",
    "html_url": "https://github.com/jupyter/notebook/issues/3224#issuecomment-384072012",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3224",
    "id": 384072012,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM4NDA3MjAxMg==",
    "user": {
      "login": "DavisTownsend",
      "id": 20406663,
      "node_id": "MDQ6VXNlcjIwNDA2NjYz",
      "avatar_url": "https://avatars.githubusercontent.com/u/20406663?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/DavisTownsend",
      "html_url": "https://github.com/DavisTownsend",
      "followers_url": "https://api.github.com/users/DavisTownsend/followers",
      "following_url": "https://api.github.com/users/DavisTownsend/following{/other_user}",
      "gists_url": "https://api.github.com/users/DavisTownsend/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/DavisTownsend/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/DavisTownsend/subscriptions",
      "organizations_url": "https://api.github.com/users/DavisTownsend/orgs",
      "repos_url": "https://api.github.com/users/DavisTownsend/repos",
      "events_url": "https://api.github.com/users/DavisTownsend/events{/privacy}",
      "received_events_url": "https://api.github.com/users/DavisTownsend/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-24T20:38:39Z",
    "updated_at": "2018-04-24T20:38:39Z",
    "author_association": "NONE",
    "body": "@zertrin I was having this same issue and this is correct. There is one caveat though. If you have already enabled variable inspector through the nbextensions configurator UI for your notebook, you need to make sure you shutdown your notebook completely (not just restart it from within the notebook), because the extension will still be in your notebook's metadata. Once I shutdown the notebook and then started it again, the variable inspector no longer showed in my new notebook, and I didn't have this problem anymore",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/410197251",
    "html_url": "https://github.com/jupyter/notebook/issues/3224#issuecomment-410197251",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3224",
    "id": 410197251,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQxMDE5NzI1MQ==",
    "user": {
      "login": "iNLyze",
      "id": 8356146,
      "node_id": "MDQ6VXNlcjgzNTYxNDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8356146?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iNLyze",
      "html_url": "https://github.com/iNLyze",
      "followers_url": "https://api.github.com/users/iNLyze/followers",
      "following_url": "https://api.github.com/users/iNLyze/following{/other_user}",
      "gists_url": "https://api.github.com/users/iNLyze/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iNLyze/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iNLyze/subscriptions",
      "organizations_url": "https://api.github.com/users/iNLyze/orgs",
      "repos_url": "https://api.github.com/users/iNLyze/repos",
      "events_url": "https://api.github.com/users/iNLyze/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iNLyze/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-08-03T09:21:09Z",
    "updated_at": "2018-08-03T09:21:09Z",
    "author_association": "NONE",
    "body": "You solved my problem! Thanks. I would never have tracked that one down on my own.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/423161943",
    "html_url": "https://github.com/jupyter/notebook/issues/3224#issuecomment-423161943",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3224",
    "id": 423161943,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQyMzE2MTk0Mw==",
    "user": {
      "login": "jtlz2",
      "id": 3842318,
      "node_id": "MDQ6VXNlcjM4NDIzMTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3842318?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jtlz2",
      "html_url": "https://github.com/jtlz2",
      "followers_url": "https://api.github.com/users/jtlz2/followers",
      "following_url": "https://api.github.com/users/jtlz2/following{/other_user}",
      "gists_url": "https://api.github.com/users/jtlz2/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jtlz2/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jtlz2/subscriptions",
      "organizations_url": "https://api.github.com/users/jtlz2/orgs",
      "repos_url": "https://api.github.com/users/jtlz2/repos",
      "events_url": "https://api.github.com/users/jtlz2/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jtlz2/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-09-20T12:19:14Z",
    "updated_at": "2018-09-20T12:19:14Z",
    "author_association": "NONE",
    "body": "Thank you so much - I disabled Variable Inspector and everything is back to normal now.... This has been doing my head in for two days - thanks again.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/445523821",
    "html_url": "https://github.com/jupyter/notebook/issues/3224#issuecomment-445523821",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3224",
    "id": 445523821,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTUyMzgyMQ==",
    "user": {
      "login": "JanVanIm",
      "id": 38763583,
      "node_id": "MDQ6VXNlcjM4NzYzNTgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/38763583?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JanVanIm",
      "html_url": "https://github.com/JanVanIm",
      "followers_url": "https://api.github.com/users/JanVanIm/followers",
      "following_url": "https://api.github.com/users/JanVanIm/following{/other_user}",
      "gists_url": "https://api.github.com/users/JanVanIm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JanVanIm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JanVanIm/subscriptions",
      "organizations_url": "https://api.github.com/users/JanVanIm/orgs",
      "repos_url": "https://api.github.com/users/JanVanIm/repos",
      "events_url": "https://api.github.com/users/JanVanIm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JanVanIm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-09T09:48:35Z",
    "updated_at": "2018-12-09T09:48:35Z",
    "author_association": "NONE",
    "body": "I have the same issue. I am new to Python and to Jupyter. How can one disable the extension Variable Inspector ?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/445799218",
    "html_url": "https://github.com/jupyter/notebook/issues/3224#issuecomment-445799218",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3224",
    "id": 445799218,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTc5OTIxOA==",
    "user": {
      "login": "iNLyze",
      "id": 8356146,
      "node_id": "MDQ6VXNlcjgzNTYxNDY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8356146?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/iNLyze",
      "html_url": "https://github.com/iNLyze",
      "followers_url": "https://api.github.com/users/iNLyze/followers",
      "following_url": "https://api.github.com/users/iNLyze/following{/other_user}",
      "gists_url": "https://api.github.com/users/iNLyze/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/iNLyze/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/iNLyze/subscriptions",
      "organizations_url": "https://api.github.com/users/iNLyze/orgs",
      "repos_url": "https://api.github.com/users/iNLyze/repos",
      "events_url": "https://api.github.com/users/iNLyze/events{/privacy}",
      "received_events_url": "https://api.github.com/users/iNLyze/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-10T12:30:26Z",
    "updated_at": "2018-12-10T12:30:26Z",
    "author_association": "NONE",
    "body": "Go to `Edit/nbextensions config` and disable (uncheck) it.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/445924750",
    "html_url": "https://github.com/jupyter/notebook/issues/3224#issuecomment-445924750",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3224",
    "id": 445924750,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NTkyNDc1MA==",
    "user": {
      "login": "JanVanIm",
      "id": 38763583,
      "node_id": "MDQ6VXNlcjM4NzYzNTgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/38763583?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JanVanIm",
      "html_url": "https://github.com/JanVanIm",
      "followers_url": "https://api.github.com/users/JanVanIm/followers",
      "following_url": "https://api.github.com/users/JanVanIm/following{/other_user}",
      "gists_url": "https://api.github.com/users/JanVanIm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JanVanIm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JanVanIm/subscriptions",
      "organizations_url": "https://api.github.com/users/JanVanIm/orgs",
      "repos_url": "https://api.github.com/users/JanVanIm/repos",
      "events_url": "https://api.github.com/users/JanVanIm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JanVanIm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-10T18:40:56Z",
    "updated_at": "2018-12-10T18:40:56Z",
    "author_association": "NONE",
    "body": "I find the **Edit** tab in the Jupyter Notebook but I don't find  **nbextensions config**",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/446014985",
    "html_url": "https://github.com/jupyter/notebook/issues/3224#issuecomment-446014985",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3224",
    "id": 446014985,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjAxNDk4NQ==",
    "user": {
      "login": "zertrin",
      "id": 1447163,
      "node_id": "MDQ6VXNlcjE0NDcxNjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1447163?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zertrin",
      "html_url": "https://github.com/zertrin",
      "followers_url": "https://api.github.com/users/zertrin/followers",
      "following_url": "https://api.github.com/users/zertrin/following{/other_user}",
      "gists_url": "https://api.github.com/users/zertrin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zertrin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zertrin/subscriptions",
      "organizations_url": "https://api.github.com/users/zertrin/orgs",
      "repos_url": "https://api.github.com/users/zertrin/repos",
      "events_url": "https://api.github.com/users/zertrin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zertrin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-10T23:32:00Z",
    "updated_at": "2018-12-10T23:32:00Z",
    "author_association": "NONE",
    "body": "If you did not install the notebook extensions and activate the variable inspector yourself, then it's likely that your problem is unrelated to this one. ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/446316858",
    "html_url": "https://github.com/jupyter/notebook/issues/3224#issuecomment-446316858",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3224",
    "id": 446316858,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjMxNjg1OA==",
    "user": {
      "login": "JanVanIm",
      "id": 38763583,
      "node_id": "MDQ6VXNlcjM4NzYzNTgz",
      "avatar_url": "https://avatars.githubusercontent.com/u/38763583?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JanVanIm",
      "html_url": "https://github.com/JanVanIm",
      "followers_url": "https://api.github.com/users/JanVanIm/followers",
      "following_url": "https://api.github.com/users/JanVanIm/following{/other_user}",
      "gists_url": "https://api.github.com/users/JanVanIm/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JanVanIm/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JanVanIm/subscriptions",
      "organizations_url": "https://api.github.com/users/JanVanIm/orgs",
      "repos_url": "https://api.github.com/users/JanVanIm/repos",
      "events_url": "https://api.github.com/users/JanVanIm/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JanVanIm/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-11T18:50:25Z",
    "updated_at": "2018-12-11T18:50:25Z",
    "author_association": "NONE",
    "body": "Do you know where the issue comes from ? I have a dataset of images of 230 MB and when I print some images it takes several minutes to be displayed.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/446438901",
    "html_url": "https://github.com/jupyter/notebook/issues/3224#issuecomment-446438901",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3224",
    "id": 446438901,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ0NjQzODkwMQ==",
    "user": {
      "login": "zertrin",
      "id": 1447163,
      "node_id": "MDQ6VXNlcjE0NDcxNjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1447163?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zertrin",
      "html_url": "https://github.com/zertrin",
      "followers_url": "https://api.github.com/users/zertrin/followers",
      "following_url": "https://api.github.com/users/zertrin/following{/other_user}",
      "gists_url": "https://api.github.com/users/zertrin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zertrin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zertrin/subscriptions",
      "organizations_url": "https://api.github.com/users/zertrin/orgs",
      "repos_url": "https://api.github.com/users/zertrin/repos",
      "events_url": "https://api.github.com/users/zertrin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zertrin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-12-12T02:31:10Z",
    "updated_at": "2018-12-12T02:31:10Z",
    "author_association": "NONE",
    "body": "There are literally thousands of reasons that could explain any given slowdown. With the amount of information you provided, there is no way to guess what it could be.\r\n\r\nIt seems you are not in the situation described by this issue (execution time increasing over subsequent cells even for trivial code caused by the variable inspector extension). You do not even have extensions installed.\r\n\r\nI suggest for you to seek help here: https://gitter.im/jupyter/jupyter (live chat, but be patient) or here https://groups.google.com/forum/#!forum/jupyter (general discussion mailing lists) instead.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/478365336",
    "html_url": "https://github.com/jupyter/notebook/issues/3224#issuecomment-478365336",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3224",
    "id": 478365336,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODM2NTMzNg==",
    "user": {
      "login": "maxwellmckinnon",
      "id": 5950299,
      "node_id": "MDQ6VXNlcjU5NTAyOTk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5950299?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maxwellmckinnon",
      "html_url": "https://github.com/maxwellmckinnon",
      "followers_url": "https://api.github.com/users/maxwellmckinnon/followers",
      "following_url": "https://api.github.com/users/maxwellmckinnon/following{/other_user}",
      "gists_url": "https://api.github.com/users/maxwellmckinnon/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maxwellmckinnon/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maxwellmckinnon/subscriptions",
      "organizations_url": "https://api.github.com/users/maxwellmckinnon/orgs",
      "repos_url": "https://api.github.com/users/maxwellmckinnon/repos",
      "events_url": "https://api.github.com/users/maxwellmckinnon/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maxwellmckinnon/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-31T18:20:38Z",
    "updated_at": "2019-03-31T18:20:38Z",
    "author_association": "NONE",
    "body": "+1 for turning off variable inspector with Pandas. \r\n\r\nI was having huge slowdowns on fairly small datasets (was working with data sampled down to 300MB for speed), and even doing something like df.head() was taking 10 seconds.\r\n\r\nIf you have the execution time extension, its timings are on the order of 30ms, as I would expect from a small dataset. I knew something was goofy. Thanks for the help.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/502583203",
    "html_url": "https://github.com/jupyter/notebook/issues/3224#issuecomment-502583203",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3224",
    "id": 502583203,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUwMjU4MzIwMw==",
    "user": {
      "login": "chicofranchico",
      "id": 823497,
      "node_id": "MDQ6VXNlcjgyMzQ5Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/823497?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/chicofranchico",
      "html_url": "https://github.com/chicofranchico",
      "followers_url": "https://api.github.com/users/chicofranchico/followers",
      "following_url": "https://api.github.com/users/chicofranchico/following{/other_user}",
      "gists_url": "https://api.github.com/users/chicofranchico/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/chicofranchico/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/chicofranchico/subscriptions",
      "organizations_url": "https://api.github.com/users/chicofranchico/orgs",
      "repos_url": "https://api.github.com/users/chicofranchico/repos",
      "events_url": "https://api.github.com/users/chicofranchico/events{/privacy}",
      "received_events_url": "https://api.github.com/users/chicofranchico/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-06-17T08:20:47Z",
    "updated_at": "2019-06-17T08:20:47Z",
    "author_association": "NONE",
    "body": "+1 for turning off variable inspector with IRkernel.\r\n\r\nReading a file from the FS and doing a simple row count assignment on the first cell, execution time is in the order of `ms`. Adding a new cell and trying to access that row count on the next cell and the execution time becomes minutes!\r\n\r\nif you restart the kernel and rerun the whole notebook, everything works fine. As soon as you add a new cell, things become sluggish again.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/583608774",
    "html_url": "https://github.com/jupyter/notebook/issues/3224#issuecomment-583608774",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3224",
    "id": 583608774,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MzYwODc3NA==",
    "user": {
      "login": "mirekphd",
      "id": 36706320,
      "node_id": "MDQ6VXNlcjM2NzA2MzIw",
      "avatar_url": "https://avatars.githubusercontent.com/u/36706320?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/mirekphd",
      "html_url": "https://github.com/mirekphd",
      "followers_url": "https://api.github.com/users/mirekphd/followers",
      "following_url": "https://api.github.com/users/mirekphd/following{/other_user}",
      "gists_url": "https://api.github.com/users/mirekphd/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/mirekphd/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/mirekphd/subscriptions",
      "organizations_url": "https://api.github.com/users/mirekphd/orgs",
      "repos_url": "https://api.github.com/users/mirekphd/repos",
      "events_url": "https://api.github.com/users/mirekphd/events{/privacy}",
      "received_events_url": "https://api.github.com/users/mirekphd/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-07T20:59:03Z",
    "updated_at": "2020-02-07T20:59:03Z",
    "author_association": "NONE",
    "body": "> this was from the **_Variable Inspector_** from jupyter_contrib_nbextensions \r\n> \r\n> I have now disabled this extension \r\n\r\nIt's a strangely persistent bug. The solution was still needed 2 years after the original reporting here...\r\n\r\nBTW such questions should be asked on Stack Overflow. It would be an accepted solution with upwards of 600+ in reputation value for @zertrin.\r\n",
    "performed_via_github_app": null
  }
]
