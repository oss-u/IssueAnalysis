[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/303477665",
    "html_url": "https://github.com/jupyter/notebook/issues/2514#issuecomment-303477665",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2514",
    "id": 303477665,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMzQ3NzY2NQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-23T17:41:55Z",
    "updated_at": "2017-05-23T17:41:55Z",
    "author_association": "MEMBER",
    "body": "I don't see any obvious ways to do it right now. \r\nI guess a way to \"sort\" kernels in the UI would be nice If you have a lot of kernels I guess a top-10 kernel and See All kernels would make sens, but that will have to be changed in the codebase. \r\n\r\nDo you want to try and make a PR ? OR even just a shot as to what the user experience should look like ? ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/308763033",
    "html_url": "https://github.com/jupyter/notebook/issues/2514#issuecomment-308763033",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2514",
    "id": 308763033,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwODc2MzAzMw==",
    "user": {
      "login": "andreas-h",
      "id": 358378,
      "node_id": "MDQ6VXNlcjM1ODM3OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/358378?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/andreas-h",
      "html_url": "https://github.com/andreas-h",
      "followers_url": "https://api.github.com/users/andreas-h/followers",
      "following_url": "https://api.github.com/users/andreas-h/following{/other_user}",
      "gists_url": "https://api.github.com/users/andreas-h/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/andreas-h/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/andreas-h/subscriptions",
      "organizations_url": "https://api.github.com/users/andreas-h/orgs",
      "repos_url": "https://api.github.com/users/andreas-h/repos",
      "events_url": "https://api.github.com/users/andreas-h/events{/privacy}",
      "received_events_url": "https://api.github.com/users/andreas-h/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-15T15:03:52Z",
    "updated_at": "2017-06-15T15:04:19Z",
    "author_association": "NONE",
    "body": "In a very crude approach, the kernelspec JSON (is it JSON? I forgot ...) could get an additional boolean parameter `hide_in_drawer`. Then the *New* dropdown in the Notebook could group all those kernels which have `hide_in_drawer` set to `True` into a sub-menu *More kernels ...*, while all those kernelspecs with `hide_in_drawer` missing or set to `False` being displayed as is currently the case.\r\n\r\nFrom a user perspective, I believe this should be independent of the ordering of the kernels (or, rather, if a sort order is specified, then the `hidden_in_drawer` and \"normal\" kernels should be ordered separately, see #2513 ).",
    "performed_via_github_app": null
  }
]
