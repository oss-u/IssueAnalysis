[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/120726889",
    "html_url": "https://github.com/jupyter/notebook/issues/195#issuecomment-120726889",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/195",
    "id": 120726889,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMDcyNjg4OQ==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-12T14:58:33Z",
    "updated_at": "2015-07-12T14:58:33Z",
    "author_association": "MEMBER",
    "body": "This is because the trust action is actually part of a save, which you don't have permission to do if it's read-only. I'm not sure if we can find a way to trigger trust without re-saving the notebook.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/120806290",
    "html_url": "https://github.com/jupyter/notebook/issues/195#issuecomment-120806290",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/195",
    "id": 120806290,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMDgwNjI5MA==",
    "user": {
      "login": "cailiang9",
      "id": 3636844,
      "node_id": "MDQ6VXNlcjM2MzY4NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3636844?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cailiang9",
      "html_url": "https://github.com/cailiang9",
      "followers_url": "https://api.github.com/users/cailiang9/followers",
      "following_url": "https://api.github.com/users/cailiang9/following{/other_user}",
      "gists_url": "https://api.github.com/users/cailiang9/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cailiang9/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cailiang9/subscriptions",
      "organizations_url": "https://api.github.com/users/cailiang9/orgs",
      "repos_url": "https://api.github.com/users/cailiang9/repos",
      "events_url": "https://api.github.com/users/cailiang9/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cailiang9/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-13T04:21:06Z",
    "updated_at": "2015-07-13T04:21:06Z",
    "author_association": "NONE",
    "body": "As I wrote in the comment: running `ipython trust xyz.ipynb` can work. Why trust should be part of a save? It just adds a signature to .ipython folder.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/120825513",
    "html_url": "https://github.com/jupyter/notebook/issues/195#issuecomment-120825513",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/195",
    "id": 120825513,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMDgyNTUxMw==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-13T06:22:30Z",
    "updated_at": "2015-07-13T06:22:30Z",
    "author_association": "MEMBER",
    "body": "Until recently, the signature was stored in the notebook requiring a save. Now that it's moved to a separate database, the impediment is that there's no REST API for triggering signature other than the save API on the contents service. With how it works now, though, we could add an explicit trust endpoint that doesn't need write access to the notebook.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/121137883",
    "html_url": "https://github.com/jupyter/notebook/issues/195#issuecomment-121137883",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/195",
    "id": 121137883,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTEzNzg4Mw==",
    "user": {
      "login": "cailiang9",
      "id": 3636844,
      "node_id": "MDQ6VXNlcjM2MzY4NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3636844?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cailiang9",
      "html_url": "https://github.com/cailiang9",
      "followers_url": "https://api.github.com/users/cailiang9/followers",
      "following_url": "https://api.github.com/users/cailiang9/following{/other_user}",
      "gists_url": "https://api.github.com/users/cailiang9/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cailiang9/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cailiang9/subscriptions",
      "organizations_url": "https://api.github.com/users/cailiang9/orgs",
      "repos_url": "https://api.github.com/users/cailiang9/repos",
      "events_url": "https://api.github.com/users/cailiang9/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cailiang9/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-14T05:48:05Z",
    "updated_at": "2015-07-14T05:48:05Z",
    "author_association": "NONE",
    "body": "what about a simple js `IPython.notebook.kernel.execute('!ipython trust ' + sharedpath[sharedpath.length-1])`\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/121138146",
    "html_url": "https://github.com/jupyter/notebook/issues/195#issuecomment-121138146",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/195",
    "id": 121138146,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTEzODE0Ng==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-14T05:50:58Z",
    "updated_at": "2015-07-14T05:50:58Z",
    "author_association": "MEMBER",
    "body": "> what about a simple js IPython.notebook.kernel.execute('!ipython trust ' + sharedpath[sharedpath.length-1])\n\nThe kernel is not on the same machine that the notebook. \nThe kernel might not be IPython kernel.\nThe kernel might not be python at all. \nThe user of the kernel might not be the user of the notebook. \nThe notebook might not be stored on disk, but in a DB on server. \n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/121146791",
    "html_url": "https://github.com/jupyter/notebook/issues/195#issuecomment-121146791",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/195",
    "id": 121146791,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTE0Njc5MQ==",
    "user": {
      "login": "cailiang9",
      "id": 3636844,
      "node_id": "MDQ6VXNlcjM2MzY4NDQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3636844?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/cailiang9",
      "html_url": "https://github.com/cailiang9",
      "followers_url": "https://api.github.com/users/cailiang9/followers",
      "following_url": "https://api.github.com/users/cailiang9/following{/other_user}",
      "gists_url": "https://api.github.com/users/cailiang9/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/cailiang9/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/cailiang9/subscriptions",
      "organizations_url": "https://api.github.com/users/cailiang9/orgs",
      "repos_url": "https://api.github.com/users/cailiang9/repos",
      "events_url": "https://api.github.com/users/cailiang9/events{/privacy}",
      "received_events_url": "https://api.github.com/users/cailiang9/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-14T06:50:13Z",
    "updated_at": "2015-07-14T06:50:13Z",
    "author_association": "NONE",
    "body": "ok ok, you win\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/121291799",
    "html_url": "https://github.com/jupyter/notebook/issues/195#issuecomment-121291799",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/195",
    "id": 121291799,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTI5MTc5OQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-14T16:04:58Z",
    "updated_at": "2015-07-14T16:04:58Z",
    "author_association": "MEMBER",
    "body": "I know it's might not be always easy to see the all architecture at once, we don't ask user to understand everything, but the `IPython.notebook.kernel.execute('!ipython trust ' + sharedpath[sharedpath.length-1])` was a nice try :-) \n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/121330837",
    "html_url": "https://github.com/jupyter/notebook/issues/195#issuecomment-121330837",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/195",
    "id": 121330837,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyMTMzMDgzNw==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-07-14T18:27:10Z",
    "updated_at": "2015-07-14T18:27:10Z",
    "author_association": "MEMBER",
    "body": "There is a Python API for it, we would just need to expose an endpoint for it on the web server, if we decide to go that way.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/316444475",
    "html_url": "https://github.com/jupyter/notebook/issues/195#issuecomment-316444475",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/195",
    "id": 316444475,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjQ0NDQ3NQ==",
    "user": {
      "login": "Madhu94",
      "id": 9015820,
      "node_id": "MDQ6VXNlcjkwMTU4MjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9015820?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Madhu94",
      "html_url": "https://github.com/Madhu94",
      "followers_url": "https://api.github.com/users/Madhu94/followers",
      "following_url": "https://api.github.com/users/Madhu94/following{/other_user}",
      "gists_url": "https://api.github.com/users/Madhu94/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Madhu94/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Madhu94/subscriptions",
      "organizations_url": "https://api.github.com/users/Madhu94/orgs",
      "repos_url": "https://api.github.com/users/Madhu94/repos",
      "events_url": "https://api.github.com/users/Madhu94/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Madhu94/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-19T16:36:51Z",
    "updated_at": "2017-07-19T16:36:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "@JamiesHQ Are you working on this? I'd like to give it a shot.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/316551351",
    "html_url": "https://github.com/jupyter/notebook/issues/195#issuecomment-316551351",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/195",
    "id": 316551351,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjU1MTM1MQ==",
    "user": {
      "login": "JamiesHQ",
      "id": 476301,
      "node_id": "MDQ6VXNlcjQ3NjMwMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/476301?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JamiesHQ",
      "html_url": "https://github.com/JamiesHQ",
      "followers_url": "https://api.github.com/users/JamiesHQ/followers",
      "following_url": "https://api.github.com/users/JamiesHQ/following{/other_user}",
      "gists_url": "https://api.github.com/users/JamiesHQ/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JamiesHQ/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JamiesHQ/subscriptions",
      "organizations_url": "https://api.github.com/users/JamiesHQ/orgs",
      "repos_url": "https://api.github.com/users/JamiesHQ/repos",
      "events_url": "https://api.github.com/users/JamiesHQ/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JamiesHQ/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-19T23:35:04Z",
    "updated_at": "2017-07-19T23:35:04Z",
    "author_association": "MEMBER",
    "body": "@Madhu94 - nope! go for it.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/316761487",
    "html_url": "https://github.com/jupyter/notebook/issues/195#issuecomment-316761487",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/195",
    "id": 316761487,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjc2MTQ4Nw==",
    "user": {
      "login": "Madhu94",
      "id": 9015820,
      "node_id": "MDQ6VXNlcjkwMTU4MjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9015820?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Madhu94",
      "html_url": "https://github.com/Madhu94",
      "followers_url": "https://api.github.com/users/Madhu94/followers",
      "following_url": "https://api.github.com/users/Madhu94/following{/other_user}",
      "gists_url": "https://api.github.com/users/Madhu94/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Madhu94/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Madhu94/subscriptions",
      "organizations_url": "https://api.github.com/users/Madhu94/orgs",
      "repos_url": "https://api.github.com/users/Madhu94/repos",
      "events_url": "https://api.github.com/users/Madhu94/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Madhu94/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-20T16:39:47Z",
    "updated_at": "2017-07-20T16:39:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "Thanks! @JamiesHQ ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/318991137",
    "html_url": "https://github.com/jupyter/notebook/issues/195#issuecomment-318991137",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/195",
    "id": 318991137,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxODk5MTEzNw==",
    "user": {
      "login": "Madhu94",
      "id": 9015820,
      "node_id": "MDQ6VXNlcjkwMTU4MjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9015820?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Madhu94",
      "html_url": "https://github.com/Madhu94",
      "followers_url": "https://api.github.com/users/Madhu94/followers",
      "following_url": "https://api.github.com/users/Madhu94/following{/other_user}",
      "gists_url": "https://api.github.com/users/Madhu94/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Madhu94/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Madhu94/subscriptions",
      "organizations_url": "https://api.github.com/users/Madhu94/orgs",
      "repos_url": "https://api.github.com/users/Madhu94/repos",
      "events_url": "https://api.github.com/users/Madhu94/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Madhu94/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-31T07:32:20Z",
    "updated_at": "2017-07-31T07:32:20Z",
    "author_association": "CONTRIBUTOR",
    "body": "@minrk Do we still want trust to trigger a save ?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/319042485",
    "html_url": "https://github.com/jupyter/notebook/issues/195#issuecomment-319042485",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/195",
    "id": 319042485,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTA0MjQ4NQ==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-31T11:34:27Z",
    "updated_at": "2017-07-31T11:34:27Z",
    "author_association": "MEMBER",
    "body": "In order to trust read-only notebooks, we have to *not* trigger a save, which will fail due to permission issues. The trust action would have to be triggered explicitly server-side, rather than what we currently do, which is save a trusted notebook.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/319205547",
    "html_url": "https://github.com/jupyter/notebook/issues/195#issuecomment-319205547",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/195",
    "id": 319205547,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTIwNTU0Nw==",
    "user": {
      "login": "Madhu94",
      "id": 9015820,
      "node_id": "MDQ6VXNlcjkwMTU4MjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9015820?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Madhu94",
      "html_url": "https://github.com/Madhu94",
      "followers_url": "https://api.github.com/users/Madhu94/followers",
      "following_url": "https://api.github.com/users/Madhu94/following{/other_user}",
      "gists_url": "https://api.github.com/users/Madhu94/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Madhu94/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Madhu94/subscriptions",
      "organizations_url": "https://api.github.com/users/Madhu94/orgs",
      "repos_url": "https://api.github.com/users/Madhu94/repos",
      "events_url": "https://api.github.com/users/Madhu94/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Madhu94/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-31T21:44:34Z",
    "updated_at": "2017-08-01T09:28:21Z",
    "author_association": "CONTRIBUTOR",
    "body": "@minrk  Thanks. Since trust will no longer trigger a save, updating all the cells' metadata with \"Trusted: True/False\" and then computing the signature can be confusing.\r\n\r\nFor instance, say UserA creates NotebookA.  UserB has read only access to NotebookA but wants to trust it.\r\n\r\nIn this case, when the notebook is first read by UserB, the output cells' metdata data is empty. While creating the model, we mark all cells' metadata with \"trusted: False\" and _then_  call [trust_notebook](https://github.com/jupyter/notebook/blob/5192d72c63369d7167c5472d06f87072d68ecc53/notebook/services/contents/manager.py#L417), which marks all cells as trusted and computes the signature. \r\n\r\nThese changes to the cells' metadata do not get persisted. So the next time, when signature is computed on load (over [here](https://github.com/jupyter/notebook/blob/5192d72c63369d7167c5472d06f87072d68ecc53/notebook/services/contents/manager.py#L448)), the notebooks' cells' metadata is empty ``{}`` again.  Which would lead to a **different hash** than the one that was stored in the sqlite store.\r\n\r\n**I propose that we leave out this key ``trusted:True`` or ``trusted:False`` from the cells**, while computing the signature for the model (Maybe this could be achieved using a context manager).\r\n\r\nWhat do you think ? \r\n\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/319342972",
    "html_url": "https://github.com/jupyter/notebook/issues/195#issuecomment-319342972",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/195",
    "id": 319342972,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTM0Mjk3Mg==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-01T11:21:49Z",
    "updated_at": "2017-08-01T11:21:49Z",
    "author_association": "MEMBER",
    "body": "> I propose that we leave out this key trusted:True or trusted:False from the cells while computing the signature for the model.\r\n\r\nWe already do this. trust is only present in metadata when sending notebooks over the REST API, and consumed by `.check_cells` prior to signing in `.check_and_sign`.\r\n\r\nWe used to store signatures in notebooks themselves, which I believe is why we trigger `.save` in `.trust_notebook()`. Now that the notary stores signatures itself, we actually don't need to call save there, we can just call `self.notary.sign(nb)` directly instead of `mark_cells(nb, True)` followed by `.save(nb)`.\r\n\r\nSo I think we only need these changes:\r\n\r\n1. call `self.notary.sign(nb)` instead of `notary.mark_cells` and `self.save` in `.trust_notebook`\r\n2. make sure that save is not triggered prior to trust in the javascript for trust_notebook when the notebook is read-only.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/319354306",
    "html_url": "https://github.com/jupyter/notebook/issues/195#issuecomment-319354306",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/195",
    "id": 319354306,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTM1NDMwNg==",
    "user": {
      "login": "Madhu94",
      "id": 9015820,
      "node_id": "MDQ6VXNlcjkwMTU4MjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9015820?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Madhu94",
      "html_url": "https://github.com/Madhu94",
      "followers_url": "https://api.github.com/users/Madhu94/followers",
      "following_url": "https://api.github.com/users/Madhu94/following{/other_user}",
      "gists_url": "https://api.github.com/users/Madhu94/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Madhu94/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Madhu94/subscriptions",
      "organizations_url": "https://api.github.com/users/Madhu94/orgs",
      "repos_url": "https://api.github.com/users/Madhu94/repos",
      "events_url": "https://api.github.com/users/Madhu94/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Madhu94/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-01T12:21:03Z",
    "updated_at": "2017-08-01T12:25:13Z",
    "author_association": "CONTRIBUTOR",
    "body": "> call self.notary.sign(nb) instead of notary.mark_cells and self.save in .trust_notebook \r\n \r\nThis is what I did. Guess I should make a PR now with a \"WIP\" attached to it, because its easier to reason when you have code.  \r\n>make sure that save is not triggered prior to trust in the javascript for trust_notebook when the notebook is read-only.  \r\n\r\nSure.\r\n\r\n>We already do this. trust is only present in metadata when sending notebooks over the REST API, and consumed by .check_cells prior to signing in .check_and_sign  \r\n\r\nOh. Sorry about that @minrk , let me check again then.   \r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/319455621",
    "html_url": "https://github.com/jupyter/notebook/issues/195#issuecomment-319455621",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/195",
    "id": 319455621,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxOTQ1NTYyMQ==",
    "user": {
      "login": "Madhu94",
      "id": 9015820,
      "node_id": "MDQ6VXNlcjkwMTU4MjA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9015820?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Madhu94",
      "html_url": "https://github.com/Madhu94",
      "followers_url": "https://api.github.com/users/Madhu94/followers",
      "following_url": "https://api.github.com/users/Madhu94/following{/other_user}",
      "gists_url": "https://api.github.com/users/Madhu94/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Madhu94/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Madhu94/subscriptions",
      "organizations_url": "https://api.github.com/users/Madhu94/orgs",
      "repos_url": "https://api.github.com/users/Madhu94/repos",
      "events_url": "https://api.github.com/users/Madhu94/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Madhu94/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-01T18:26:06Z",
    "updated_at": "2017-08-01T18:26:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "@minrk, I dug into the nbformat codebase and logged an [issue](https://github.com/jupyter/nbformat/issues/98) about this. ",
    "performed_via_github_app": null
  }
]
