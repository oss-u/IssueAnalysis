[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/363429692",
    "html_url": "https://github.com/jupyter/notebook/issues/3308#issuecomment-363429692",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3308",
    "id": 363429692,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzQyOTY5Mg==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-06T13:58:10Z",
    "updated_at": "2018-02-06T13:58:10Z",
    "author_association": "MEMBER",
    "body": "No plans yet, but it probably makes sense in combination with *editable*.\r\n\r\nI have some minor concerns that someone would try to use it as a security measure to prevent users running some code, but so long as our messaging is clear, that's not a big deal.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/494611664",
    "html_url": "https://github.com/jupyter/notebook/issues/3308#issuecomment-494611664",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3308",
    "id": 494611664,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NDYxMTY2NA==",
    "user": {
      "login": "williamstein",
      "id": 1276278,
      "node_id": "MDQ6VXNlcjEyNzYyNzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1276278?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/williamstein",
      "html_url": "https://github.com/williamstein",
      "followers_url": "https://api.github.com/users/williamstein/followers",
      "following_url": "https://api.github.com/users/williamstein/following{/other_user}",
      "gists_url": "https://api.github.com/users/williamstein/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/williamstein/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/williamstein/subscriptions",
      "organizations_url": "https://api.github.com/users/williamstein/orgs",
      "repos_url": "https://api.github.com/users/williamstein/repos",
      "events_url": "https://api.github.com/users/williamstein/events{/privacy}",
      "received_events_url": "https://api.github.com/users/williamstein/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-22T00:56:19Z",
    "updated_at": "2019-05-22T00:56:19Z",
    "author_association": "NONE",
    "body": "I would call it `{\"evaluatable\":false}`.  Also, what is the use case?  ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/497017243",
    "html_url": "https://github.com/jupyter/notebook/issues/3308#issuecomment-497017243",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3308",
    "id": 497017243,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NzAxNzI0Mw==",
    "user": {
      "login": "psychemedia",
      "id": 82988,
      "node_id": "MDQ6VXNlcjgyOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/82988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/psychemedia",
      "html_url": "https://github.com/psychemedia",
      "followers_url": "https://api.github.com/users/psychemedia/followers",
      "following_url": "https://api.github.com/users/psychemedia/following{/other_user}",
      "gists_url": "https://api.github.com/users/psychemedia/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/psychemedia/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/psychemedia/subscriptions",
      "organizations_url": "https://api.github.com/users/psychemedia/orgs",
      "repos_url": "https://api.github.com/users/psychemedia/repos",
      "events_url": "https://api.github.com/users/psychemedia/events{/privacy}",
      "received_events_url": "https://api.github.com/users/psychemedia/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-29T16:45:41Z",
    "updated_at": "2019-05-29T16:53:39Z",
    "author_association": "NONE",
    "body": "I was wondering what a use case might be too... One example might be in a grading situation (I learned about `runnable` and `editable` from `nbgrader` too) where you want to give a code hint as a non-runnable code fragment, in a code cell, that a learner might find useful as part of their own answer.\r\n\r\nFWIW, I'd probably opt for `{'runnable':false}` based on the UI prompt that allows users to `Run` a cell.\r\n\r\nIt's perhaps also worth noting the `freeze` behaviour of the [`freeze` extension](https://github.com/ipython-contrib/jupyter_contrib_nbextensions/tree/master/src/jupyter_contrib_nbextensions/nbextensions/freeze) which supports *unlock*,  *read-only* and *frozen* modes with behaviours:\r\n\r\n> For code-cells:\r\n> read-only: it can be executed, but its input cannot be changed.\r\n> frozen: It cannot be either altered or executed.\r\n> \r\n> For markdown-cells:\r\n> read-only: It's input can be viewed by double-clicking on it, but cannot be changed.\r\n> frozen: Input cannot be viewed by double-clicking.\r\n\r\nand where:\r\n\r\n> [t]he read-only state is stored in the `cell.metadata.editable` attribute [and t]he frozen state is stored in the `cell.metadata.run_control.frozen` attribute.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/497056247",
    "html_url": "https://github.com/jupyter/notebook/issues/3308#issuecomment-497056247",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3308",
    "id": 497056247,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NzA1NjI0Nw==",
    "user": {
      "login": "haraldschilly",
      "id": 207405,
      "node_id": "MDQ6VXNlcjIwNzQwNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/207405?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/haraldschilly",
      "html_url": "https://github.com/haraldschilly",
      "followers_url": "https://api.github.com/users/haraldschilly/followers",
      "following_url": "https://api.github.com/users/haraldschilly/following{/other_user}",
      "gists_url": "https://api.github.com/users/haraldschilly/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/haraldschilly/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/haraldschilly/subscriptions",
      "organizations_url": "https://api.github.com/users/haraldschilly/orgs",
      "repos_url": "https://api.github.com/users/haraldschilly/repos",
      "events_url": "https://api.github.com/users/haraldschilly/events{/privacy}",
      "received_events_url": "https://api.github.com/users/haraldschilly/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-29T18:30:10Z",
    "updated_at": "2019-05-29T18:30:10Z",
    "author_association": "NONE",
    "body": "oh wow, never heard of `freeze`. We/Someone should really collect and tabulate  these attributes (in the [nbformat repo](https://github.com/jupyter/nbformat), where the specification is) and also define all of their interactions. i.e. if I understand this correctly this is actually `{editable: true | false | 'read-only' | 'frozen'}`? and so on.... \r\n\r\nand yes, `runnable` sound good as well. Giving students a code snippet as an example is exactly my thought. e.g.  a fragment of a block of code or function, in order to to guide students to the answer, but they shouldn't edit or run that cell (because it's not valid python). The task is to write the function on their own and while they write it they fill in the missing parts.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/497306422",
    "html_url": "https://github.com/jupyter/notebook/issues/3308#issuecomment-497306422",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3308",
    "id": 497306422,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ5NzMwNjQyMg==",
    "user": {
      "login": "psychemedia",
      "id": 82988,
      "node_id": "MDQ6VXNlcjgyOTg4",
      "avatar_url": "https://avatars.githubusercontent.com/u/82988?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/psychemedia",
      "html_url": "https://github.com/psychemedia",
      "followers_url": "https://api.github.com/users/psychemedia/followers",
      "following_url": "https://api.github.com/users/psychemedia/following{/other_user}",
      "gists_url": "https://api.github.com/users/psychemedia/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/psychemedia/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/psychemedia/subscriptions",
      "organizations_url": "https://api.github.com/users/psychemedia/orgs",
      "repos_url": "https://api.github.com/users/psychemedia/repos",
      "events_url": "https://api.github.com/users/psychemedia/events{/privacy}",
      "received_events_url": "https://api.github.com/users/psychemedia/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-05-30T12:02:38Z",
    "updated_at": "2019-05-30T12:02:56Z",
    "author_association": "NONE",
    "body": "@haraldschilly `freeze` is one of the \"official\" \"unofficial\" extensions. The `cell.metadata.editable` and `cell.metadata.deletable` are handled by the notebook, I think, but `cell.metadata.run_control.frozen` looks like it's custom metadata created and consumed (eg [here](https://github.com/ipython-contrib/jupyter_contrib_nbextensions/blob/e18ef73e878c32a917403908b88e9a8e454c93bb/src/jupyter_contrib_nbextensions/nbextensions/freeze/main.js#L42-L53)) by the extension.",
    "performed_via_github_app": null
  }
]
