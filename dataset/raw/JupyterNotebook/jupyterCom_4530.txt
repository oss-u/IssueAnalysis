[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/478538785",
    "html_url": "https://github.com/jupyter/notebook/issues/4530#issuecomment-478538785",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4530",
    "id": 478538785,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODUzODc4NQ==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-01T11:18:30Z",
    "updated_at": "2019-04-01T11:18:30Z",
    "author_association": "MEMBER",
    "body": "> Why do we have the js magic run by the browser?\r\n\r\n\r\nThe js magic is literally doing:\r\n\r\n```python\r\ndisplay(Javascript(\"cell_contents\"))\r\n```\r\n\r\nIt is executed by the kernel. However, once the output is displayed and stored in the document, it is the javascript *output* that is evaluated on page load.\r\n\r\nWe could think about delaying this rendering until kernels are ready, but this would be worse for most javascript and html outputs that don't talk to the kernel. A futures-based approach that probably works best in JupyterLab is an alternative.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/478641820",
    "html_url": "https://github.com/jupyter/notebook/issues/4530#issuecomment-478641820",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4530",
    "id": 478641820,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3ODY0MTgyMA==",
    "user": {
      "login": "stas00",
      "id": 10676103,
      "node_id": "MDQ6VXNlcjEwNjc2MTAz",
      "avatar_url": "https://avatars.githubusercontent.com/u/10676103?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stas00",
      "html_url": "https://github.com/stas00",
      "followers_url": "https://api.github.com/users/stas00/followers",
      "following_url": "https://api.github.com/users/stas00/following{/other_user}",
      "gists_url": "https://api.github.com/users/stas00/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stas00/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stas00/subscriptions",
      "organizations_url": "https://api.github.com/users/stas00/orgs",
      "repos_url": "https://api.github.com/users/stas00/repos",
      "events_url": "https://api.github.com/users/stas00/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stas00/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-04-01T16:05:54Z",
    "updated_at": "2019-04-01T16:06:16Z",
    "author_association": "NONE",
    "body": "Perhaps my workaround could be integrated into it? So when it's stored in the document it's wrapped with:\r\n\r\n`if (IPython.notebook.kernel) { <body of js magic> }`\r\n\r\nand thus it won't run on load. It's unlikely that a user will want js to run in the notebook automatically on load, no? Perhaps this assumption is wrong and then this idea is not a good one.\r\n\r\nSecond best is to document this workaround inside the js magic document?\r\n\r\nThank you.\r\n",
    "performed_via_github_app": null
  }
]
