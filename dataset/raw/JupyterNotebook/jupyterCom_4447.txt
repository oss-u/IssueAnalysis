[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/469369823",
    "html_url": "https://github.com/jupyter/notebook/issues/4447#issuecomment-469369823",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4447",
    "id": 469369823,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTM2OTgyMw==",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-04T18:42:05Z",
    "updated_at": "2019-03-04T18:42:05Z",
    "author_association": "MEMBER",
    "body": "I'll add some more context: The original Jupyter precedence for configuration is `user` config overrides `sysprefix` config overrides `system` config. This is appropriate when the `sysprefix` level is a python distribution installed in, say, `/usr/local/`, as is often the case with a system python installation (i.e., a system has many top-level environments, and each environment can have many users). However, user-level environments turn this assumption partly upside down, since each environment has a separate `sysprefix` and you can now have multiple `sysprefix` environments for each user. Arguably, the appropriate precedence with virtual environments is `sysprefix` overrides `user` overrides `system` (since a system has many users, and a user has many environments).",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/469372708",
    "html_url": "https://github.com/jupyter/notebook/issues/4447#issuecomment-469372708",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4447",
    "id": 469372708,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTM3MjcwOA==",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-04T18:47:19Z",
    "updated_at": "2019-03-04T18:47:19Z",
    "author_association": "MEMBER",
    "body": "As a note, I regularly delete the user-level config in `~/.jupyter`, and concentrate on having *only* environment-level config. This can mess up some things with JupyterLab, though, since its settings are stored at the user-level by default too.\r\n\r\nIt would be nice if there was a way to switch Jupyter config to prefer user over environment, or vice versa. Even better would be a way to make an intelligent default, with the assumption that virtual environments should take precedence over user config.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/469795603",
    "html_url": "https://github.com/jupyter/notebook/issues/4447#issuecomment-469795603",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4447",
    "id": 469795603,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTc5NTYwMw==",
    "user": {
      "login": "tdpetrou",
      "id": 7226751,
      "node_id": "MDQ6VXNlcjcyMjY3NTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7226751?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tdpetrou",
      "html_url": "https://github.com/tdpetrou",
      "followers_url": "https://api.github.com/users/tdpetrou/followers",
      "following_url": "https://api.github.com/users/tdpetrou/following{/other_user}",
      "gists_url": "https://api.github.com/users/tdpetrou/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tdpetrou/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tdpetrou/subscriptions",
      "organizations_url": "https://api.github.com/users/tdpetrou/orgs",
      "repos_url": "https://api.github.com/users/tdpetrou/repos",
      "events_url": "https://api.github.com/users/tdpetrou/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tdpetrou/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-05T18:25:49Z",
    "updated_at": "2019-03-05T18:25:49Z",
    "author_association": "NONE",
    "body": "Thank you @jasongrout for the explanation. It does make sense that when a conda environment is active to have its kernel take precedence.\r\n\r\nIt seems that some people have a User-level 'python3' kernel while others do not. Do you have any clues why this is the case?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/469869605",
    "html_url": "https://github.com/jupyter/notebook/issues/4447#issuecomment-469869605",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4447",
    "id": 469869605,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ2OTg2OTYwNQ==",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-05T21:44:15Z",
    "updated_at": "2019-03-05T21:44:15Z",
    "author_association": "MEMBER",
    "body": "I don't know why there might be a difference, if they all followed the same instructions.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/648442438",
    "html_url": "https://github.com/jupyter/notebook/issues/4447#issuecomment-648442438",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4447",
    "id": 648442438,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0ODQ0MjQzOA==",
    "user": {
      "login": "jetilton",
      "id": 10262907,
      "node_id": "MDQ6VXNlcjEwMjYyOTA3",
      "avatar_url": "https://avatars.githubusercontent.com/u/10262907?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jetilton",
      "html_url": "https://github.com/jetilton",
      "followers_url": "https://api.github.com/users/jetilton/followers",
      "following_url": "https://api.github.com/users/jetilton/following{/other_user}",
      "gists_url": "https://api.github.com/users/jetilton/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jetilton/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jetilton/subscriptions",
      "organizations_url": "https://api.github.com/users/jetilton/orgs",
      "repos_url": "https://api.github.com/users/jetilton/repos",
      "events_url": "https://api.github.com/users/jetilton/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jetilton/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-23T21:39:31Z",
    "updated_at": "2020-08-18T13:33:11Z",
    "author_association": "NONE",
    "body": "I stumble my way through this every time I want to start a new project and then a lot of times I just use some bloated environment I already know works when I start a new project.  I like to create my environments in the directory of my project so \r\n\r\n```\r\n$ conda create --prefix ./venv python=3.7\r\n$ conda activate ./venv\r\n$ conda install ipykernel\r\n```\r\n\r\nIs there a preferred way to go from here?  I see lots of different routes to take.  What I try to do is \r\n\r\n`$ python -m ipykernel install --prefix ./venv --display-name \"project-name\"`\r\n\r\nThis seems to work because I get a: `Installed kernelspec python3 in...` but when I start up Jupyter lab from my other environment I do not see \"project-name\" as a kernel option.\r\n\r\nIs there a better way to go about this?  \r\n\r\nI seem to have luck when I create an environment the standard anaconda location with:\r\n\r\n```\r\n$ conda create --name myenv python=3.7\r\n$ conda install ipykernel\r\n$ python -m ipykernel install --user --name myenv --display-name \"myenv\"\r\n```\r\nIt is my preference to keep everything bundled together in the same directory so I would prefer the former to work as well.\r\n\r\n",
    "performed_via_github_app": null
  }
]
