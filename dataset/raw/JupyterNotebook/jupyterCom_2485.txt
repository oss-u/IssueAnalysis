[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/301733085",
    "html_url": "https://github.com/jupyter/notebook/issues/2485#issuecomment-301733085",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2485",
    "id": 301733085,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTczMzA4NQ==",
    "user": {
      "login": "ddulic",
      "id": 10076428,
      "node_id": "MDQ6VXNlcjEwMDc2NDI4",
      "avatar_url": "https://avatars.githubusercontent.com/u/10076428?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ddulic",
      "html_url": "https://github.com/ddulic",
      "followers_url": "https://api.github.com/users/ddulic/followers",
      "following_url": "https://api.github.com/users/ddulic/following{/other_user}",
      "gists_url": "https://api.github.com/users/ddulic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ddulic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ddulic/subscriptions",
      "organizations_url": "https://api.github.com/users/ddulic/orgs",
      "repos_url": "https://api.github.com/users/ddulic/repos",
      "events_url": "https://api.github.com/users/ddulic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ddulic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-16T09:53:44Z",
    "updated_at": "2017-05-16T09:53:44Z",
    "author_association": "NONE",
    "body": "Same \"problem\".",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/301854964",
    "html_url": "https://github.com/jupyter/notebook/issues/2485#issuecomment-301854964",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2485",
    "id": 301854964,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTg1NDk2NA==",
    "user": {
      "login": "juhasch",
      "id": 2445216,
      "node_id": "MDQ6VXNlcjI0NDUyMTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2445216?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/juhasch",
      "html_url": "https://github.com/juhasch",
      "followers_url": "https://api.github.com/users/juhasch/followers",
      "following_url": "https://api.github.com/users/juhasch/following{/other_user}",
      "gists_url": "https://api.github.com/users/juhasch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/juhasch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/juhasch/subscriptions",
      "organizations_url": "https://api.github.com/users/juhasch/orgs",
      "repos_url": "https://api.github.com/users/juhasch/repos",
      "events_url": "https://api.github.com/users/juhasch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/juhasch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-16T17:27:15Z",
    "updated_at": "2017-05-16T17:27:15Z",
    "author_association": "CONTRIBUTOR",
    "body": "There is an MD renderer in the [nbextensions_configurator](https://github.com/Jupyter-contrib/jupyter_nbextensions_configurator).\r\n\r\nYou can render any MD file like this (here README.md in the notebook root directory:\r\nhttp://127.0.0.1:8888/nbextensions/nbextensions_configurator/rendermd/files/README.md\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/301916419",
    "html_url": "https://github.com/jupyter/notebook/issues/2485#issuecomment-301916419",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2485",
    "id": 301916419,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMTkxNjQxOQ==",
    "user": {
      "login": "ddulic",
      "id": 10076428,
      "node_id": "MDQ6VXNlcjEwMDc2NDI4",
      "avatar_url": "https://avatars.githubusercontent.com/u/10076428?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ddulic",
      "html_url": "https://github.com/ddulic",
      "followers_url": "https://api.github.com/users/ddulic/followers",
      "following_url": "https://api.github.com/users/ddulic/following{/other_user}",
      "gists_url": "https://api.github.com/users/ddulic/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ddulic/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ddulic/subscriptions",
      "organizations_url": "https://api.github.com/users/ddulic/orgs",
      "repos_url": "https://api.github.com/users/ddulic/repos",
      "events_url": "https://api.github.com/users/ddulic/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ddulic/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-16T21:09:52Z",
    "updated_at": "2017-05-17T08:17:00Z",
    "author_association": "NONE",
    "body": "Installed that by following the instruction, it just installed 2 extensions. Also installed https://github.com/ipython-contrib/jupyter_contrib_nbextensions but I can't seem to find the renderer. Could you explain a bit more how to set it up?\r\nSorry if I am not understanding something, new to jupyter :)\r\n\r\nMaybe an example will help. Going to https://try.jupyter.org/ and creating a new .md file, typing something in it and going back to tree view & then clicking on the .md file opens the editor - this is the correct behavior. Doing it locally shows the source :/\r\n\r\nThanks in advance @juhasch :)",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/302561224",
    "html_url": "https://github.com/jupyter/notebook/issues/2485#issuecomment-302561224",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2485",
    "id": 302561224,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjU2MTIyNA==",
    "user": {
      "login": "ostrokach",
      "id": 5614375,
      "node_id": "MDQ6VXNlcjU2MTQzNzU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5614375?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ostrokach",
      "html_url": "https://github.com/ostrokach",
      "followers_url": "https://api.github.com/users/ostrokach/followers",
      "following_url": "https://api.github.com/users/ostrokach/following{/other_user}",
      "gists_url": "https://api.github.com/users/ostrokach/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ostrokach/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ostrokach/subscriptions",
      "organizations_url": "https://api.github.com/users/ostrokach/orgs",
      "repos_url": "https://api.github.com/users/ostrokach/repos",
      "events_url": "https://api.github.com/users/ostrokach/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ostrokach/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-18T22:41:30Z",
    "updated_at": "2017-05-18T22:44:48Z",
    "author_association": "NONE",
    "body": "Agreed that this would be a killer feature. \r\n\r\nIf the README.md file was rendered below the list of files in a directory view, it would give us a way to document all the notebooks. For example, I have many repositories with the following structure. After getting so used to GitHub, I really miss the README.md not being rendered.\r\n\r\n![selection_013](https://cloud.githubusercontent.com/assets/5614375/26226375/11563e54-3bfa-11e7-8470-30c81e41e0e0.png)\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/305657196",
    "html_url": "https://github.com/jupyter/notebook/issues/2485#issuecomment-305657196",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2485",
    "id": 305657196,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNTY1NzE5Ng==",
    "user": {
      "login": "gnestor",
      "id": 512354,
      "node_id": "MDQ6VXNlcjUxMjM1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/512354?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnestor",
      "html_url": "https://github.com/gnestor",
      "followers_url": "https://api.github.com/users/gnestor/followers",
      "following_url": "https://api.github.com/users/gnestor/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnestor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnestor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnestor/subscriptions",
      "organizations_url": "https://api.github.com/users/gnestor/orgs",
      "repos_url": "https://api.github.com/users/gnestor/repos",
      "events_url": "https://api.github.com/users/gnestor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnestor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-02T00:33:50Z",
    "updated_at": "2017-06-02T00:33:50Z",
    "author_association": "CONTRIBUTOR",
    "body": "JupyterLab supports real-time rendering of Markdown documents:\r\n\r\n![image](https://cloud.githubusercontent.com/assets/512354/26706212/720977ec-46f0-11e7-82fb-59e405b40947.png)\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/316964797",
    "html_url": "https://github.com/jupyter/notebook/issues/2485#issuecomment-316964797",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2485",
    "id": 316964797,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjk2NDc5Nw==",
    "user": {
      "login": "oysteijo",
      "id": 4855341,
      "node_id": "MDQ6VXNlcjQ4NTUzNDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4855341?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/oysteijo",
      "html_url": "https://github.com/oysteijo",
      "followers_url": "https://api.github.com/users/oysteijo/followers",
      "following_url": "https://api.github.com/users/oysteijo/following{/other_user}",
      "gists_url": "https://api.github.com/users/oysteijo/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/oysteijo/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/oysteijo/subscriptions",
      "organizations_url": "https://api.github.com/users/oysteijo/orgs",
      "repos_url": "https://api.github.com/users/oysteijo/repos",
      "events_url": "https://api.github.com/users/oysteijo/events{/privacy}",
      "received_events_url": "https://api.github.com/users/oysteijo/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-21T10:18:51Z",
    "updated_at": "2017-07-21T10:18:51Z",
    "author_association": "NONE",
    "body": "@juhasch You suggested solution works fine. Can you please tell me how to configure Jupyter such that this open when I click the file in the Jupyter file listing? Thanks!",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/317170034",
    "html_url": "https://github.com/jupyter/notebook/issues/2485#issuecomment-317170034",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2485",
    "id": 317170034,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNzE3MDAzNA==",
    "user": {
      "login": "juhasch",
      "id": 2445216,
      "node_id": "MDQ6VXNlcjI0NDUyMTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2445216?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/juhasch",
      "html_url": "https://github.com/juhasch",
      "followers_url": "https://api.github.com/users/juhasch/followers",
      "following_url": "https://api.github.com/users/juhasch/following{/other_user}",
      "gists_url": "https://api.github.com/users/juhasch/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/juhasch/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/juhasch/subscriptions",
      "organizations_url": "https://api.github.com/users/juhasch/orgs",
      "repos_url": "https://api.github.com/users/juhasch/repos",
      "events_url": "https://api.github.com/users/juhasch/events{/privacy}",
      "received_events_url": "https://api.github.com/users/juhasch/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-22T09:21:05Z",
    "updated_at": "2017-07-22T09:21:05Z",
    "author_association": "CONTRIBUTOR",
    "body": "There is no simple way to do this, I think. One would have to change the notebook code, and as @gnestor has written this is already possible with JupyterLab, so there is little incentive to add this to the \"classic\" notebook, I guess.\r\n\r\nIt would be possible to write a server extension implementing a custom Jupyter file listing with additional features like markdown rendering. ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/323130138",
    "html_url": "https://github.com/jupyter/notebook/issues/2485#issuecomment-323130138",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2485",
    "id": 323130138,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzEzMDEzOA==",
    "user": {
      "login": "Faur",
      "id": 8115763,
      "node_id": "MDQ6VXNlcjgxMTU3NjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8115763?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Faur",
      "html_url": "https://github.com/Faur",
      "followers_url": "https://api.github.com/users/Faur/followers",
      "following_url": "https://api.github.com/users/Faur/following{/other_user}",
      "gists_url": "https://api.github.com/users/Faur/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Faur/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Faur/subscriptions",
      "organizations_url": "https://api.github.com/users/Faur/orgs",
      "repos_url": "https://api.github.com/users/Faur/repos",
      "events_url": "https://api.github.com/users/Faur/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Faur/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-17T16:48:10Z",
    "updated_at": "2017-08-17T16:48:10Z",
    "author_association": "NONE",
    "body": "Just to make sure I understand. The feature by @ostrokach will be added to JupyterLab, but not the current Jupyter UI? I.e. it will take a while before this is rolled out.\r\n\r\nIt would seem to me that this would be a relatively simple feature to add that would greatly enhance the user experience for many (I am a TA and would love this feature!). \r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/323132509",
    "html_url": "https://github.com/jupyter/notebook/issues/2485#issuecomment-323132509",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2485",
    "id": 323132509,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMyMzEzMjUwOQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-08-17T16:57:25Z",
    "updated_at": "2017-08-17T16:57:25Z",
    "author_association": "MEMBER",
    "body": "There isn't currently any mechanism for rendering a file other than a notebook - we can display text files in a simple editor, or send them to the browser raw to let it render/download them.\r\n\r\nIf you can come up with a non-invasive PR which adds the feature without interfering with the mechanisms and UI already there, I think we'd be happy to merge that. But I don't have a clear idea where I'd add that to the existing framework.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/336145440",
    "html_url": "https://github.com/jupyter/notebook/issues/2485#issuecomment-336145440",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2485",
    "id": 336145440,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjE0NTQ0MA==",
    "user": {
      "login": "Sbelletier",
      "id": 15371062,
      "node_id": "MDQ6VXNlcjE1MzcxMDYy",
      "avatar_url": "https://avatars.githubusercontent.com/u/15371062?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Sbelletier",
      "html_url": "https://github.com/Sbelletier",
      "followers_url": "https://api.github.com/users/Sbelletier/followers",
      "following_url": "https://api.github.com/users/Sbelletier/following{/other_user}",
      "gists_url": "https://api.github.com/users/Sbelletier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Sbelletier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Sbelletier/subscriptions",
      "organizations_url": "https://api.github.com/users/Sbelletier/orgs",
      "repos_url": "https://api.github.com/users/Sbelletier/repos",
      "events_url": "https://api.github.com/users/Sbelletier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Sbelletier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-12T13:57:53Z",
    "updated_at": "2017-10-12T13:57:53Z",
    "author_association": "NONE",
    "body": "This may be a stupid suggestion, but couldn't we consider .md files as a special \"markdown notebook\" containing only one cell ? We could then almost reuse almost all of the python notebook UI couldn't we ? \r\n\r\nThe renderer exists for basic notebooks, and markdown is pretty much a standard for writing non-code text in jupyter so it does seem a good idea to make a markdown editor+renderer as the basis for writing formatted natural langage text in jupyter.\r\n\r\nI don't think cells, the way are defined, are invasive in markdown syntax so both should be able to function together. This way we may even be able to support splitting the markdown files in several cells when editing with jupyter to avoid rendering the whole file in one go.\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/336175197",
    "html_url": "https://github.com/jupyter/notebook/issues/2485#issuecomment-336175197",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2485",
    "id": 336175197,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjE3NTE5Nw==",
    "user": {
      "login": "Faur",
      "id": 8115763,
      "node_id": "MDQ6VXNlcjgxMTU3NjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8115763?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Faur",
      "html_url": "https://github.com/Faur",
      "followers_url": "https://api.github.com/users/Faur/followers",
      "following_url": "https://api.github.com/users/Faur/following{/other_user}",
      "gists_url": "https://api.github.com/users/Faur/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Faur/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Faur/subscriptions",
      "organizations_url": "https://api.github.com/users/Faur/orgs",
      "repos_url": "https://api.github.com/users/Faur/repos",
      "events_url": "https://api.github.com/users/Faur/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Faur/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-12T15:33:50Z",
    "updated_at": "2017-10-12T15:33:50Z",
    "author_association": "NONE",
    "body": "@Sbelletier I like the idea of special 'markdown notebooks' but adding multicell support would require adding content to the `.md` file (as far as I understand), and thus break it in other interpreters, but automatically rendering all `.md` as special limited notebooks sounds reasonable to me.\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/336300850",
    "html_url": "https://github.com/jupyter/notebook/issues/2485#issuecomment-336300850",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2485",
    "id": 336300850,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMzNjMwMDg1MA==",
    "user": {
      "login": "gnestor",
      "id": 512354,
      "node_id": "MDQ6VXNlcjUxMjM1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/512354?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnestor",
      "html_url": "https://github.com/gnestor",
      "followers_url": "https://api.github.com/users/gnestor/followers",
      "following_url": "https://api.github.com/users/gnestor/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnestor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnestor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnestor/subscriptions",
      "organizations_url": "https://api.github.com/users/gnestor/orgs",
      "repos_url": "https://api.github.com/users/gnestor/repos",
      "events_url": "https://api.github.com/users/gnestor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnestor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-10-12T22:51:02Z",
    "updated_at": "2017-10-12T22:51:02Z",
    "author_association": "CONTRIBUTOR",
    "body": "@Sbelletier It would not be trivial to implement something like this. JupyterLab is designed with this use case in mind (e.g. you can edit a markdown file and render the same markdown file in another panel and the 2 representation stay in sync) whereas the notebook isn't. If you can't use JupyterLab for some reason, then you can always edit your markdown in a cell of a notebook and copy/paste it over to a markdown file when you're done. We unfortunately have limited resources and the majority of those resources dedicated to JupyterLab, so for that reason I'm going to close this issue.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/378505667",
    "html_url": "https://github.com/jupyter/notebook/issues/2485#issuecomment-378505667",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2485",
    "id": 378505667,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM3ODUwNTY2Nw==",
    "user": {
      "login": "fuyw",
      "id": 23493245,
      "node_id": "MDQ6VXNlcjIzNDkzMjQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/23493245?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/fuyw",
      "html_url": "https://github.com/fuyw",
      "followers_url": "https://api.github.com/users/fuyw/followers",
      "following_url": "https://api.github.com/users/fuyw/following{/other_user}",
      "gists_url": "https://api.github.com/users/fuyw/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/fuyw/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/fuyw/subscriptions",
      "organizations_url": "https://api.github.com/users/fuyw/orgs",
      "repos_url": "https://api.github.com/users/fuyw/repos",
      "events_url": "https://api.github.com/users/fuyw/events{/privacy}",
      "received_events_url": "https://api.github.com/users/fuyw/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-04-04T07:23:03Z",
    "updated_at": "2018-04-04T07:23:03Z",
    "author_association": "NONE",
    "body": "notedown may help.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/395872471",
    "html_url": "https://github.com/jupyter/notebook/issues/2485#issuecomment-395872471",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2485",
    "id": 395872471,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTg3MjQ3MQ==",
    "user": {
      "login": "zen-gineer",
      "id": 23371802,
      "node_id": "MDQ6VXNlcjIzMzcxODAy",
      "avatar_url": "https://avatars.githubusercontent.com/u/23371802?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zen-gineer",
      "html_url": "https://github.com/zen-gineer",
      "followers_url": "https://api.github.com/users/zen-gineer/followers",
      "following_url": "https://api.github.com/users/zen-gineer/following{/other_user}",
      "gists_url": "https://api.github.com/users/zen-gineer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zen-gineer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zen-gineer/subscriptions",
      "organizations_url": "https://api.github.com/users/zen-gineer/orgs",
      "repos_url": "https://api.github.com/users/zen-gineer/repos",
      "events_url": "https://api.github.com/users/zen-gineer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zen-gineer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-08T19:56:18Z",
    "updated_at": "2018-06-08T19:59:23Z",
    "author_association": "NONE",
    "body": "Here's some code I wrote from something else that does something similar. \r\n\r\nIt looks through a given folder and creates an ipynb file with all readme files as markdown cells.\r\n\r\n````\r\n#---- Merge with readme ---- ---- ---- ---- ---- --- ---- ---- ---- ----\r\nimport nbformat; import os; import re\r\nnewMergedCells = nbformat.v4.new_notebook()\r\noneTime = False; readmeLines = ''; resources = ''\r\nfolderToWalkThrough = os.path.join('.','06-Python-APIs')\r\nfor root, dirs, files in os.walk(folderToWalkThrough, topdown=True):\r\n    for name in files: #Only care about the files\r\n        #print (os.path.join(root,name))\r\n        if re.search('\\.md', name):\r\n            with open (os.path.join(root,name)) as readme:\r\n                readmeLines = readme.read()\r\n                newCell = nbformat.v4.new_markdown_cell(str(readmeLines))\r\n                merged.cells.insert(-1,newCell)\r\n\r\n\r\nnewMergedCells.metadata.name = folderToWalkThrough.replace('.','').replace('/','_').lstrip('_')\r\nnbformat.write(merged, '{0}_Merged.ipynb'.format(newMergedCells.metadata.name))\r\n````",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/395873239",
    "html_url": "https://github.com/jupyter/notebook/issues/2485#issuecomment-395873239",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2485",
    "id": 395873239,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTg3MzIzOQ==",
    "user": {
      "login": "zen-gineer",
      "id": 23371802,
      "node_id": "MDQ6VXNlcjIzMzcxODAy",
      "avatar_url": "https://avatars.githubusercontent.com/u/23371802?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zen-gineer",
      "html_url": "https://github.com/zen-gineer",
      "followers_url": "https://api.github.com/users/zen-gineer/followers",
      "following_url": "https://api.github.com/users/zen-gineer/following{/other_user}",
      "gists_url": "https://api.github.com/users/zen-gineer/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zen-gineer/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zen-gineer/subscriptions",
      "organizations_url": "https://api.github.com/users/zen-gineer/orgs",
      "repos_url": "https://api.github.com/users/zen-gineer/repos",
      "events_url": "https://api.github.com/users/zen-gineer/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zen-gineer/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-08T19:58:51Z",
    "updated_at": "2018-06-08T19:59:55Z",
    "author_association": "NONE",
    "body": "This code alternatively loops through all files in a given directory and merges all ipynb and readme files into a single ipynb file. \r\n\r\n````\r\n#---- Merge with readme ---- ---- ---- ---- ---- --- ---- ---- ---- ----\r\nimport nbformat; import os; import re\r\nmerged = None; oneTime = False; readmeLines = ''; resources = ''\r\nfolderToWalkThrough = os.path.join('.','06-Python-APIs')\r\nfor root, dirs, files in os.walk(folderToWalkThrough, topdown=True):\r\n    for name in files: #Only care about the files\r\n        #print (os.path.join(root,name))\r\n        if re.search('\\.md', name):\r\n            with open (os.path.join(root,name)) as readme:\r\n                readmeLines = readme.read()\r\n            \r\n        if re.search('\\.ipynb', name): #Make sure its a ipython notebook file\r\n            with open(os.path.join(root, name) ) as f:\r\n                nb = nbformat.read(f, as_version=4)\r\n            if merged == None:\r\n                merged = nb\r\n            else:\r\n                if readmeLines: \r\n                    newCell = nbformat.v4.new_markdown_cell(str(readmeLines))\r\n                    merged.cells.insert(-1,newCell)\r\n                    readmeLines = ''\r\n                \r\n                    path = os.path.join(root,name)\r\n                    resources = path.split('Unsolved')[0] if re.search('Unsolved', root) else ''\r\n                    #print(resources)\r\n                    resources = path.split('Solved')[0] if re.search('Solved', root) and not(resources) else resources\r\n                    #print(resources)\r\n                    resources = os.path.join(resources, 'Resources')\r\n                    resources = os.path.join(root,'Resources') if not(os.path.isdir(resources)) else resources\r\n                    #print(resources)\r\n                    if os.path.isdir(resources):\r\n                        csvCode= 'import os\\nimport re\\nimport pandas as pd'\r\n                        csvCode+='\\ncsvData=dict()\\nfor root, dirs, files in os.walk(\\'{0}\\', topdown=True):'.format(resources)\r\n                        csvCode+='\\n    for name in files: #Only care about the files\\n        if re.search(\\'.csv\\',name):'\r\n                        csvCode+='\\n            csvData[name.split(\\'.\\')[0]] = pd.read_csv(open(os.path.join(root,name)))'\r\n                        csvCode+='\\ncsvData'\r\n                        newCodeCell = nbformat.v4.new_code_cell(csvCode)\r\n                        merged.cells.insert(-1,newCodeCell)\r\n                \r\n                merged.cells.insert(-1, nbformat.v4.new_markdown_cell(str(os.path.join(root, name))))\r\n                merged.cells.extend(nb.cells)\r\n\r\nnewMergedCells = nbformat.v4.new_notebook()\r\nnewMergedCells.metadata.name = folderToWalkThrough.replace('.','').replace('/','_').lstrip('_')\r\nnbformat.write(merged, '{0}_Merged.ipynb'.format(newMergedCells.metadata.name))\r\n```",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/452930514",
    "html_url": "https://github.com/jupyter/notebook/issues/2485#issuecomment-452930514",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2485",
    "id": 452930514,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ1MjkzMDUxNA==",
    "user": {
      "login": "carlosmarin",
      "id": 1328855,
      "node_id": "MDQ6VXNlcjEzMjg4NTU=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1328855?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/carlosmarin",
      "html_url": "https://github.com/carlosmarin",
      "followers_url": "https://api.github.com/users/carlosmarin/followers",
      "following_url": "https://api.github.com/users/carlosmarin/following{/other_user}",
      "gists_url": "https://api.github.com/users/carlosmarin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/carlosmarin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/carlosmarin/subscriptions",
      "organizations_url": "https://api.github.com/users/carlosmarin/orgs",
      "repos_url": "https://api.github.com/users/carlosmarin/repos",
      "events_url": "https://api.github.com/users/carlosmarin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/carlosmarin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-01-10T00:59:51Z",
    "updated_at": "2019-01-10T00:59:51Z",
    "author_association": "NONE",
    "body": "@zen-gineer - thanks for the share! \r\nCrazy coincidence that I stumbled into this snippet while (also) prepping to teach bootcamp class =) (`06-Python-APIs` was the giveaway).\r\n\r\nFixed by renaming `merged` in the first code.\r\n\r\n```\r\nimport nbformat; import os; import re\r\nnewMergedCells = nbformat.v4.new_notebook()\r\noneTime = False; readmeLines = ''; resources = ''\r\nfolderToWalkThrough = os.path.join('.')\r\nfor root, dirs, files in os.walk(folderToWalkThrough, topdown=True):\r\n    for name in files: #Only care about the files\r\n        print (os.path.join(root,name))\r\n        if re.search('\\.md', name):\r\n            with open (os.path.join(root,name)) as readme:\r\n                readmeLines = readme.read()\r\n                newCell = nbformat.v4.new_markdown_cell(str(readmeLines))\r\n                newMergedCells.cells.insert(-1,newCell)\r\n\r\nnewMergedCells.metadata.name = folderToWalkThrough.replace('.','').replace('/','_').lstrip('_')\r\nnbformat.write(newMergedCells, '{0}_Merged.ipynb'.format(newMergedCells.metadata.name))\r\n```",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/476513768",
    "html_url": "https://github.com/jupyter/notebook/issues/2485#issuecomment-476513768",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2485",
    "id": 476513768,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQ3NjUxMzc2OA==",
    "user": {
      "login": "Hiyorimi",
      "id": 3055666,
      "node_id": "MDQ6VXNlcjMwNTU2NjY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3055666?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Hiyorimi",
      "html_url": "https://github.com/Hiyorimi",
      "followers_url": "https://api.github.com/users/Hiyorimi/followers",
      "following_url": "https://api.github.com/users/Hiyorimi/following{/other_user}",
      "gists_url": "https://api.github.com/users/Hiyorimi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Hiyorimi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Hiyorimi/subscriptions",
      "organizations_url": "https://api.github.com/users/Hiyorimi/orgs",
      "repos_url": "https://api.github.com/users/Hiyorimi/repos",
      "events_url": "https://api.github.com/users/Hiyorimi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Hiyorimi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-03-26T07:58:18Z",
    "updated_at": "2019-03-26T07:58:18Z",
    "author_association": "NONE",
    "body": "So, anyone working on this? I would love to implement [Readme.md](https://github.com/jupyter/notebook/issues/2485#issuecomment-302561224) display and support preview of MD files in separate tab, if someone would provide occasional support and point me where to start. I never committed to jupyter before. ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/662751537",
    "html_url": "https://github.com/jupyter/notebook/issues/2485#issuecomment-662751537",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2485",
    "id": 662751537,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2Mjc1MTUzNw==",
    "user": {
      "login": "LGR3",
      "id": 17868621,
      "node_id": "MDQ6VXNlcjE3ODY4NjIx",
      "avatar_url": "https://avatars.githubusercontent.com/u/17868621?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/LGR3",
      "html_url": "https://github.com/LGR3",
      "followers_url": "https://api.github.com/users/LGR3/followers",
      "following_url": "https://api.github.com/users/LGR3/following{/other_user}",
      "gists_url": "https://api.github.com/users/LGR3/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/LGR3/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/LGR3/subscriptions",
      "organizations_url": "https://api.github.com/users/LGR3/orgs",
      "repos_url": "https://api.github.com/users/LGR3/repos",
      "events_url": "https://api.github.com/users/LGR3/events{/privacy}",
      "received_events_url": "https://api.github.com/users/LGR3/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-22T23:42:44Z",
    "updated_at": "2020-07-22T23:42:44Z",
    "author_association": "NONE",
    "body": "What the ... ??? ( Can I Develop and pull request it ?? )",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/662757604",
    "html_url": "https://github.com/jupyter/notebook/issues/2485#issuecomment-662757604",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2485",
    "id": 662757604,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2Mjc1NzYwNA==",
    "user": {
      "login": "kevin-bates",
      "id": 22599560,
      "node_id": "MDQ6VXNlcjIyNTk5NTYw",
      "avatar_url": "https://avatars.githubusercontent.com/u/22599560?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kevin-bates",
      "html_url": "https://github.com/kevin-bates",
      "followers_url": "https://api.github.com/users/kevin-bates/followers",
      "following_url": "https://api.github.com/users/kevin-bates/following{/other_user}",
      "gists_url": "https://api.github.com/users/kevin-bates/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kevin-bates/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kevin-bates/subscriptions",
      "organizations_url": "https://api.github.com/users/kevin-bates/orgs",
      "repos_url": "https://api.github.com/users/kevin-bates/repos",
      "events_url": "https://api.github.com/users/kevin-bates/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kevin-bates/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-23T00:05:42Z",
    "updated_at": "2020-07-23T00:05:42Z",
    "author_association": "MEMBER",
    "body": "@LGR3 - thank you for your interest.  However, I believe this issue may have been addressed by #5299 - which was closed in favor of #5488 due to refactoring efforts.  If there's no further work for it, perhaps you could take it for a spin - which would be a big help.",
    "performed_via_github_app": null
  }
]
