[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/189915432",
    "html_url": "https://github.com/jupyter/notebook/issues/1151#issuecomment-189915432",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1151",
    "id": 189915432,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4OTkxNTQzMg==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-28T17:59:06Z",
    "updated_at": "2016-02-28T17:59:06Z",
    "author_association": "MEMBER",
    "body": "You are inherently using matplotlib in the \"wrong\" way to have multiple figures. \n\n> it does not show up below the second cell, as expected, but replaces the graph from the first cell.\n\nActually it is expected to plot on the first cell.\n\nEither you use the statefull pyplot interface (what you are doing), which implicitly plot on the currently open window/fig/axes ; here the one in the first cell. \n(`%matplotlib inline` is a specific case where this is not visually the case for memory leak reasons.)\n\nThe idiomatic way to plot using matplotlib is to create a couple of `fig/axes` using `plt.subplots`, and then use the plot methods of these axes:\n\n```\n%matplotlib notebook\n\nimport matplotlib.pyplot as plt\n```\n\n```\nfig, axes = plt.subplots()\naxes.plot(range(10))\n#figure one\n```\n\n```\nfig, axes = plt.subplots()\naxes.plot(range(10))\n#figure two\n```\n\nThis is in general much more flexible and reusable than using the statefull interface. And here as you are plotting on an explicit axis you **can**have multiple opened plotter. It is also necessary when for example you get a 2 by 2 grid of  figures to plot on the right one, try for example:\n\n```\nfig, ((a,b),(c,d)) = plt.subplots(2,2)\na.plot(x, sin(x))\nb.plot(x, cos(x))\nc.plot(x, tan(x))\nd.plot(x, tanh(x))\n```\n\nI'm closing the issue as this is not a bug, and is expected, but feel free to continue asking question.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/189963663",
    "html_url": "https://github.com/jupyter/notebook/issues/1151#issuecomment-189963663",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1151",
    "id": 189963663,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4OTk2MzY2Mw==",
    "user": {
      "login": "Phyks",
      "id": 3856586,
      "node_id": "MDQ6VXNlcjM4NTY1ODY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3856586?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Phyks",
      "html_url": "https://github.com/Phyks",
      "followers_url": "https://api.github.com/users/Phyks/followers",
      "following_url": "https://api.github.com/users/Phyks/following{/other_user}",
      "gists_url": "https://api.github.com/users/Phyks/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Phyks/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Phyks/subscriptions",
      "organizations_url": "https://api.github.com/users/Phyks/orgs",
      "repos_url": "https://api.github.com/users/Phyks/repos",
      "events_url": "https://api.github.com/users/Phyks/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Phyks/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-28T22:59:54Z",
    "updated_at": "2016-02-28T22:59:54Z",
    "author_association": "NONE",
    "body": "@Carreau thanks a lot for these explanations. I recently switched from `%matplotlib inline` to `%matplotlib notebook` and was used to having different figures even with the stateful pyplot interface, and came across many notebooks using `matplotlib` the wrong way, but it was actually working due to this memory leak \"feature\".\n\nSorry for the noiseâ€¦\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/189987232",
    "html_url": "https://github.com/jupyter/notebook/issues/1151#issuecomment-189987232",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1151",
    "id": 189987232,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4OTk4NzIzMg==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-29T01:15:50Z",
    "updated_at": "2016-02-29T01:15:50Z",
    "author_association": "MEMBER",
    "body": "No problem, feel free to ask if you have any more questions.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/190210971",
    "html_url": "https://github.com/jupyter/notebook/issues/1151#issuecomment-190210971",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1151",
    "id": 190210971,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5MDIxMDk3MQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-29T13:27:31Z",
    "updated_at": "2016-02-29T13:27:31Z",
    "author_association": "MEMBER",
    "body": "You can also close the figures programmatically at the end of each cell - this is what the inline backend does by default. I haven't tried it, but something like `plt.gcf().close()` should do it.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/274297523",
    "html_url": "https://github.com/jupyter/notebook/issues/1151#issuecomment-274297523",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1151",
    "id": 274297523,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI3NDI5NzUyMw==",
    "user": {
      "login": "David-OConnor",
      "id": 4590796,
      "node_id": "MDQ6VXNlcjQ1OTA3OTY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4590796?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/David-OConnor",
      "html_url": "https://github.com/David-OConnor",
      "followers_url": "https://api.github.com/users/David-OConnor/followers",
      "following_url": "https://api.github.com/users/David-OConnor/following{/other_user}",
      "gists_url": "https://api.github.com/users/David-OConnor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/David-OConnor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/David-OConnor/subscriptions",
      "organizations_url": "https://api.github.com/users/David-OConnor/orgs",
      "repos_url": "https://api.github.com/users/David-OConnor/repos",
      "events_url": "https://api.github.com/users/David-OConnor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/David-OConnor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-01-22T00:20:11Z",
    "updated_at": "2017-01-22T00:37:20Z",
    "author_association": "NONE",
    "body": "This behavior forces you to use one of two valid MPL APIs, and if you're calling an external function that uses the plt one, you're out of luck. Both APIs are awkward, but the fig, ax one required to make the notebook backend work is verbose and requires boilerplate.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/304705807",
    "html_url": "https://github.com/jupyter/notebook/issues/1151#issuecomment-304705807",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1151",
    "id": 304705807,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNDcwNTgwNw==",
    "user": {
      "login": "maxbellec",
      "id": 7253902,
      "node_id": "MDQ6VXNlcjcyNTM5MDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7253902?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/maxbellec",
      "html_url": "https://github.com/maxbellec",
      "followers_url": "https://api.github.com/users/maxbellec/followers",
      "following_url": "https://api.github.com/users/maxbellec/following{/other_user}",
      "gists_url": "https://api.github.com/users/maxbellec/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/maxbellec/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/maxbellec/subscriptions",
      "organizations_url": "https://api.github.com/users/maxbellec/orgs",
      "repos_url": "https://api.github.com/users/maxbellec/repos",
      "events_url": "https://api.github.com/users/maxbellec/events{/privacy}",
      "received_events_url": "https://api.github.com/users/maxbellec/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-29T17:37:41Z",
    "updated_at": "2017-05-29T17:39:01Z",
    "author_association": "NONE",
    "body": "the correct way to close the figure programmatically within the Notebook seems to be `plt.close()` \r\nAt least for `matplotlib==2.0.1`",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/307217420",
    "html_url": "https://github.com/jupyter/notebook/issues/1151#issuecomment-307217420",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1151",
    "id": 307217420,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzIxNzQyMA==",
    "user": {
      "login": "darthoctopus",
      "id": 5761408,
      "node_id": "MDQ6VXNlcjU3NjE0MDg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5761408?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/darthoctopus",
      "html_url": "https://github.com/darthoctopus",
      "followers_url": "https://api.github.com/users/darthoctopus/followers",
      "following_url": "https://api.github.com/users/darthoctopus/following{/other_user}",
      "gists_url": "https://api.github.com/users/darthoctopus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/darthoctopus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/darthoctopus/subscriptions",
      "organizations_url": "https://api.github.com/users/darthoctopus/orgs",
      "repos_url": "https://api.github.com/users/darthoctopus/repos",
      "events_url": "https://api.github.com/users/darthoctopus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/darthoctopus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-08T20:25:43Z",
    "updated_at": "2017-06-08T21:16:59Z",
    "author_association": "NONE",
    "body": "I agree with David: there should at least be some config option to permit using the stateful API with the notebook backend (e.g. implicitly calling plt.close() before executing cell contents whenever a cell is evaluated). The whole point of me using the stateful API is to avoid boilerplate (vs the OO API), and having to manually close a plot every time I make a new one is counterproductive to that end.\r\n\r\n(fwiw I don't see why this wouldn't be justifiable for the notebook backend if InlineBackend.close_figures = True is a valid configuration option for inline)",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/661323566",
    "html_url": "https://github.com/jupyter/notebook/issues/1151#issuecomment-661323566",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1151",
    "id": 661323566,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2MTMyMzU2Ng==",
    "user": {
      "login": "blueForestIcarus",
      "id": 6549542,
      "node_id": "MDQ6VXNlcjY1NDk1NDI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6549542?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/blueForestIcarus",
      "html_url": "https://github.com/blueForestIcarus",
      "followers_url": "https://api.github.com/users/blueForestIcarus/followers",
      "following_url": "https://api.github.com/users/blueForestIcarus/following{/other_user}",
      "gists_url": "https://api.github.com/users/blueForestIcarus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/blueForestIcarus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/blueForestIcarus/subscriptions",
      "organizations_url": "https://api.github.com/users/blueForestIcarus/orgs",
      "repos_url": "https://api.github.com/users/blueForestIcarus/repos",
      "events_url": "https://api.github.com/users/blueForestIcarus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/blueForestIcarus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-20T20:44:45Z",
    "updated_at": "2020-07-20T20:44:45Z",
    "author_association": "NONE",
    "body": "ItS a FeAtUre NoT a BuG",
    "performed_via_github_app": null
  }
]
