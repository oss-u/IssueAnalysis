[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/195490670",
    "html_url": "https://github.com/jupyter/notebook/issues/1198#issuecomment-195490670",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1198",
    "id": 195490670,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTQ5MDY3MA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-11T18:33:10Z",
    "updated_at": "2016-03-11T18:33:10Z",
    "author_association": "MEMBER",
    "body": "Are you killing the kernel or the notebook server and all kernels? The\nkernels don't write the notebook files, so killing them should not cause\nthat. Is it possible to do a softer shutdown, I.e. sigterm, instead of hard\nkilling it?\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/195504600",
    "html_url": "https://github.com/jupyter/notebook/issues/1198#issuecomment-195504600",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1198",
    "id": 195504600,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTUwNDYwMA==",
    "user": {
      "login": "ryanlovett",
      "id": 10248125,
      "node_id": "MDQ6VXNlcjEwMjQ4MTI1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10248125?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanlovett",
      "html_url": "https://github.com/ryanlovett",
      "followers_url": "https://api.github.com/users/ryanlovett/followers",
      "following_url": "https://api.github.com/users/ryanlovett/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanlovett/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanlovett/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanlovett/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanlovett/orgs",
      "repos_url": "https://api.github.com/users/ryanlovett/repos",
      "events_url": "https://api.github.com/users/ryanlovett/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanlovett/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-11T19:15:01Z",
    "updated_at": "2016-03-11T19:15:01Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sorry, it is the notebook server that is getting killed, so s/kernel/notebook server/g. Docker is [OOM killing](https://docs.docker.com/engine/reference/run/#user-memory-constraints) our [swarmspawner](https://github.com/data-8/jupyterhub-deploy/blob/master/roles/jupyterhub/files/swarmspawner.py) spawned containers when they want to use more than `extra_host_config['mem_limit'] = '2g'`.\n\nI think we can try to reduce the frequency of these events by setting a 2GB memory reservation and increasing the limit. I don't know how far we can take that given hardware constraints. If we disabled OOM for the container, it would just stall since the notebook server is the only thing running in the container and there's nothing else to free up.\n\nBut all that being said, can the notebook prevent zeroing out the .ipynb file under such conditions?\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/195556375",
    "html_url": "https://github.com/jupyter/notebook/issues/1198#issuecomment-195556375",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1198",
    "id": 195556375,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTU1NjM3NQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-11T21:15:14Z",
    "updated_at": "2016-03-11T21:15:14Z",
    "author_association": "MEMBER",
    "body": "We had more atomic writing before, but it caused problems with things like network filesystems and folders synced by services like Dropbox, so we got to what we have now.\n\nDoes the `.~filename.ipynb` backup contain a valid notebook with the contents you want? Our atomic-ish compromise should ensure there's always a usable copy of the notebook, even if it's in the backup file. However, trying to do anything reliably with filesystems is a big pain, so it might not be working as intended.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/195571184",
    "html_url": "https://github.com/jupyter/notebook/issues/1198#issuecomment-195571184",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1198",
    "id": 195571184,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTU3MTE4NA==",
    "user": {
      "login": "ryanlovett",
      "id": 10248125,
      "node_id": "MDQ6VXNlcjEwMjQ4MTI1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10248125?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanlovett",
      "html_url": "https://github.com/ryanlovett",
      "followers_url": "https://api.github.com/users/ryanlovett/followers",
      "following_url": "https://api.github.com/users/ryanlovett/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanlovett/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanlovett/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanlovett/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanlovett/orgs",
      "repos_url": "https://api.github.com/users/ryanlovett/repos",
      "events_url": "https://api.github.com/users/ryanlovett/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanlovett/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-11T22:04:42Z",
    "updated_at": "2016-03-11T22:04:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Yes, the backup does contain a valid notebook. There are also older versions available as checkpoints.\n\nI'm sure it can be very difficult in trying to cope with various filesystems and filesystem like things. :)\n\nDoes it make sense to checkpoint during this write rather than use the .~filename.ipynb mechanism? That way the user has a way to easily restore it if necessary.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/195572895",
    "html_url": "https://github.com/jupyter/notebook/issues/1198#issuecomment-195572895",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1198",
    "id": 195572895,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NTU3Mjg5NQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-11T22:11:26Z",
    "updated_at": "2016-03-11T22:11:26Z",
    "author_association": "MEMBER",
    "body": "Checkpoints are kind of different - we use that so that if a user deletes some cells just before an autosave, they still have their manual save as the checkpoint to go back to.\n\nI think that if the `~.whatever.ipynb` exists when the notebook server isn't running, that means that it died mid-save, and you should probably copy it back over `whatever.ipynb`.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/196446948",
    "html_url": "https://github.com/jupyter/notebook/issues/1198#issuecomment-196446948",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1198",
    "id": 196446948,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjQ0Njk0OA==",
    "user": {
      "login": "ryanlovett",
      "id": 10248125,
      "node_id": "MDQ6VXNlcjEwMjQ4MTI1",
      "avatar_url": "https://avatars.githubusercontent.com/u/10248125?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ryanlovett",
      "html_url": "https://github.com/ryanlovett",
      "followers_url": "https://api.github.com/users/ryanlovett/followers",
      "following_url": "https://api.github.com/users/ryanlovett/following{/other_user}",
      "gists_url": "https://api.github.com/users/ryanlovett/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ryanlovett/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ryanlovett/subscriptions",
      "organizations_url": "https://api.github.com/users/ryanlovett/orgs",
      "repos_url": "https://api.github.com/users/ryanlovett/repos",
      "events_url": "https://api.github.com/users/ryanlovett/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ryanlovett/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-14T18:05:54Z",
    "updated_at": "2016-03-14T18:05:54Z",
    "author_association": "CONTRIBUTOR",
    "body": "Is it feasible to make this easier for users? Worst case we'll have to tell them to save more frequently.\n\nWould it be possible if the .~ backup file could be implemented as a \"system\" checkpoint? That way our students could easily recover via \"Revert to Checkpoint\".\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/196806804",
    "html_url": "https://github.com/jupyter/notebook/issues/1198#issuecomment-196806804",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1198",
    "id": 196806804,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE5NjgwNjgwNA==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-03-15T13:00:59Z",
    "updated_at": "2016-03-15T13:00:59Z",
    "author_association": "MEMBER",
    "body": "We could check for the atomic intermediate on read, since in this situation:\n- 'true' notebook file is invalid\n- AND atomic intermediate exists\n\nwe know with some confidence that it died during an atomic write. In this case, we could restore the atomic intermediate, moving the bad file aside, just to be safe.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/247114170",
    "html_url": "https://github.com/jupyter/notebook/issues/1198#issuecomment-247114170",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1198",
    "id": 247114170,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0NzExNDE3MA==",
    "user": {
      "login": "gnestor",
      "id": 512354,
      "node_id": "MDQ6VXNlcjUxMjM1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/512354?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnestor",
      "html_url": "https://github.com/gnestor",
      "followers_url": "https://api.github.com/users/gnestor/followers",
      "following_url": "https://api.github.com/users/gnestor/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnestor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnestor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnestor/subscriptions",
      "organizations_url": "https://api.github.com/users/gnestor/orgs",
      "repos_url": "https://api.github.com/users/gnestor/repos",
      "events_url": "https://api.github.com/users/gnestor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnestor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-14T18:42:42Z",
    "updated_at": "2016-09-14T18:42:42Z",
    "author_association": "CONTRIBUTOR",
    "body": "Closed by https://github.com/jupyter/notebook/pull/1253\n",
    "performed_via_github_app": null
  }
]
