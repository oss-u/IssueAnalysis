[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/157143247",
    "html_url": "https://github.com/jupyter/notebook/issues/700#issuecomment-157143247",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/700",
    "id": 157143247,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzE0MzI0Nw==",
    "user": {
      "login": "GaelVaroquaux",
      "id": 208217,
      "node_id": "MDQ6VXNlcjIwODIxNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/208217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GaelVaroquaux",
      "html_url": "https://github.com/GaelVaroquaux",
      "followers_url": "https://api.github.com/users/GaelVaroquaux/followers",
      "following_url": "https://api.github.com/users/GaelVaroquaux/following{/other_user}",
      "gists_url": "https://api.github.com/users/GaelVaroquaux/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GaelVaroquaux/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GaelVaroquaux/subscriptions",
      "organizations_url": "https://api.github.com/users/GaelVaroquaux/orgs",
      "repos_url": "https://api.github.com/users/GaelVaroquaux/repos",
      "events_url": "https://api.github.com/users/GaelVaroquaux/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GaelVaroquaux/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-16T19:25:44Z",
    "updated_at": "2015-11-16T19:25:44Z",
    "author_association": "CONTRIBUTOR",
    "body": "As a data point, I have added explicit flushing of stderr in a local copy of joblib (as suggested by @ellisonbg according to https://github.com/scikit-learn/scikit-learn/issues/5811), but it didn't solve the problem.\n\nTechnically, stderr shouldn't be buffered (according to Unix specs), so in theory it shouldn't make a difference.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/157274256",
    "html_url": "https://github.com/jupyter/notebook/issues/700#issuecomment-157274256",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/700",
    "id": 157274256,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzI3NDI1Ng==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-17T05:28:16Z",
    "updated_at": "2015-11-17T05:28:16Z",
    "author_association": "MEMBER",
    "body": "> IPython console\n\nThe author means plain IPython, using `$ ipython console` (yes this is a thing) I can reproduce that. So this is likely to be something deeper of the internal of the protocol than something notebook specific. \n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/157283714",
    "html_url": "https://github.com/jupyter/notebook/issues/700#issuecomment-157283714",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/700",
    "id": 157283714,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzI4MzcxNA==",
    "user": {
      "login": "GaelVaroquaux",
      "id": 208217,
      "node_id": "MDQ6VXNlcjIwODIxNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/208217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GaelVaroquaux",
      "html_url": "https://github.com/GaelVaroquaux",
      "followers_url": "https://api.github.com/users/GaelVaroquaux/followers",
      "following_url": "https://api.github.com/users/GaelVaroquaux/following{/other_user}",
      "gists_url": "https://api.github.com/users/GaelVaroquaux/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GaelVaroquaux/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GaelVaroquaux/subscriptions",
      "organizations_url": "https://api.github.com/users/GaelVaroquaux/orgs",
      "repos_url": "https://api.github.com/users/GaelVaroquaux/repos",
      "events_url": "https://api.github.com/users/GaelVaroquaux/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GaelVaroquaux/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-17T06:26:12Z",
    "updated_at": "2015-11-17T06:26:12Z",
    "author_association": "CONTRIBUTOR",
    "body": "As I looked a bit at these problems a long time ago, when I was working on the IPython Qt console, I have a hunch that this is due to the way we capture outputs of processes. It's probably not trivial to fix (sorry, :$). I suspect that using some Unix-specific stuff (ie not Python such as stream redirection to a named pipe) might help on the Unix side, and maybe some windows-specific stuff too (the equivalent in Windows, which I don't understand well). The good news that solving such a problem is certainly possible, as something like travis-CI captures output and redirects to web without any problem.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/157483518",
    "html_url": "https://github.com/jupyter/notebook/issues/700#issuecomment-157483518",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/700",
    "id": 157483518,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzQ4MzUxOA==",
    "user": {
      "login": "amueller",
      "id": 449558,
      "node_id": "MDQ6VXNlcjQ0OTU1OA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/449558?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/amueller",
      "html_url": "https://github.com/amueller",
      "followers_url": "https://api.github.com/users/amueller/followers",
      "following_url": "https://api.github.com/users/amueller/following{/other_user}",
      "gists_url": "https://api.github.com/users/amueller/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/amueller/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/amueller/subscriptions",
      "organizations_url": "https://api.github.com/users/amueller/orgs",
      "repos_url": "https://api.github.com/users/amueller/repos",
      "events_url": "https://api.github.com/users/amueller/events{/privacy}",
      "received_events_url": "https://api.github.com/users/amueller/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-17T19:40:11Z",
    "updated_at": "2015-11-17T19:40:11Z",
    "author_association": "NONE",
    "body": "hm... @minrk might have some insights?\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/157638646",
    "html_url": "https://github.com/jupyter/notebook/issues/700#issuecomment-157638646",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/700",
    "id": 157638646,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE1NzYzODY0Ng==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-11-18T08:01:42Z",
    "updated_at": "2015-11-18T08:01:42Z",
    "author_association": "MEMBER",
    "body": "There is some funkiness in how we capture output from forked processes that proves to be quite fragile. I will try to investigate what's going wrong in this case.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/165086099",
    "html_url": "https://github.com/jupyter/notebook/issues/700#issuecomment-165086099",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/700",
    "id": 165086099,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NTA4NjA5OQ==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-16T12:02:12Z",
    "updated_at": "2015-12-16T12:02:12Z",
    "author_association": "MEMBER",
    "body": "Once I finish it, this should be fixed by ipython/ipykernel#85\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/172985632",
    "html_url": "https://github.com/jupyter/notebook/issues/700#issuecomment-172985632",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/700",
    "id": 172985632,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3Mjk4NTYzMg==",
    "user": {
      "login": "GaelVaroquaux",
      "id": 208217,
      "node_id": "MDQ6VXNlcjIwODIxNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/208217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GaelVaroquaux",
      "html_url": "https://github.com/GaelVaroquaux",
      "followers_url": "https://api.github.com/users/GaelVaroquaux/followers",
      "following_url": "https://api.github.com/users/GaelVaroquaux/following{/other_user}",
      "gists_url": "https://api.github.com/users/GaelVaroquaux/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GaelVaroquaux/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GaelVaroquaux/subscriptions",
      "organizations_url": "https://api.github.com/users/GaelVaroquaux/orgs",
      "repos_url": "https://api.github.com/users/GaelVaroquaux/repos",
      "events_url": "https://api.github.com/users/GaelVaroquaux/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GaelVaroquaux/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-19T21:01:19Z",
    "updated_at": "2016-01-19T21:01:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Closed #700 via ipython/ipykernel#85.\n\nGood job! Thanks\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/172988092",
    "html_url": "https://github.com/jupyter/notebook/issues/700#issuecomment-172988092",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/700",
    "id": 172988092,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE3Mjk4ODA5Mg==",
    "user": {
      "login": "stefdoerr",
      "id": 7935362,
      "node_id": "MDQ6VXNlcjc5MzUzNjI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7935362?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/stefdoerr",
      "html_url": "https://github.com/stefdoerr",
      "followers_url": "https://api.github.com/users/stefdoerr/followers",
      "following_url": "https://api.github.com/users/stefdoerr/following{/other_user}",
      "gists_url": "https://api.github.com/users/stefdoerr/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/stefdoerr/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/stefdoerr/subscriptions",
      "organizations_url": "https://api.github.com/users/stefdoerr/orgs",
      "repos_url": "https://api.github.com/users/stefdoerr/repos",
      "events_url": "https://api.github.com/users/stefdoerr/events{/privacy}",
      "received_events_url": "https://api.github.com/users/stefdoerr/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-01-19T21:11:10Z",
    "updated_at": "2016-01-19T21:11:10Z",
    "author_association": "NONE",
    "body": "Awesome! Thanks guys!\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/397739469",
    "html_url": "https://github.com/jupyter/notebook/issues/700#issuecomment-397739469",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/700",
    "id": 397739469,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NzczOTQ2OQ==",
    "user": {
      "login": "neighthan",
      "id": 12573501,
      "node_id": "MDQ6VXNlcjEyNTczNTAx",
      "avatar_url": "https://avatars.githubusercontent.com/u/12573501?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/neighthan",
      "html_url": "https://github.com/neighthan",
      "followers_url": "https://api.github.com/users/neighthan/followers",
      "following_url": "https://api.github.com/users/neighthan/following{/other_user}",
      "gists_url": "https://api.github.com/users/neighthan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/neighthan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/neighthan/subscriptions",
      "organizations_url": "https://api.github.com/users/neighthan/orgs",
      "repos_url": "https://api.github.com/users/neighthan/repos",
      "events_url": "https://api.github.com/users/neighthan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/neighthan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-15T20:54:13Z",
    "updated_at": "2018-06-15T20:54:13Z",
    "author_association": "NONE",
    "body": "When I run @stefdoerr's example, it now correctly prints during computation. However, if I print within a function myself instead of just having the `joblib` progress-logging prints, this still doesn't seem to be supported. E.g.:\r\n\r\n```python\r\nfrom joblib import Parallel, delayed\r\n\r\ndef f(x):\r\n    print(f\"x = {x}\")\r\n    return x\r\n\r\nParallel(n_jobs=2)(delayed(f)(x) for x in range(5))\r\n```\r\n\r\ndoesn't print anything. However, if I set `n_jobs=1`, then it prints properly. Is it expected that this should be supported now as well or no?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/583612357",
    "html_url": "https://github.com/jupyter/notebook/issues/700#issuecomment-583612357",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/700",
    "id": 583612357,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MzYxMjM1Nw==",
    "user": {
      "login": "scottgigante",
      "id": 8499679,
      "node_id": "MDQ6VXNlcjg0OTk2Nzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8499679?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/scottgigante",
      "html_url": "https://github.com/scottgigante",
      "followers_url": "https://api.github.com/users/scottgigante/followers",
      "following_url": "https://api.github.com/users/scottgigante/following{/other_user}",
      "gists_url": "https://api.github.com/users/scottgigante/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/scottgigante/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/scottgigante/subscriptions",
      "organizations_url": "https://api.github.com/users/scottgigante/orgs",
      "repos_url": "https://api.github.com/users/scottgigante/repos",
      "events_url": "https://api.github.com/users/scottgigante/events{/privacy}",
      "received_events_url": "https://api.github.com/users/scottgigante/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-07T21:07:01Z",
    "updated_at": "2020-02-07T21:07:01Z",
    "author_association": "NONE",
    "body": "I'll echo this: printing to stdout and stderr from within forked processes is hidden from the Jupyter notebook output and prints instead to the notebook backend (which can be done manually by `os.write` -- I think Jupyter monkey patches `sys.stderr/out` but doesn't patch `os.write`.)\r\n\r\nNeither of the following print anything to the notebook output.\r\n```\r\nfrom joblib import Parallel, delayed\r\nimport sys\r\n\r\ndef f(x, stream):\r\n    stream = getattr(sys, stream)\r\n    print(f\"x = {x}\", file=stream)\r\n    stream.flush()\r\n    return x\r\n\r\nParallel(n_jobs=2)(delayed(f)(x, stream=\"stdout\") for x in range(5))\r\nParallel(n_jobs=2)(delayed(f)(x, stream=\"stderr\") for x in range(5))\r\n```\r\n\r\nbut both of these work\r\n\r\n```\r\nParallel(n_jobs=2, backend='multiprocessing')(delayed(f)(x, stream=\"stdout\") for x in range(5))\r\nParallel(n_jobs=2, backend='multiprocessing')(delayed(f)(x, stream=\"stderr\") for x in range(5))\r\n```",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/583623431",
    "html_url": "https://github.com/jupyter/notebook/issues/700#issuecomment-583623431",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/700",
    "id": 583623431,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MzYyMzQzMQ==",
    "user": {
      "login": "GaelVaroquaux",
      "id": 208217,
      "node_id": "MDQ6VXNlcjIwODIxNw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/208217?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/GaelVaroquaux",
      "html_url": "https://github.com/GaelVaroquaux",
      "followers_url": "https://api.github.com/users/GaelVaroquaux/followers",
      "following_url": "https://api.github.com/users/GaelVaroquaux/following{/other_user}",
      "gists_url": "https://api.github.com/users/GaelVaroquaux/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/GaelVaroquaux/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/GaelVaroquaux/subscriptions",
      "organizations_url": "https://api.github.com/users/GaelVaroquaux/orgs",
      "repos_url": "https://api.github.com/users/GaelVaroquaux/repos",
      "events_url": "https://api.github.com/users/GaelVaroquaux/events{/privacy}",
      "received_events_url": "https://api.github.com/users/GaelVaroquaux/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-07T21:32:51Z",
    "updated_at": "2020-02-07T21:32:51Z",
    "author_association": "CONTRIBUTOR",
    "body": "Cc @ogrisel @tommoral : is this due to loky?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/583722159",
    "html_url": "https://github.com/jupyter/notebook/issues/700#issuecomment-583722159",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/700",
    "id": 583722159,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4MzcyMjE1OQ==",
    "user": {
      "login": "tomMoral",
      "id": 3321081,
      "node_id": "MDQ6VXNlcjMzMjEwODE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3321081?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tomMoral",
      "html_url": "https://github.com/tomMoral",
      "followers_url": "https://api.github.com/users/tomMoral/followers",
      "following_url": "https://api.github.com/users/tomMoral/following{/other_user}",
      "gists_url": "https://api.github.com/users/tomMoral/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tomMoral/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tomMoral/subscriptions",
      "organizations_url": "https://api.github.com/users/tomMoral/orgs",
      "repos_url": "https://api.github.com/users/tomMoral/repos",
      "events_url": "https://api.github.com/users/tomMoral/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tomMoral/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-08T10:02:39Z",
    "updated_at": "2020-02-08T10:02:39Z",
    "author_association": "NONE",
    "body": "It seems to me that this work with `multiprocessing` is only because it uses `fork` to start the processes. In this case, the monkey-patched stdout/stderr are conserved, and you get the prints where you expect them.\r\n\r\nIf the start method for `Process` is set to `forkserver` or `spawn`, I don't think this will work and it should be similar to `loky`\r\n\r\nBut this is very hard to come up with a good solution to propagate monkey patching in the child process. In this is a similar problem with warning filters and globals propagation. In case, a potential solution could be to modify `sys.executable` to point toward a jupyter kernel designed for child processes, with the correct monkey patch?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/587074098",
    "html_url": "https://github.com/jupyter/notebook/issues/700#issuecomment-587074098",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/700",
    "id": 587074098,
    "node_id": "MDEyOklzc3VlQ29tbWVudDU4NzA3NDA5OA==",
    "user": {
      "login": "zfortier",
      "id": 29285866,
      "node_id": "MDQ6VXNlcjI5Mjg1ODY2",
      "avatar_url": "https://avatars.githubusercontent.com/u/29285866?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/zfortier",
      "html_url": "https://github.com/zfortier",
      "followers_url": "https://api.github.com/users/zfortier/followers",
      "following_url": "https://api.github.com/users/zfortier/following{/other_user}",
      "gists_url": "https://api.github.com/users/zfortier/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/zfortier/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/zfortier/subscriptions",
      "organizations_url": "https://api.github.com/users/zfortier/orgs",
      "repos_url": "https://api.github.com/users/zfortier/repos",
      "events_url": "https://api.github.com/users/zfortier/events{/privacy}",
      "received_events_url": "https://api.github.com/users/zfortier/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-02-17T16:32:59Z",
    "updated_at": "2020-02-17T16:42:27Z",
    "author_association": "NONE",
    "body": "I believe this is the same issue discussed here: https://stackoverflow.com/questions/55955330/printed-output-not-displayed-when-using-joblib-in-jupyter-notebook\r\nI think my response is accurate, but I don't want to misrepresent anything. Thanks everyone!\r\n\r\nEdit:\r\nto further support what @tomMoral said, using `backend=threading` produces the expected output too.\r\n\r\nEdit2:\r\nrelated: https://github.com/ipython/ipykernel/issues/402",
    "performed_via_github_app": null
  }
]
