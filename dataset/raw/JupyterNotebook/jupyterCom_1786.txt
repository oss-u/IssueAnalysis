[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/249692116",
    "html_url": "https://github.com/jupyter/notebook/issues/1786#issuecomment-249692116",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1786",
    "id": 249692116,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTY5MjExNg==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-26T20:45:12Z",
    "updated_at": "2016-09-26T20:45:12Z",
    "author_association": "MEMBER",
    "body": "I think that's a reasonable thing to do, although at present I think the kernel IDs it uses are only stored in memory. The main reason it doesn't, as far as I know, is that we haven't come up with any UI we like for connecting a notebook to an existing kernel.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/249836912",
    "html_url": "https://github.com/jupyter/notebook/issues/1786#issuecomment-249836912",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1786",
    "id": 249836912,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTgzNjkxMg==",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-27T11:18:50Z",
    "updated_at": "2016-09-27T11:18:50Z",
    "author_association": "MEMBER",
    "body": "How about instead of relying on finding a connection file, we make the /api/kernels POST request (which normally starts a kernel from a kernelspec name) take an optional kernel connection file contents as data? Or we could have a new endpoint that connects to an existing kernel, something like `/api/kernels/{kernel_id}/connect` (where we have to provide a made-up id). Or perhaps we reserve the name 'connect' in the kernel_id spot: `/api/kernels/connect`.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/249852165",
    "html_url": "https://github.com/jupyter/notebook/issues/1786#issuecomment-249852165",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1786",
    "id": 249852165,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTg1MjE2NQ==",
    "user": {
      "login": "danielballan",
      "id": 2279598,
      "node_id": "MDQ6VXNlcjIyNzk1OTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2279598?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danielballan",
      "html_url": "https://github.com/danielballan",
      "followers_url": "https://api.github.com/users/danielballan/followers",
      "following_url": "https://api.github.com/users/danielballan/following{/other_user}",
      "gists_url": "https://api.github.com/users/danielballan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danielballan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danielballan/subscriptions",
      "organizations_url": "https://api.github.com/users/danielballan/orgs",
      "repos_url": "https://api.github.com/users/danielballan/repos",
      "events_url": "https://api.github.com/users/danielballan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danielballan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-27T12:37:37Z",
    "updated_at": "2016-09-27T12:37:37Z",
    "author_association": "NONE",
    "body": "Yes, that does sound better. Going through a connection file wouldn't add any value. Does anyone have a clear preference for one of those URL schemes?\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/249918018",
    "html_url": "https://github.com/jupyter/notebook/issues/1786#issuecomment-249918018",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1786",
    "id": 249918018,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTkxODAxOA==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-27T16:24:11Z",
    "updated_at": "2016-09-27T16:44:40Z",
    "author_association": "MEMBER",
    "body": "One disadvantage is that, until the kernel nanny arrives, this will mean that interrupt, restart actions will be unavailable.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/249941376",
    "html_url": "https://github.com/jupyter/notebook/issues/1786#issuecomment-249941376",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1786",
    "id": 249941376,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI0OTk0MTM3Ng==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-27T17:44:14Z",
    "updated_at": "2016-09-27T17:44:14Z",
    "author_association": "MEMBER",
    "body": "> If it doesn't know about that session, it errors. I am wondering if, before erroring, it could check the on-disk cache of running kernels (e.g., in ~/Library/Jupyter/runtime). If it find the kernel_id in question, it would start a new session connected to that existing kernel. To say it another way, I see that the cache of kernels known to the manager includes only those initiated by that particular server process, not any kernels started by some other processes.\n\nMany people inadvertently start many servers as they think \"Oh jupyter-notebook just open the browser\" falling back on reading files will create weird conditions when multiple server connect to same kernel, same file hence why we don't do it. \n\nIf we go this route I would _suggest_ that the server write a file saying I'm this PID , on this host I \"own\" the file. And once another server do the file lookup, it check whether the said process is still running.\n\n> Would that be a crazy thing to do? The goal is to enable something like ipython console --existing <kernel_id> in the notebook server.\n\nWe had a quick discussion with Fernando some time back. We think that `jupyter console --existing` should bring a UI (in general, if is tty) that allow user to select console. Regardless of whether it's ran from the server. \n\n> For example, suppose Alice and Bob are running separate notebook servers on the same machine. Alice wants to allow Bob to observe the inputs and outputs in a console or notebook that she is working on. She sends Bob the connection file info (perhaps via a hub extension). Bob opens a console and creates a new session connecting to that running kernel. Now Alice and Bob each have a session connected to the same kernel. Since the JupyterLab console now mirrors iopub messages from any session, not just the session that initiated execution, Bob can see Alice's inputs and outputs. He can also execute code. This is one simple mode of real-time collaboration.\n\nI'm sure almost no-one will understand the security risk of that. _If_ bob connect from another session if should likely get a connexion though some other kind of connexion (Fake kernel connexion infos ?) that make it clear he is not Alice.  In general I think a better (and more complicated) way of having collaboration would be for Alice and bob server to make a handshake, and for Bob server to see remote kernels \"exposed\" by Alice server. \n\nAlso Alice and Bob likely don't have the same signature key for messages, so should sharing kernel.json files requires Alice to give bob access to sensitive info ?\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/250276524",
    "html_url": "https://github.com/jupyter/notebook/issues/1786#issuecomment-250276524",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1786",
    "id": 250276524,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDI3NjUyNA==",
    "user": {
      "login": "danielballan",
      "id": 2279598,
      "node_id": "MDQ6VXNlcjIyNzk1OTg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2279598?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/danielballan",
      "html_url": "https://github.com/danielballan",
      "followers_url": "https://api.github.com/users/danielballan/followers",
      "following_url": "https://api.github.com/users/danielballan/following{/other_user}",
      "gists_url": "https://api.github.com/users/danielballan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/danielballan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/danielballan/subscriptions",
      "organizations_url": "https://api.github.com/users/danielballan/orgs",
      "repos_url": "https://api.github.com/users/danielballan/repos",
      "events_url": "https://api.github.com/users/danielballan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/danielballan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-28T19:37:37Z",
    "updated_at": "2016-09-28T19:37:37Z",
    "author_association": "NONE",
    "body": "Thanks for explaining, @Carreau. I see that a handshake between servers makes more sense. Is this part of the planned work on addressing collaboration for JupyterHub v0.8, @minrk? I'm interested in helping / offering BNL users as guinea pigs.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/250281908",
    "html_url": "https://github.com/jupyter/notebook/issues/1786#issuecomment-250281908",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1786",
    "id": 250281908,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI1MDI4MTkwOA==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-09-28T19:58:45Z",
    "updated_at": "2016-09-28T19:58:45Z",
    "author_association": "MEMBER",
    "body": "> Also Alice and Bob likely don't have the same signature key for messages, so should sharing kernel.json files requires Alice to give bob access to sensitive info ?\n\nEach kernel has a key (in the connection info), so if you can talk to a kernel (send _or_ receive), you have the key. There is currently no mechanism to receive messages from a kernel without being able to also execute on that kernel.\n",
    "performed_via_github_app": null
  }
]
