[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/732477679",
    "html_url": "https://github.com/jupyter/notebook/issues/5292#issuecomment-732477679",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5292",
    "id": 732477679,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczMjQ3NzY3OQ==",
    "user": {
      "login": "gdbassett",
      "id": 1392552,
      "node_id": "MDQ6VXNlcjEzOTI1NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1392552?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gdbassett",
      "html_url": "https://github.com/gdbassett",
      "followers_url": "https://api.github.com/users/gdbassett/followers",
      "following_url": "https://api.github.com/users/gdbassett/following{/other_user}",
      "gists_url": "https://api.github.com/users/gdbassett/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gdbassett/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gdbassett/subscriptions",
      "organizations_url": "https://api.github.com/users/gdbassett/orgs",
      "repos_url": "https://api.github.com/users/gdbassett/repos",
      "events_url": "https://api.github.com/users/gdbassett/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gdbassett/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-11-23T23:06:13Z",
    "updated_at": "2020-11-23T23:06:13Z",
    "author_association": "NONE",
    "body": "I've got the same error opening notebooks from last year.  Did something change about the notebook spec preventing the jupyter server from opening it correctly?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/737451664",
    "html_url": "https://github.com/jupyter/notebook/issues/5292#issuecomment-737451664",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5292",
    "id": 737451664,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNzQ1MTY2NA==",
    "user": {
      "login": "gdbassett",
      "id": 1392552,
      "node_id": "MDQ6VXNlcjEzOTI1NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1392552?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gdbassett",
      "html_url": "https://github.com/gdbassett",
      "followers_url": "https://api.github.com/users/gdbassett/followers",
      "following_url": "https://api.github.com/users/gdbassett/following{/other_user}",
      "gists_url": "https://api.github.com/users/gdbassett/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gdbassett/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gdbassett/subscriptions",
      "organizations_url": "https://api.github.com/users/gdbassett/orgs",
      "repos_url": "https://api.github.com/users/gdbassett/repos",
      "events_url": "https://api.github.com/users/gdbassett/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gdbassett/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-02T19:39:47Z",
    "updated_at": "2020-12-02T19:43:34Z",
    "author_association": "NONE",
    "body": "I suspect this issue is with the CodeMirror nbextension. The problem does not manifest in lab.  In fact, once you open/save it in lab, it fixes it in notebook.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/737552595",
    "html_url": "https://github.com/jupyter/notebook/issues/5292#issuecomment-737552595",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/5292",
    "id": 737552595,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczNzU1MjU5NQ==",
    "user": {
      "login": "gdbassett",
      "id": 1392552,
      "node_id": "MDQ6VXNlcjEzOTI1NTI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1392552?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gdbassett",
      "html_url": "https://github.com/gdbassett",
      "followers_url": "https://api.github.com/users/gdbassett/followers",
      "following_url": "https://api.github.com/users/gdbassett/following{/other_user}",
      "gists_url": "https://api.github.com/users/gdbassett/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gdbassett/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gdbassett/subscriptions",
      "organizations_url": "https://api.github.com/users/gdbassett/orgs",
      "repos_url": "https://api.github.com/users/gdbassett/repos",
      "events_url": "https://api.github.com/users/gdbassett/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gdbassett/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-02T23:14:05Z",
    "updated_at": "2020-12-03T13:56:19Z",
    "author_association": "NONE",
    "body": "I ended up using the following to fix my notebooks:\r\n(aws s3 parts stitched together from stackoverflow code)\r\n```\r\nimport json\r\nimport boto3\r\n\r\n# setup\r\nbucket = <mybucket>\r\ns3_client = boto3.client('s3')\r\npaginator = s3_client.get_paginator('list_objects_v2')\r\ns3 = boto3.resource(\"s3\")\r\n\r\n# function that changes lists to strings\r\ndef fix_json(j):\r\n    for i in range(len(j['cells'])):\r\n        if 'text' in j['cells'][i] and type(j['cells'][i]['text']) == list:\r\n            j['cells'][i]['text'] = \"\\n\".join([l.strip() for l in j['cells'][i]['text']])\r\n        elif 'source' in j['cells'][i] and type(j['cells'][i]['source']) == list:\r\n            j['cells'][i]['source'] = \"\\n\".join([l.strip() for l in j['cells'][i]['source']])\r\n        \r\n        if 'outputs' in j['cells'][i]:\r\n            for k in range(len(j['cells'][i]['outputs'])):\r\n                if 'text' in j['cells'][i]['outputs'][k] and type(j['cells'][i]['outputs'][k]['text']) == list:\r\n                    j['cells'][i]['outputs'][k]['text'] = \"\\n\".join([l.strip() for l in j['cells'][i]['outputs'][k]['text']])\r\n    return j\r\n\r\n\r\n# Get all notebooks\r\nresponse_iterator = paginator.paginate(Bucket=bucket) #, Prefix = prefix)\r\nfile_names = []\r\nfor response in response_iterator:\r\n    for object_data in response['Contents']:\r\n        key = object_data['Key']\r\n        if key.endswith('.ipynb') and not key.endswith(\"checkpoint.ipynb\"): # skips checkpoint notebooks\r\n            file_names.append(key)\r\n\r\n# backup all notebooks. optional but probably a good idea.\r\nfor filename in file_names:\r\n    s3.Object(bucket, filename + \".bak\").copy_from(CopySource=bucket + \"/\" + filename)\r\n\r\n# download the notebook, load the json, fix it, and save it back out\r\n# This failed on a few notebooks starting with \"._\"\r\nfailures = []\r\nresponses = []\r\nfor file in file_names:\r\n    try:\r\n        j = json.load(s3.Object(bucket, key=file).get()[\"Body\"])\r\n        j = fix_json(j)\r\n        responses.append(s3.Object(bucket, key=file).put(Body=json.dumps(j)))\r\n    except:\r\n        failures.append(file)\r\n```\r\nHopefully this helps anyone else running across it.  It doesn't fix the problem in jupyter but it helps (and it's far better than opening a notebook and having the empty, failed, load get saved over your previous work.)",
    "performed_via_github_app": null
  }
]
