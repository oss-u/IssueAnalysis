[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/93874529",
    "html_url": "https://github.com/jupyter/notebook/pull/23#issuecomment-93874529",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/23",
    "id": 93874529,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkzODc0NTI5",
    "user": {
      "login": "ssanderson",
      "id": 1588357,
      "node_id": "MDQ6VXNlcjE1ODgzNTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1588357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssanderson",
      "html_url": "https://github.com/ssanderson",
      "followers_url": "https://api.github.com/users/ssanderson/followers",
      "following_url": "https://api.github.com/users/ssanderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssanderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssanderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssanderson/subscriptions",
      "organizations_url": "https://api.github.com/users/ssanderson/orgs",
      "repos_url": "https://api.github.com/users/ssanderson/repos",
      "events_url": "https://api.github.com/users/ssanderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssanderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-17T01:33:14Z",
    "updated_at": "2015-04-17T01:33:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "Sidenote: \n\nI'd **wholeheartedly** recommend running something like jshint in travis with the following config.  I think these are about as undogmatic as linter options come:\n\n```\n{\n    \"eqeqeq\":true,\n    \"browser\":true,\n    \"devel\":true,\n    \"undef\":true,\n    \"unused\":true,\n    \"latedef\":true,\n    \"strict\":true,\n    \"predef\": [\"define\", \"require\"]\n}\n```\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/93882231",
    "html_url": "https://github.com/jupyter/notebook/pull/23#issuecomment-93882231",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/23",
    "id": 93882231,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkzODgyMjMx",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-17T02:48:23Z",
    "updated_at": "2015-04-17T02:48:23Z",
    "author_association": "MEMBER",
    "body": "Yup, I use jshint and it's great. Analogous to pyflakes, the similarly style-free Python linter.\n\nI don't like the idea of linting on CI, though.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/93885416",
    "html_url": "https://github.com/jupyter/notebook/pull/23#issuecomment-93885416",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/23",
    "id": 93885416,
    "node_id": "MDEyOklzc3VlQ29tbWVudDkzODg1NDE2",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-17T03:25:42Z",
    "updated_at": "2015-04-17T03:25:42Z",
    "author_association": "MEMBER",
    "body": "BTW, fixing things like triple-equals is totally okay. Given our relative lack of expertise in javascript, it's quite appropriate to be more strict in these things. The function in a for-loop is definitely an issue we've encountered a few times. Those particular functions didn't have any closures, so they happened to be fine, but it's a good thing to avoid, since javascript closures don't behave in sensible ways.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/94027361",
    "html_url": "https://github.com/jupyter/notebook/pull/23#issuecomment-94027361",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/23",
    "id": 94027361,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk0MDI3MzYx",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-17T17:00:02Z",
    "updated_at": "2015-04-17T17:00:02Z",
    "author_association": "MEMBER",
    "body": "I think our policy about cleanup PRs is more about style cleanups - if there's something that's functionally wrong or problematic in our code, I don't object to fixing it. That's much more likely in the JS code because we're less experienced in writing that.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/94028064",
    "html_url": "https://github.com/jupyter/notebook/pull/23#issuecomment-94028064",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/23",
    "id": 94028064,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk0MDI4MDY0",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-17T17:04:07Z",
    "updated_at": "2015-04-17T17:04:07Z",
    "author_association": "MEMBER",
    "body": "I'm fine with this too. At some point anyway if we use typescript we will have to fix theses things. \n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/94034152",
    "html_url": "https://github.com/jupyter/notebook/pull/23#issuecomment-94034152",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/23",
    "id": 94034152,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk0MDM0MTUy",
    "user": {
      "login": "ssanderson",
      "id": 1588357,
      "node_id": "MDQ6VXNlcjE1ODgzNTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1588357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssanderson",
      "html_url": "https://github.com/ssanderson",
      "followers_url": "https://api.github.com/users/ssanderson/followers",
      "following_url": "https://api.github.com/users/ssanderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssanderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssanderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssanderson/subscriptions",
      "organizations_url": "https://api.github.com/users/ssanderson/orgs",
      "repos_url": "https://api.github.com/users/ssanderson/repos",
      "events_url": "https://api.github.com/users/ssanderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssanderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-17T17:33:45Z",
    "updated_at": "2015-04-17T17:33:45Z",
    "author_association": "CONTRIBUTOR",
    "body": "> I don't like the idea of linting on CI, though.\n\nI think this is defensible for PEP8-esque style-linting (I personally still use PEP8 for everything I write, but I understand that it imposes significant friction for new users for a possibly dubious gain).\n\nFor stuff like javascript `===`, though, I can't imagine a circumstance where I would intentionally merge a change that had `==` unless the author explained explicitly why they wanted the type-unsafe equality check.  This means that, as a reviewer of javascript changes, I'm always manually doing the same checks that jshint is doing.  This detracts from my ability to actually review the content of a change, because my attention is now divided between code comprehension and checking for javascript gotchas, and invariably I'm going to miss a `==` that a programmatic solution will never miss.\n\nBasically, I think linting in CI should be used to perform checks that you would expect any competent reviewer to perform.\n\n/endrant\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/94034628",
    "html_url": "https://github.com/jupyter/notebook/pull/23#issuecomment-94034628",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/23",
    "id": 94034628,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk0MDM0NjI4",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-17T17:36:26Z",
    "updated_at": "2015-04-17T17:36:26Z",
    "author_association": "MEMBER",
    "body": "The problem is as soon as you **want** to have an unused variable, or an `==` instead of `===` your test fails, for all PR. \n\nIf could check only for new code, that would be better.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/94036533",
    "html_url": "https://github.com/jupyter/notebook/pull/23#issuecomment-94036533",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/23",
    "id": 94036533,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk0MDM2NTMz",
    "user": {
      "login": "ssanderson",
      "id": 1588357,
      "node_id": "MDQ6VXNlcjE1ODgzNTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1588357?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ssanderson",
      "html_url": "https://github.com/ssanderson",
      "followers_url": "https://api.github.com/users/ssanderson/followers",
      "following_url": "https://api.github.com/users/ssanderson/following{/other_user}",
      "gists_url": "https://api.github.com/users/ssanderson/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ssanderson/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ssanderson/subscriptions",
      "organizations_url": "https://api.github.com/users/ssanderson/orgs",
      "repos_url": "https://api.github.com/users/ssanderson/repos",
      "events_url": "https://api.github.com/users/ssanderson/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ssanderson/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-17T17:44:47Z",
    "updated_at": "2015-04-17T20:19:59Z",
    "author_association": "CONTRIBUTOR",
    "body": "> The problem is as soon as you want to have an unused variable, or an == instead of === your test fails, for all PR.\n\nEvery reasonable linting tool has a way of saying \"disable checks for this line or this region of code\".  This forces the programmer to document that they actually want `\"2 == '2'\"` in this specific chunk of code.\n\nIn the specific case of jshint, there are lots of ways to do this:\n\n```\n// Code here will be linted with JSHint.\n/* jshint ignore:start */\n// Code here will be ignored by JSHint.\n/* jshint ignore:end */\n```\n\nor \n\n```\nignoreThis(); // jshint ignore:line\n```\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/94102160",
    "html_url": "https://github.com/jupyter/notebook/pull/23#issuecomment-94102160",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/23",
    "id": 94102160,
    "node_id": "MDEyOklzc3VlQ29tbWVudDk0MTAyMTYw",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-04-17T23:59:35Z",
    "updated_at": "2015-04-17T23:59:35Z",
    "author_association": "MEMBER",
    "body": "OK, regardless of jshint on travis, moving forward with this. \n",
    "performed_via_github_app": null
  }
]
