[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/166708925",
    "html_url": "https://github.com/jupyter/notebook/issues/893#issuecomment-166708925",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/893",
    "id": 166708925,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NjcwODkyNQ==",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-22T19:26:02Z",
    "updated_at": "2015-12-22T19:26:02Z",
    "author_association": "MEMBER",
    "body": "The recent change did not change the configurable status of the config manager...\nThe `config_dir` was hardcoded at the notebookapp level and now it resides in the ConfigManager... \nIf you remove this line https://github.com/jupyter/notebook/blob/master/notebook/services/config/manager.py#L15, you make the ConfigManager not configurable but still you allow people to subclass the ConfigManager to suit it their need... that'e enough for you? I think so... I can submit a PR with that change...\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/166709883",
    "html_url": "https://github.com/jupyter/notebook/issues/893#issuecomment-166709883",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/893",
    "id": 166709883,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NjcwOTg4Mw==",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-22T19:30:16Z",
    "updated_at": "2015-12-22T19:30:16Z",
    "author_association": "CONTRIBUTOR",
    "body": "Can you look at my PR - the entire API of that class has changed in my PR.\nDon't have time to look right now myself to understand this...\n\nOn Tue, Dec 22, 2015 at 11:26 AM, Damián Avila notifications@github.com\nwrote:\n\n> The recent change did not change the configurable status of the config\n> manager...\n> The config_dir was hardcoded at the notebookapp level and now it resides\n> in the ConfigManager...\n> If you remove this line\n> https://github.com/jupyter/notebook/blob/master/notebook/services/config/manager.py#L15,\n> you make the ConfigManager not configurable but still you allow people to\n> subclass the ConfigManager to suit it their need... that'e enough for you?\n> I think so... I can submit a PR with that change...\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/jupyter/notebook/issues/893#issuecomment-166708925.\n\n## \n\nBrian E. Granger\nAssociate Professor of Physics and Data Science\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/166711615",
    "html_url": "https://github.com/jupyter/notebook/issues/893#issuecomment-166711615",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/893",
    "id": 166711615,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NjcxMTYxNQ==",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-22T19:37:43Z",
    "updated_at": "2015-12-22T19:37:43Z",
    "author_association": "MEMBER",
    "body": "> Can you look at my PR - the entire API of that class has changed in my PR.\n\nI will take a look in the next few hours...\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/166724419",
    "html_url": "https://github.com/jupyter/notebook/issues/893#issuecomment-166724419",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/893",
    "id": 166724419,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NjcyNDQxOQ==",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-22T20:39:19Z",
    "updated_at": "2015-12-22T20:39:19Z",
    "author_association": "MEMBER",
    "body": "[Here](https://github.com/jupyter/notebook/pull/879/files#r48294796) you are removing the `config_dir` configurable and removing the \"private\" method to conform a new API... so if we just remove the `config_dir` configurable from the ConfigManager, I mean removing just the line 15: https://github.com/jupyter/notebook/blob/master/notebook/services/config/manager.py#L15, then you will be backward compatible with 4.1 because you will be only removing the \"private\" method... So things keep in the same way from the outside viewer... NOT a `--ConfigManager.config_dir` option available to use and the native ConfigManager pointing to the user config_dir... or am I missing something else?\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/166756098",
    "html_url": "https://github.com/jupyter/notebook/issues/893#issuecomment-166756098",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/893",
    "id": 166756098,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2Njc1NjA5OA==",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-22T22:53:19Z",
    "updated_at": "2015-12-22T22:53:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "IIRC, I changed the base class of the manager though. I am no longer using\nthe same class as the base class...also, when I do instantiate the base\nclass I don't pass it config. If you are relying on configuring the base\nclass, that will stop working in the future.\n\nOn Tue, Dec 22, 2015 at 12:39 PM, Damián Avila notifications@github.com\nwrote:\n\n> Here https://github.com/jupyter/notebook/pull/879/files#r48294796 you\n> are removing the config_dir configurable and removing the \"private\"\n> method to conform a new API... so if we just remove the config_dir\n> configurable from the ConfigManager, I mean removing just the line 15:\n> https://github.com/jupyter/notebook/blob/master/notebook/services/config/manager.py#L15,\n> then you will be backward compatible with 4.1 because you will be only\n> removing the \"private\" method... So things keep in the same way from the\n> outside viewer... NOT a --ConfigManager.config_dir option available to\n> use and the native ConfigManager pointing to the user config_dir... or am I\n> missing something else?\n> \n> —\n> Reply to this email directly or view it on GitHub\n> https://github.com/jupyter/notebook/issues/893#issuecomment-166724419.\n\n## \n\nBrian E. Granger\nAssociate Professor of Physics and Data Science\nCal Poly State University, San Luis Obispo\n@ellisonbg on Twitter and GitHub\nbgranger@calpoly.edu and ellisonbg@gmail.com\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/166847532",
    "html_url": "https://github.com/jupyter/notebook/issues/893#issuecomment-166847532",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/893",
    "id": 166847532,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2Njg0NzUzMg==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-23T09:42:03Z",
    "updated_at": "2015-12-23T09:42:30Z",
    "author_association": "MEMBER",
    "body": "For information you are referring to #882 I guess. (and #879)\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/166851793",
    "html_url": "https://github.com/jupyter/notebook/issues/893#issuecomment-166851793",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/893",
    "id": 166851793,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2Njg1MTc5Mw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-23T09:58:43Z",
    "updated_at": "2015-12-23T09:58:43Z",
    "author_association": "MEMBER",
    "body": "I might be missing something, but I tend to side with @damianavila on this one. \nWorse case, you can do `BaseJSONConfigManager(Config({\"config_dir\":p}))`, as anyway `BaseJSONConfigManager` cannot take a `config_dir` kwarg in traitlets 4.0, and we will likely **not** require traitlets 4.1 for notebook 4.2.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/167091466",
    "html_url": "https://github.com/jupyter/notebook/issues/893#issuecomment-167091466",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/893",
    "id": 167091466,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NzA5MTQ2Ng==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-24T10:50:14Z",
    "updated_at": "2015-12-24T10:50:20Z",
    "author_association": "MEMBER",
    "body": "@damianavila \nWould passing `config_dir=os.path.join(self.config_dir, 'nbconfig'),` again, but ignoring it in the base config class suit both of you ?\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/167099432",
    "html_url": "https://github.com/jupyter/notebook/issues/893#issuecomment-167099432",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/893",
    "id": 167099432,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NzA5OTQzMg==",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-24T11:57:31Z",
    "updated_at": "2015-12-24T11:57:31Z",
    "author_association": "MEMBER",
    "body": "@Carreau, passing `config_dir=os.path.join(self.config_dir, 'nbconfig')` where? At the notebookapp level? That's not good... if we hardcode the `config_dir` again we can no longer use a custom ConfigManager...\n\nOr are you proposing to remove `_config_dir_default` and make the  `config_dir=os.path.join(self.config_dir, 'nbconfig')` there, inside the ConfigManager class?\n\n``` diff\n$ git diff\ndiff --git a/notebook/services/config/manager.py b/notebook/services/config/manager.py\nindex 2399f86..7ccd623 100644\n--- a/notebook/services/config/manager.py\n+++ b/notebook/services/config/manager.py\n@@ -7,11 +7,9 @@ import os.path\n\n from traitlets.config.manager import BaseJSONConfigManager\n from jupyter_core.paths import jupyter_config_dir\n-from traitlets import Unicode\n\n class ConfigManager(BaseJSONConfigManager):\n     \"\"\"Config Manager used for storing notebook frontend config\"\"\"\n\n-    config_dir = Unicode(config=True)\n-    def _config_dir_default(self):\n-        return os.path.join(jupyter_config_dir(), 'nbconfig')\n+    config_dir = os.path.join(jupyter_config_dir(), 'nbconfig')\n```\n\nIf that's the case, we can probably live with it :wink:\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/167145785",
    "html_url": "https://github.com/jupyter/notebook/issues/893#issuecomment-167145785",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/893",
    "id": 167145785,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NzE0NTc4NQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-24T18:21:00Z",
    "updated_at": "2015-12-24T18:21:00Z",
    "author_association": "MEMBER",
    "body": "Then I think I'm confused of what Brian ask to revert, and what he is asking to re-add for 4.1.\n\nI'm wondering what would be a good compromise for 4.1 that would allow Brian to do his work without being impaired and not risking API breakage.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/167151777",
    "html_url": "https://github.com/jupyter/notebook/issues/893#issuecomment-167151777",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/893",
    "id": 167151777,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NzE1MTc3Nw==",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-24T19:31:14Z",
    "updated_at": "2015-12-24T21:08:44Z",
    "author_association": "MEMBER",
    "body": "> Then I think I'm confused of what Brian ask to revert, and what he is asking to re-add for 4.1.\n\nI think I am in the same position, I don't get where is the issue... despite the fact that before my PR the `ConfigManager.config_dir` did not work and now it is working... so, to go back to a \"similar\" situation than before, but without passing the `config_dir` at the notebook level, we just need to make `config_dir` at the `ConfigManager` not a configurable and you can do that with the diff I posted above, I think...\n\n> I'm wondering what would be a good compromise for 4.1 that would allow Brian to do his work without being impaired and not risking API breakage.\n\nNot sure if I am completely understanding Brian, but I guess the diff posted above is a good compromise IF I understood him well...\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/167156709",
    "html_url": "https://github.com/jupyter/notebook/issues/893#issuecomment-167156709",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/893",
    "id": 167156709,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NzE1NjcwOQ==",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-24T20:34:47Z",
    "updated_at": "2015-12-24T20:34:47Z",
    "author_association": "CONTRIBUTOR",
    "body": "Let me have a look...\n\nSent from my iPhone\n\n> On Dec 24, 2015, at 11:31 AM, Damián Avila notifications@github.com wrote:\n> \n> Then I think I'm confused of what Brian ask to revert, and what he is asking to re-add for 4.1.\n> \n> I think I am in the same position, I don't get where is the issue... despite the fact that before my PR the ConfigManager.config_dir did not work and now it is working... so, to go back to a \"similar\" situation than before, but without passing the config_dir at the notebook level, we just need to make config_dir at the ConfigManager not a configurable and you can do that with the diff I posted above, I think...\n> \n> I'm wondering what would be a good compromise for 4.1 that would allow Brian to do his work without being impaired and not risking API breakage.\n> \n> Not sure washout completely understanding Brian, but I guess the diff posted above is a good compromise IF I understood him well...\n> \n> —\n> Reply to this email directly or view it on GitHub.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/167723987",
    "html_url": "https://github.com/jupyter/notebook/issues/893#issuecomment-167723987",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/893",
    "id": 167723987,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2NzcyMzk4Nw==",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-29T06:03:38Z",
    "updated_at": "2015-12-29T06:03:38Z",
    "author_association": "CONTRIBUTOR",
    "body": "OK, here is a summary of the past and current state:\n\nIn 4.0:\n- `NotebookApp.config_manager_class` is a configurable that the notebook app uses to instantiate `self.config_manager`.\n- This instances is used in the config handler (it gets passed to the tornado settings and ends up as an attribute on the handler) to set/get config from the frontend. But the `config_dir` attribute is not used in that API.\n- In 4.0, we hard-code the `config_dir` attribute of the config manager when the `NotebookApp` instantiates it. Because of this, @damianavila can swap out the configurable `config_manager_class`, but can't set which config dir is used.\n\nIn 4.1 master:\n- `NotebookApp.config_manager_class` is still used to instantiate the class that is used in the config handler.\n- But we no longer hard-code the `config_dir` attribute at that location in the `NotebookApp`.\n- Now the default comes from the `ConfigManager` class itself, which has a `_config_dir_default` method that has been there all along, but wasn't being used because we were passing it in.\n\nMy proposal for 4.2:\n- I pull a sleight of hand to load config from multiple directories in a backwards compatible manner.\n- My `ConfigManager` class has the exactly same API that is used by the handlers.\n- **But**, it doesn't have a `config_dir` attribute at all because it ends up loading from multiple directories.\n\nMy conclusion:\n- If we consider `config_dir` to be part of the public API in 4.0, then my entire approach falls apart (it is backwards incompatible).\n- But because of the bug that was in 4.0, it was mostly impossible to pass in a custom config manager that uses a different `config_dir`.\n- Because of that bug, I am not sure we should consider any of this as being public API in 4.0.\n- **But** the bug fix of @damianavila does make it all public (in current master).\n- If someone uses a custom `ConfigManager` that subclasses the one from 4.1, my 4.2 approach will likely break their code.\n\nSummary: a bug in 4.0 essentially hides an API from users/devs in a way that allows me to change it without breaking backwards compatibility. The bug fix in 4.1 will make my 4.2 proposal backwards incompatible.\n\nBut, I don't think anyone is using any of this stuff other than @damianavila et al. So if he is fine moving forward with the current state of 4.1 _and_ is fine with my proposal for 4.2 that will break his 4.1 stuff, then I am OK.\n\nMy main concern here is that I don't want us to be prevented from improving the nbextension situation for users in 4.2, just because of an obscure, unused API.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/167767316",
    "html_url": "https://github.com/jupyter/notebook/issues/893#issuecomment-167767316",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/893",
    "id": 167767316,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2Nzc2NzMxNg==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-29T11:13:20Z",
    "updated_at": "2015-12-29T11:13:20Z",
    "author_association": "MEMBER",
    "body": "Would you prefer to revert the configurability fix, if I show a workaround that will work on 4.0?\n\n``` python\nimport os\n\nfrom traitlets import Unicode\n\nfrom jupyter_core.paths import jupyter_config_dir\nfrom notebook.services.config import ConfigManager\n\nclass MyConfigManager(ConfigManager):\n    custom_config_dir = Unicode(config=True)\n    def _custom_config_dir_default(self):\n        return os.path.join(jupyter_config_dir(), 'nbconfig')\n\n    @property\n    def config_dir(self):\n        # config_dir is a read-only alias to custom_config_dir\n        return self.custom_config_dir\n\n    @config_dir.setter\n    def config_dir(self, value):\n        # ignore attempts to set config_dir\n        pass\n\nc.MyConfigManager.custom_config_dir = '/tmp/custom'\n\nc.NotebookApp.config_manager_class = MyConfigManager\n```\n\nThis way a `custom_config_dir` configurable is added, which can set the config directory, and works around any attempt by the NotebookApp to set the default config_dir.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/167767805",
    "html_url": "https://github.com/jupyter/notebook/issues/893#issuecomment-167767805",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/893",
    "id": 167767805,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2Nzc2NzgwNQ==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-29T11:18:52Z",
    "updated_at": "2015-12-29T11:18:52Z",
    "author_association": "MEMBER",
    "body": "If that's the way we want to go, #905 restores the hardcoded value.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/167898582",
    "html_url": "https://github.com/jupyter/notebook/issues/893#issuecomment-167898582",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/893",
    "id": 167898582,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2Nzg5ODU4Mg==",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-29T23:20:14Z",
    "updated_at": "2015-12-29T23:20:14Z",
    "author_association": "CONTRIBUTOR",
    "body": "Actually @damianavila I have a question. What are you trying to do in your custom `ConfigManager` subclass. That may be the most important thing to address here. \n\nThe reason I say that is this - if you are going to ship a custom `ConfigManager` that _only_ reads config from the conda specific config location, and not the user's config, that would be very frustrating to users. It means that all nbextensions that users have installed and working in 4.0 will stop working in 4.1 if they are using conda. I think that would be a step backwards.\n\nIf, on the other hand, you are going to ship a custom `ConfigManager` that does what the one in my PR does (loads from all locations, but saves only in user config) then you won't break user's existing installs.\n\nThese issues are much more important to me than the particular details of the changes we are discussing making to 4.1.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/167992510",
    "html_url": "https://github.com/jupyter/notebook/issues/893#issuecomment-167992510",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/893",
    "id": 167992510,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2Nzk5MjUxMA==",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-30T13:01:22Z",
    "updated_at": "2015-12-30T13:01:22Z",
    "author_association": "MEMBER",
    "body": "@minrk thanks for the workaround... in fact, I workaround the issue in another way just setting the `config_dir` at the initialization of the custom ConfigManger and it seems to work OK...\n\n@ellisonbg, that's the whole point of the discussion, we are trying to install the extension inside `prefix` but **also** enabling the user installed extension... that's the reason for our custom ConfigManager which is essentially reading the config from the user and \"adding\" it to the config living in the prefix, so people starting with `jupyter notebook` in a conda environment where our extension are installed can also use their own extension (\"activated\" at the user config place)\n\n> If, on the other hand, you are going to ship a custom ConfigManager that does what the one in my PR does (loads from all locations, but saves only in user config) then you won't break user's existing installs.\n\nAs I mentioned before, the implementation is a little bit different because we copy the content of the config files at the user space and add those to the config inside the env... so, in this way, we are not modifying the user space from inside the env (because that would break the env isolation and play dirty with something that only the user should modify - and not a package manager)... finally, we point to the env's config dir to start the notebook...\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/168027805",
    "html_url": "https://github.com/jupyter/notebook/issues/893#issuecomment-168027805",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/893",
    "id": 168027805,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODAyNzgwNQ==",
    "user": {
      "login": "ellisonbg",
      "id": 27600,
      "node_id": "MDQ6VXNlcjI3NjAw",
      "avatar_url": "https://avatars.githubusercontent.com/u/27600?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/ellisonbg",
      "html_url": "https://github.com/ellisonbg",
      "followers_url": "https://api.github.com/users/ellisonbg/followers",
      "following_url": "https://api.github.com/users/ellisonbg/following{/other_user}",
      "gists_url": "https://api.github.com/users/ellisonbg/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/ellisonbg/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/ellisonbg/subscriptions",
      "organizations_url": "https://api.github.com/users/ellisonbg/orgs",
      "repos_url": "https://api.github.com/users/ellisonbg/repos",
      "events_url": "https://api.github.com/users/ellisonbg/events{/privacy}",
      "received_events_url": "https://api.github.com/users/ellisonbg/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-30T16:22:56Z",
    "updated_at": "2015-12-30T16:22:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "@damianavila I want to understand this. Are you actively migrating user config to the sys.prefix config in the conda env?\n\nThe problem with that is that the builtin jupyter CLI tools (`jupyter nbextension`) in 4.1 don't have any way to manipulate the config files in sys.prefix. Thus, a user would have no way to disable   nbextensions that you have migrated without diving into obscure directories in the conda env.\n\nWhy not just use the `ConfigManager` in my PR that _loads_ from all directories, but writes only to the sys.prefix one? Then you will already be using the official approach we will support in 4.2.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/168060497",
    "html_url": "https://github.com/jupyter/notebook/issues/893#issuecomment-168060497",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/893",
    "id": 168060497,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE2ODA2MDQ5Nw==",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-12-30T19:30:08Z",
    "updated_at": "2015-12-31T11:57:17Z",
    "author_association": "MEMBER",
    "body": "> @damianavila I want to understand this. Are you actively migrating user config to the sys.prefix config in the conda env?\n\nYes.\n\n> The problem with that is that the builtin jupyter CLI tools (jupyter nbextension) in 4.1 don't have any way to manipulate the config files in sys.prefix. Thus, a user would have no way to disable nbextensions that you have migrated without diving into obscure directories in the conda env.\n\nWe started to work on this several weeks/months ago and we developed some other tools to potentially solve this issue because the `jupyter nbextension` tools were not prepared to deal with environments... in the road we learn some things and this is why we pushed the discussion in some nbextension-related issues lately...\n\n> Why not just use the ConfigManager in my PR that loads from all directories, but writes only to the sys.prefix one? \n\nNow, this is an option! Because we had several discussion and some consensus and your PR is now out there... From an historical perspective, so you can understand how this evolved, we put in place a machinery for some internal work when the discussion and consensus did not even birth yet... and we solved some issues on the road with custom developments.\nWith these things we can provide now some good experience around nbextension and server-extension for conda users...\nBut, we would like/should adopt the consensus and migrate to something more general in the near future... like the thing you proposed in your PR.\n\n> Then you will already be using the official approach we will support in 4.2.\n\nThat's interesting and it is in my todo list to do it if I am not redirected to other efforts inside the company :wink:\n",
    "performed_via_github_app": null
  }
]
