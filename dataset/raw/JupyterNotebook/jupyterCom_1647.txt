[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/236661130",
    "html_url": "https://github.com/jupyter/notebook/issues/1647#issuecomment-236661130",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1647",
    "id": 236661130,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzNjY2MTEzMA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-01T18:14:12Z",
    "updated_at": "2016-08-01T18:14:12Z",
    "author_association": "MEMBER",
    "body": "> My experiment may run long time (hours). It seems the notebook stop running after the browser tab closed. How to keep it running and updating the notebook?\n\nUnfortunately there are no current simple way to do that. We are aware of the issue and working on it. In the meantime, I would suggest wrapping all the computation you are doing in `Futures`, in order to query for results only interactively. \n\nCLosing as this is already tracked in many places, but feel free to continue asking questions.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/238493148",
    "html_url": "https://github.com/jupyter/notebook/issues/1647#issuecomment-238493148",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1647",
    "id": 238493148,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzODQ5MzE0OA==",
    "user": {
      "login": "bigquant",
      "id": 19626072,
      "node_id": "MDQ6VXNlcjE5NjI2MDcy",
      "avatar_url": "https://avatars.githubusercontent.com/u/19626072?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bigquant",
      "html_url": "https://github.com/bigquant",
      "followers_url": "https://api.github.com/users/bigquant/followers",
      "following_url": "https://api.github.com/users/bigquant/following{/other_user}",
      "gists_url": "https://api.github.com/users/bigquant/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bigquant/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bigquant/subscriptions",
      "organizations_url": "https://api.github.com/users/bigquant/orgs",
      "repos_url": "https://api.github.com/users/bigquant/repos",
      "events_url": "https://api.github.com/users/bigquant/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bigquant/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-09T08:53:10Z",
    "updated_at": "2016-08-09T08:53:10Z",
    "author_association": "NONE",
    "body": "Thanks for you reply, Carreau. I'm fresh to python notebook and not quite understand the \"Futures\" you mentioned. Could you give me a simple example? Great great thanks.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/238525787",
    "html_url": "https://github.com/jupyter/notebook/issues/1647#issuecomment-238525787",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1647",
    "id": 238525787,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIzODUyNTc4Nw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-08-09T11:28:00Z",
    "updated_at": "2016-08-09T11:28:00Z",
    "author_association": "MEMBER",
    "body": "A future is an object representing a task - it provides a way to see if the task is done, and get the result (or error) when it's finished. They're a general concept, but Python provides an implementation in [concurrent.futures](https://docs.python.org/3/library/concurrent.futures.html#module-concurrent.futures). They're normally used in code that's doing more than one thing at once.\n\nI think that's probably more complex than you need, though. A cell that you've started running will keep going when you close the browser tab, but the output it produces is lost. The easiest workaround is just to leave the browser tab open - tabs are cheap, I've got ~50 open now. If you can't do that for some reason, make sure it assigns any results you want to keep to a variable - they should still be available when you open it again. You can also use the [%capture magic](http://ipython.readthedocs.io/en/stable/interactive/magics.html#cellmagic-capture) to store printed output into a variable you can get later.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/280921017",
    "html_url": "https://github.com/jupyter/notebook/issues/1647#issuecomment-280921017",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1647",
    "id": 280921017,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MDkyMTAxNw==",
    "user": {
      "login": "flaviostutz",
      "id": 7790172,
      "node_id": "MDQ6VXNlcjc3OTAxNzI=",
      "avatar_url": "https://avatars.githubusercontent.com/u/7790172?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/flaviostutz",
      "html_url": "https://github.com/flaviostutz",
      "followers_url": "https://api.github.com/users/flaviostutz/followers",
      "following_url": "https://api.github.com/users/flaviostutz/following{/other_user}",
      "gists_url": "https://api.github.com/users/flaviostutz/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/flaviostutz/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/flaviostutz/subscriptions",
      "organizations_url": "https://api.github.com/users/flaviostutz/orgs",
      "repos_url": "https://api.github.com/users/flaviostutz/repos",
      "events_url": "https://api.github.com/users/flaviostutz/events{/privacy}",
      "received_events_url": "https://api.github.com/users/flaviostutz/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-02-19T14:01:57Z",
    "updated_at": "2017-02-19T14:01:57Z",
    "author_association": "NONE",
    "body": "I am struggling with this issue as well for some time now. The kernel keeps running your job on the server, but there is no way to see the console output after closing the browser.\r\n\r\nMy workaround was to write all my logs to a file, so that when my browser closes (indeed when a lot of logs come through browser it hangs up too) I can see the kernel job process by opening the log file (the log file can be open using Jupyter too).\r\n\r\n```\r\n    #!/usr/bin/python\r\n    import time\r\n    import datetime\r\n    import logging\r\n    \r\n    logger = logging.getLogger()\r\n    \r\n    def setup_file_logger(log_file):\r\n        hdlr = logging.FileHandler(log_file)\r\n        formatter = logging.Formatter('%(asctime)s %(levelname)s %(message)s')\r\n        hdlr.setFormatter(formatter)\r\n        logger.addHandler(hdlr) \r\n        logger.setLevel(logging.INFO)\r\n    \r\n    def log(message):\r\n        #outputs to Jupyter console\r\n        print('{} {}'.format(datetime.datetime.now(), message))\r\n        #outputs to file\r\n        logger.info(message)\r\n    \r\n    setup_file_logger('out.log')\r\n    \r\n    for i in range(10000):\r\n        log('Doing hard work here i=' + str(i))\r\n        log('Taking a nap now...')\r\n        time.sleep(1000)\r\n```\r\n\r\n+1 on this or some kind of long running process management",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/289843706",
    "html_url": "https://github.com/jupyter/notebook/issues/1647#issuecomment-289843706",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1647",
    "id": 289843706,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4OTg0MzcwNg==",
    "user": {
      "login": "abalter",
      "id": 5349876,
      "node_id": "MDQ6VXNlcjUzNDk4NzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5349876?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abalter",
      "html_url": "https://github.com/abalter",
      "followers_url": "https://api.github.com/users/abalter/followers",
      "following_url": "https://api.github.com/users/abalter/following{/other_user}",
      "gists_url": "https://api.github.com/users/abalter/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abalter/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abalter/subscriptions",
      "organizations_url": "https://api.github.com/users/abalter/orgs",
      "repos_url": "https://api.github.com/users/abalter/repos",
      "events_url": "https://api.github.com/users/abalter/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abalter/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-28T17:26:57Z",
    "updated_at": "2017-03-28T17:26:57Z",
    "author_association": "NONE",
    "body": "I'm confused why this is difficult. Since a serialized jupyter notebook contains cell output, it should be possible to keep track of output when a user closes a tab and returns to the notebook by adding to the notebook json as it runs in the background, in which case the output generated while running in the background would be in the notebook. Why can't jupyter just keep writing to the json file?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/290723109",
    "html_url": "https://github.com/jupyter/notebook/issues/1647#issuecomment-290723109",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1647",
    "id": 290723109,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDcyMzEwOQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-31T14:12:42Z",
    "updated_at": "2017-03-31T14:12:42Z",
    "author_association": "MEMBER",
    "body": "It doesn't write to the JSON files as soon as output is sent by the kernel - it is sent to the browser, which adds it in to the notebook document. When you save it (or an autosave occurs), the notebook document is converted to JSON and written to disk as a whole.\r\n\r\nWe're planning to change that so that the server keeps the notebook model and sends updates to the browser, but that's a big change to the architecture.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/290801571",
    "html_url": "https://github.com/jupyter/notebook/issues/1647#issuecomment-290801571",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1647",
    "id": 290801571,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDgwMTU3MQ==",
    "user": {
      "login": "abalter",
      "id": 5349876,
      "node_id": "MDQ6VXNlcjUzNDk4NzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5349876?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abalter",
      "html_url": "https://github.com/abalter",
      "followers_url": "https://api.github.com/users/abalter/followers",
      "following_url": "https://api.github.com/users/abalter/following{/other_user}",
      "gists_url": "https://api.github.com/users/abalter/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abalter/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abalter/subscriptions",
      "organizations_url": "https://api.github.com/users/abalter/orgs",
      "repos_url": "https://api.github.com/users/abalter/repos",
      "events_url": "https://api.github.com/users/abalter/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abalter/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-31T19:06:37Z",
    "updated_at": "2017-03-31T19:06:37Z",
    "author_association": "NONE",
    "body": "That would be great! Is there an current issue or milestone where I can track the progress?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/290939246",
    "html_url": "https://github.com/jupyter/notebook/issues/1647#issuecomment-290939246",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1647",
    "id": 290939246,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDkzOTI0Ng==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-01T18:44:39Z",
    "updated_at": "2017-04-01T18:44:39Z",
    "author_association": "MEMBER",
    "body": "I don't know of one - @Carreau might be able to give you more info on the progress.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/290946284",
    "html_url": "https://github.com/jupyter/notebook/issues/1647#issuecomment-290946284",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1647",
    "id": 290946284,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MDk0NjI4NA==",
    "user": {
      "login": "abalter",
      "id": 5349876,
      "node_id": "MDQ6VXNlcjUzNDk4NzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5349876?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abalter",
      "html_url": "https://github.com/abalter",
      "followers_url": "https://api.github.com/users/abalter/followers",
      "following_url": "https://api.github.com/users/abalter/following{/other_user}",
      "gists_url": "https://api.github.com/users/abalter/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abalter/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abalter/subscriptions",
      "organizations_url": "https://api.github.com/users/abalter/orgs",
      "repos_url": "https://api.github.com/users/abalter/repos",
      "events_url": "https://api.github.com/users/abalter/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abalter/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-01T20:49:18Z",
    "updated_at": "2017-04-01T20:50:20Z",
    "author_association": "NONE",
    "body": "That would be great! My group works on remote servers. So being able to reconnect to a session would be very valuable.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/291097864",
    "html_url": "https://github.com/jupyter/notebook/issues/1647#issuecomment-291097864",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1647",
    "id": 291097864,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTA5Nzg2NA==",
    "user": {
      "login": "prolearner",
      "id": 11585894,
      "node_id": "MDQ6VXNlcjExNTg1ODk0",
      "avatar_url": "https://avatars.githubusercontent.com/u/11585894?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/prolearner",
      "html_url": "https://github.com/prolearner",
      "followers_url": "https://api.github.com/users/prolearner/followers",
      "following_url": "https://api.github.com/users/prolearner/following{/other_user}",
      "gists_url": "https://api.github.com/users/prolearner/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/prolearner/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/prolearner/subscriptions",
      "organizations_url": "https://api.github.com/users/prolearner/orgs",
      "repos_url": "https://api.github.com/users/prolearner/repos",
      "events_url": "https://api.github.com/users/prolearner/events{/privacy}",
      "received_events_url": "https://api.github.com/users/prolearner/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-03T09:51:28Z",
    "updated_at": "2017-04-03T21:12:07Z",
    "author_association": "NONE",
    "body": "I'm working on remote servers too. It would be really handy to be able to do this, hope it'll be implemented soon.\r\n\r\nAs a suggestion, I think that having the possibility to reconnect to a session even if that means to lose all the output when you weren't connected but having the possibility to save the new output would be great and more simple to implement. That way if you're working on a remote server and you have a network disconnection you can still continue the work with little loss.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/291283806",
    "html_url": "https://github.com/jupyter/notebook/issues/1647#issuecomment-291283806",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1647",
    "id": 291283806,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5MTI4MzgwNg==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-03T21:46:41Z",
    "updated_at": "2017-04-03T21:46:41Z",
    "author_association": "MEMBER",
    "body": "> I don't know of one - @Carreau might be able to give you more info on the progress.\r\n\r\nNone AFAICT from the Notebook/Lab side. nteract might be closer with `commuter`. That's probably not going to be implemented \"soon\". Realtime will likely come sooner but will require a running browser. ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/302015457",
    "html_url": "https://github.com/jupyter/notebook/issues/1647#issuecomment-302015457",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1647",
    "id": 302015457,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwMjAxNTQ1Nw==",
    "user": {
      "login": "flying-sheep",
      "id": 291575,
      "node_id": "MDQ6VXNlcjI5MTU3NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/291575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/flying-sheep",
      "html_url": "https://github.com/flying-sheep",
      "followers_url": "https://api.github.com/users/flying-sheep/followers",
      "following_url": "https://api.github.com/users/flying-sheep/following{/other_user}",
      "gists_url": "https://api.github.com/users/flying-sheep/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/flying-sheep/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/flying-sheep/subscriptions",
      "organizations_url": "https://api.github.com/users/flying-sheep/orgs",
      "repos_url": "https://api.github.com/users/flying-sheep/repos",
      "events_url": "https://api.github.com/users/flying-sheep/events{/privacy}",
      "received_events_url": "https://api.github.com/users/flying-sheep/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-05-17T07:58:26Z",
    "updated_at": "2017-05-17T07:58:26Z",
    "author_association": "CONTRIBUTOR",
    "body": "> Closing as this is already tracked in many places, but feel free to continue asking questions.\r\n\r\nso where are the open issues for this? there’s still issues being opened about this (e.g. #2446) and i can’t find the earlier, open ones.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/307126924",
    "html_url": "https://github.com/jupyter/notebook/issues/1647#issuecomment-307126924",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1647",
    "id": 307126924,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMwNzEyNjkyNA==",
    "user": {
      "login": "k0pernicus",
      "id": 3605451,
      "node_id": "MDQ6VXNlcjM2MDU0NTE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3605451?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/k0pernicus",
      "html_url": "https://github.com/k0pernicus",
      "followers_url": "https://api.github.com/users/k0pernicus/followers",
      "following_url": "https://api.github.com/users/k0pernicus/following{/other_user}",
      "gists_url": "https://api.github.com/users/k0pernicus/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/k0pernicus/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/k0pernicus/subscriptions",
      "organizations_url": "https://api.github.com/users/k0pernicus/orgs",
      "repos_url": "https://api.github.com/users/k0pernicus/repos",
      "events_url": "https://api.github.com/users/k0pernicus/events{/privacy}",
      "received_events_url": "https://api.github.com/users/k0pernicus/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-06-08T14:49:10Z",
    "updated_at": "2017-06-08T14:49:10Z",
    "author_association": "NONE",
    "body": "Any news about this issue please?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/312940107",
    "html_url": "https://github.com/jupyter/notebook/issues/1647#issuecomment-312940107",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1647",
    "id": 312940107,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMjk0MDEwNw==",
    "user": {
      "login": "arvoelke",
      "id": 5420057,
      "node_id": "MDQ6VXNlcjU0MjAwNTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5420057?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/arvoelke",
      "html_url": "https://github.com/arvoelke",
      "followers_url": "https://api.github.com/users/arvoelke/followers",
      "following_url": "https://api.github.com/users/arvoelke/following{/other_user}",
      "gists_url": "https://api.github.com/users/arvoelke/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/arvoelke/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/arvoelke/subscriptions",
      "organizations_url": "https://api.github.com/users/arvoelke/orgs",
      "repos_url": "https://api.github.com/users/arvoelke/repos",
      "events_url": "https://api.github.com/users/arvoelke/events{/privacy}",
      "received_events_url": "https://api.github.com/users/arvoelke/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-04T19:45:44Z",
    "updated_at": "2017-07-04T19:45:44Z",
    "author_association": "NONE",
    "body": "> The easiest workaround is just to leave the browser tab open\r\n\r\nThis doesn't help if you are on a flaky connection to the server (e.g., accessing a remote jupyter server, or tunnelling to one through SSH).",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/313032059",
    "html_url": "https://github.com/jupyter/notebook/issues/1647#issuecomment-313032059",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1647",
    "id": 313032059,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzAzMjA1OQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-05T08:05:12Z",
    "updated_at": "2017-07-05T08:05:12Z",
    "author_association": "MEMBER",
    "body": "> Any news about this issue please?\r\n\r\nWe are aware of the issues there is not much written about it – we should get a comprehensive document about that – but this need a *significant* reactor of the frontend, plus likely *some* change in the backend. [CoCalc (ex SagemathCloud)](cocalc.com) does allow that but ou need a server side model, and basically you deprecate all the extension for a given frontend – which is easy for cocalc as it is without extensions.\r\n\r\nThough it is indirectly moving forward via Jupyterlaband nteract Comutable, and once this is out we can likely start to think about an isomorphicJsApp that keep state and the browser being only a \"view\" on this state.\r\n\r\nMy personal opinion is that this _can_ be done without changes to the protocol as a separate app and anyone is welcomed to chime in, and write up a IPep/RFC/Prototype that lays out the ground infrastructure. \r\n\r\nIt is  a significant enough amount of work that we can't just do that \"on the side\", and will need at least a FTE to do that. ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/313040393",
    "html_url": "https://github.com/jupyter/notebook/issues/1647#issuecomment-313040393",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1647",
    "id": 313040393,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzA0MDM5Mw==",
    "user": {
      "login": "flying-sheep",
      "id": 291575,
      "node_id": "MDQ6VXNlcjI5MTU3NQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/291575?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/flying-sheep",
      "html_url": "https://github.com/flying-sheep",
      "followers_url": "https://api.github.com/users/flying-sheep/followers",
      "following_url": "https://api.github.com/users/flying-sheep/following{/other_user}",
      "gists_url": "https://api.github.com/users/flying-sheep/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/flying-sheep/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/flying-sheep/subscriptions",
      "organizations_url": "https://api.github.com/users/flying-sheep/orgs",
      "repos_url": "https://api.github.com/users/flying-sheep/repos",
      "events_url": "https://api.github.com/users/flying-sheep/events{/privacy}",
      "received_events_url": "https://api.github.com/users/flying-sheep/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-05T08:41:51Z",
    "updated_at": "2017-07-05T08:42:35Z",
    "author_association": "CONTRIBUTOR",
    "body": "> likely some change in the backend\r\n\r\nfrom my understanding, the frontend runs in the browser. so if no tab is open, there is no frontend and there definitely need to be changes in the backend. or do you mean different parts than me?\r\n\r\narchitecturally, i’d assume that the notebook server needs to start writing responses to the notebook file as long as there’s no browser tab attached. (i.e. instead of receiving the responses in a browser tab and manually saving the notebook, it gets saved automatically after any (batch of) responses)",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/313041666",
    "html_url": "https://github.com/jupyter/notebook/issues/1647#issuecomment-313041666",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1647",
    "id": 313041666,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxMzA0MTY2Ng==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-05T08:46:56Z",
    "updated_at": "2017-07-05T08:46:56Z",
    "author_association": "MEMBER",
    "body": "> from my understanding, the frontend runs in the browser. so if no tab is open, there is no frontend and there definitely need to be changes in the backend. or do you mean different parts than me?\r\n\r\nYou need to move some pieces from frontend to backend. it likely can be done with a \"proxy server\" in between notebook server and browser.\r\n \r\n> architecturally, i’d assume that the notebook server needs to start writing responses to the notebook file as long as there’s no browser tab attached. (i.e. instead of receiving the responses in a browser tab and manually saving the notebook, it gets saved automatically after any (batch of) responses)\r\n\r\nYes and no. The notebook file does not – and cannot – store all the necessary information especially while the kernel is still running (for example mapping from message-id to handlers. You need an extra store (that can be in server RAM) and has a richer representation than ipynb. If you have that, then the frontend need to understand this _as well_ which start o be complicated. \r\n\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/316819464",
    "html_url": "https://github.com/jupyter/notebook/issues/1647#issuecomment-316819464",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1647",
    "id": 316819464,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjgxOTQ2NA==",
    "user": {
      "login": "kostrykin",
      "id": 6557139,
      "node_id": "MDQ6VXNlcjY1NTcxMzk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/6557139?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/kostrykin",
      "html_url": "https://github.com/kostrykin",
      "followers_url": "https://api.github.com/users/kostrykin/followers",
      "following_url": "https://api.github.com/users/kostrykin/following{/other_user}",
      "gists_url": "https://api.github.com/users/kostrykin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/kostrykin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/kostrykin/subscriptions",
      "organizations_url": "https://api.github.com/users/kostrykin/orgs",
      "repos_url": "https://api.github.com/users/kostrykin/repos",
      "events_url": "https://api.github.com/users/kostrykin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/kostrykin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-20T20:24:19Z",
    "updated_at": "2017-07-20T20:52:05Z",
    "author_association": "NONE",
    "body": "> You need to move some pieces from frontend to backend. it likely can be done with a \"proxy server\" in between notebook server and browser.\r\n\r\n@Carreau By \"proxy server\", you actually mean something like an off-screen *browser*, right? I'm quite not sure how the interaction of your actual browser and that off-screen-proxy-thing should look like. Do you have any knowledge of any peace of software which can do that? Maybe, a browser which itself renders its interface as HTML and provides it via HTTP?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/316845180",
    "html_url": "https://github.com/jupyter/notebook/issues/1647#issuecomment-316845180",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1647",
    "id": 316845180,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNjg0NTE4MA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-20T22:13:45Z",
    "updated_at": "2017-07-20T22:13:45Z",
    "author_association": "MEMBER",
    "body": "> @Carreau By \"proxy server\", you actually mean something like an off-screen browser, right\r\n\r\nNo, not completely. Browser like  imply HTML and rendering. You can store non-html models on the proxy-server-side. I only care about the ipynb+some-info on the server side. The rendering is a detail.  The point is the \"state\" you care about – which is  not the HTML rendering should live and be able to be updated without needing to have an open browser. Thing of Google Drive RT API if you wish. \r\n\r\nI've seen things (ex mozilla tow truck I think) trying to do that with HTML. Any isomorphic App these days does similar things. ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/351224310",
    "html_url": "https://github.com/jupyter/notebook/issues/1647#issuecomment-351224310",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1647",
    "id": 351224310,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTIyNDMxMA==",
    "user": {
      "login": "idning",
      "id": 1301031,
      "node_id": "MDQ6VXNlcjEzMDEwMzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1301031?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/idning",
      "html_url": "https://github.com/idning",
      "followers_url": "https://api.github.com/users/idning/followers",
      "following_url": "https://api.github.com/users/idning/following{/other_user}",
      "gists_url": "https://api.github.com/users/idning/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/idning/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/idning/subscriptions",
      "organizations_url": "https://api.github.com/users/idning/orgs",
      "repos_url": "https://api.github.com/users/idning/repos",
      "events_url": "https://api.github.com/users/idning/events{/privacy}",
      "received_events_url": "https://api.github.com/users/idning/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-12T23:03:13Z",
    "updated_at": "2017-12-12T23:03:13Z",
    "author_association": "NONE",
    "body": "do we have any update on this, this should be essential for the cloud use case. ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/351226321",
    "html_url": "https://github.com/jupyter/notebook/issues/1647#issuecomment-351226321",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1647",
    "id": 351226321,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTIyNjMyMQ==",
    "user": {
      "login": "set92",
      "id": 1332249,
      "node_id": "MDQ6VXNlcjEzMzIyNDk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1332249?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/set92",
      "html_url": "https://github.com/set92",
      "followers_url": "https://api.github.com/users/set92/followers",
      "following_url": "https://api.github.com/users/set92/following{/other_user}",
      "gists_url": "https://api.github.com/users/set92/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/set92/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/set92/subscriptions",
      "organizations_url": "https://api.github.com/users/set92/orgs",
      "repos_url": "https://api.github.com/users/set92/repos",
      "events_url": "https://api.github.com/users/set92/events{/privacy}",
      "received_events_url": "https://api.github.com/users/set92/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-12T23:12:44Z",
    "updated_at": "2017-12-12T23:12:44Z",
    "author_association": "NONE",
    "body": "If you check the 2nd reference, which says \"This is an intended outcome of the notebook model [refactor](https://github.com/jupyterlab/jupyterlab/issues/2540#issuecomment-339467751).\". So we will get it in jupyterlab, althought reading it I'm thinking it will save the results but it would not let us open again a closed notebook to keep working on it, or check the results after letting it working in background.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/351227102",
    "html_url": "https://github.com/jupyter/notebook/issues/1647#issuecomment-351227102",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1647",
    "id": 351227102,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MTIyNzEwMg==",
    "user": {
      "login": "idning",
      "id": 1301031,
      "node_id": "MDQ6VXNlcjEzMDEwMzE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1301031?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/idning",
      "html_url": "https://github.com/idning",
      "followers_url": "https://api.github.com/users/idning/followers",
      "following_url": "https://api.github.com/users/idning/following{/other_user}",
      "gists_url": "https://api.github.com/users/idning/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/idning/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/idning/subscriptions",
      "organizations_url": "https://api.github.com/users/idning/orgs",
      "repos_url": "https://api.github.com/users/idning/repos",
      "events_url": "https://api.github.com/users/idning/events{/privacy}",
      "received_events_url": "https://api.github.com/users/idning/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-12T23:16:40Z",
    "updated_at": "2017-12-12T23:16:40Z",
    "author_association": "NONE",
    "body": "Is that any hack we can do ? \r\n\r\ne.g.  assign the output of each cell to a internal variable, and when we re-connect the kernel, get these variables and display them.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/353110058",
    "html_url": "https://github.com/jupyter/notebook/issues/1647#issuecomment-353110058",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1647",
    "id": 353110058,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzExMDA1OA==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-20T16:23:35Z",
    "updated_at": "2017-12-20T16:23:35Z",
    "author_association": "MEMBER",
    "body": "@idning yes, storing results and outputs in variables continues to work. You can redisplay variables still in memory at any time.\r\n\r\n```python\r\nx = long_computation()\r\n... some time later:\r\ndisplay(x)\r\n```\r\n\r\nYou can also capture *displayed outputs* (not results) with the `%%capture` cell magic:\r\n\r\n```python\r\n%%capture out_x\r\nprint(\"lots of stuff\")\r\n...\r\n# another cell\r\nout_x.show()\r\n```\r\n\r\nHowever, if it really is a long-running computation, avoiding recomputing even when the kernel dies is probably useful. In that case, using a caching scheme such that you write intermediate results to disk and only re-execute if the cache doesn't exist on disk is preferable. This is what I have done for my long-running notebooks long ago. In this way, re-running a whole notebook after it's run once, even with a new kernel, may only take a few seconds and will produce all of the original output. There are lots of ways to do this with different tradeoffs of rigor vs cache performance, which is part of why there isn't a simple example to link to.\r\n\r\nYet another option is to run the notebook entirely headless with nbconvert:\r\n\r\n```\r\njupyter nbconvert --execute --to notebook mynotebook.ipynb\r\n```\r\n\r\nwhich will create a new notebook with all of the output in tact.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/362131207",
    "html_url": "https://github.com/jupyter/notebook/issues/1647#issuecomment-362131207",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1647",
    "id": 362131207,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjEzMTIwNw==",
    "user": {
      "login": "rasbt",
      "id": 5618407,
      "node_id": "MDQ6VXNlcjU2MTg0MDc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5618407?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/rasbt",
      "html_url": "https://github.com/rasbt",
      "followers_url": "https://api.github.com/users/rasbt/followers",
      "following_url": "https://api.github.com/users/rasbt/following{/other_user}",
      "gists_url": "https://api.github.com/users/rasbt/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/rasbt/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/rasbt/subscriptions",
      "organizations_url": "https://api.github.com/users/rasbt/orgs",
      "repos_url": "https://api.github.com/users/rasbt/repos",
      "events_url": "https://api.github.com/users/rasbt/events{/privacy}",
      "received_events_url": "https://api.github.com/users/rasbt/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-01T01:45:33Z",
    "updated_at": "2018-02-01T01:45:33Z",
    "author_association": "NONE",
    "body": "I think the typical use case for that is when running longer computations in the notebook; here, it's important to keep in mind that nbconvert is not very generous with the default timeout limit per cell. E.g., for longer computations, one might want to provide a custom timeout limit, e.g., for computations that run for a day, something as follows:\r\n\r\n    jupyter nbconvert --execute --to notebook mynotebook.ipynb --ExecutePreprocessor.timeout=86400",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/362135566",
    "html_url": "https://github.com/jupyter/notebook/issues/1647#issuecomment-362135566",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1647",
    "id": 362135566,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjEzNTU2Ng==",
    "user": {
      "login": "abalter",
      "id": 5349876,
      "node_id": "MDQ6VXNlcjUzNDk4NzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5349876?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/abalter",
      "html_url": "https://github.com/abalter",
      "followers_url": "https://api.github.com/users/abalter/followers",
      "following_url": "https://api.github.com/users/abalter/following{/other_user}",
      "gists_url": "https://api.github.com/users/abalter/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/abalter/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/abalter/subscriptions",
      "organizations_url": "https://api.github.com/users/abalter/orgs",
      "repos_url": "https://api.github.com/users/abalter/repos",
      "events_url": "https://api.github.com/users/abalter/events{/privacy}",
      "received_events_url": "https://api.github.com/users/abalter/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-01T02:10:44Z",
    "updated_at": "2018-02-01T02:10:44Z",
    "author_association": "NONE",
    "body": "I have a really hard time understanding why this is a problem. Basically, whatever would be sent to the browser is instead written to a file. When the user logs back in, send it to the browser.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/362306883",
    "html_url": "https://github.com/jupyter/notebook/issues/1647#issuecomment-362306883",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1647",
    "id": 362306883,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjMwNjg4Mw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-01T15:46:37Z",
    "updated_at": "2018-02-01T15:46:37Z",
    "author_association": "MEMBER",
    "body": "Something like that is now implemented - messages go into a buffer when there's no client connected, and are replayed when one reconnects. But the details are never as simple as they seem.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/362570491",
    "html_url": "https://github.com/jupyter/notebook/issues/1647#issuecomment-362570491",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1647",
    "id": 362570491,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MjU3MDQ5MQ==",
    "user": {
      "login": "damianavila",
      "id": 1640669,
      "node_id": "MDQ6VXNlcjE2NDA2Njk=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1640669?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/damianavila",
      "html_url": "https://github.com/damianavila",
      "followers_url": "https://api.github.com/users/damianavila/followers",
      "following_url": "https://api.github.com/users/damianavila/following{/other_user}",
      "gists_url": "https://api.github.com/users/damianavila/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/damianavila/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/damianavila/subscriptions",
      "organizations_url": "https://api.github.com/users/damianavila/orgs",
      "repos_url": "https://api.github.com/users/damianavila/repos",
      "events_url": "https://api.github.com/users/damianavila/events{/privacy}",
      "received_events_url": "https://api.github.com/users/damianavila/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-02T12:12:39Z",
    "updated_at": "2018-02-02T12:12:39Z",
    "author_association": "MEMBER",
    "body": "> Something like that is now implemented - messages go into a buffer when there's no client connected, and are replayed when one reconnects.\r\n\r\nI have not seen any reference to this functionality in the docs, maybe we should \"advertise\" it a little more?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/363168763",
    "html_url": "https://github.com/jupyter/notebook/issues/1647#issuecomment-363168763",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1647",
    "id": 363168763,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzE2ODc2Mw==",
    "user": {
      "login": "bernardelli",
      "id": 9707436,
      "node_id": "MDQ6VXNlcjk3MDc0MzY=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9707436?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/bernardelli",
      "html_url": "https://github.com/bernardelli",
      "followers_url": "https://api.github.com/users/bernardelli/followers",
      "following_url": "https://api.github.com/users/bernardelli/following{/other_user}",
      "gists_url": "https://api.github.com/users/bernardelli/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/bernardelli/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/bernardelli/subscriptions",
      "organizations_url": "https://api.github.com/users/bernardelli/orgs",
      "repos_url": "https://api.github.com/users/bernardelli/repos",
      "events_url": "https://api.github.com/users/bernardelli/events{/privacy}",
      "received_events_url": "https://api.github.com/users/bernardelli/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-05T18:05:08Z",
    "updated_at": "2018-02-05T18:05:08Z",
    "author_association": "NONE",
    "body": "I am deeply interested in this functionality.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/363339121",
    "html_url": "https://github.com/jupyter/notebook/issues/1647#issuecomment-363339121",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1647",
    "id": 363339121,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzMzOTEyMQ==",
    "user": {
      "login": "emacsenli666",
      "id": 31475610,
      "node_id": "MDQ6VXNlcjMxNDc1NjEw",
      "avatar_url": "https://avatars.githubusercontent.com/u/31475610?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/emacsenli666",
      "html_url": "https://github.com/emacsenli666",
      "followers_url": "https://api.github.com/users/emacsenli666/followers",
      "following_url": "https://api.github.com/users/emacsenli666/following{/other_user}",
      "gists_url": "https://api.github.com/users/emacsenli666/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/emacsenli666/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/emacsenli666/subscriptions",
      "organizations_url": "https://api.github.com/users/emacsenli666/orgs",
      "repos_url": "https://api.github.com/users/emacsenli666/repos",
      "events_url": "https://api.github.com/users/emacsenli666/events{/privacy}",
      "received_events_url": "https://api.github.com/users/emacsenli666/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-06T07:51:49Z",
    "updated_at": "2018-02-06T07:51:49Z",
    "author_association": "NONE",
    "body": "@takluyver ,that sound interesting,so when will this function be published? People working on remote cloud engine might need  this eagerly.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/363383553",
    "html_url": "https://github.com/jupyter/notebook/issues/1647#issuecomment-363383553",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1647",
    "id": 363383553,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM2MzM4MzU1Mw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-02-06T10:44:30Z",
    "updated_at": "2018-02-06T10:44:30Z",
    "author_association": "MEMBER",
    "body": "Should be there since 5.2 - added in PR #2871",
    "performed_via_github_app": null
  }
]
