[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/127077646",
    "html_url": "https://github.com/jupyter/notebook/issues/252#issuecomment-127077646",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/252",
    "id": 127077646,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNzA3NzY0Ng==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-02T22:33:01Z",
    "updated_at": "2015-08-02T22:33:01Z",
    "author_association": "MEMBER",
    "body": "We don't expose any such functionality in the UI. It would be possible in an extension, though working out what to do with the cell output and prompt number might be tricky.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/127083184",
    "html_url": "https://github.com/jupyter/notebook/issues/252#issuecomment-127083184",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/252",
    "id": 127083184,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNzA4MzE4NA==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-02T23:20:34Z",
    "updated_at": "2015-08-02T23:20:34Z",
    "author_association": "MEMBER",
    "body": "Yup, running selected text is not technically complicated. As @takluyver points out, though, It is a bit unclear what the right consequences of that execution should be in terms of representation in the document. Should it execute as normal (i.e. behave the same as commenting-out the remainder of the cell, executing, and uncommenting)? Or should it send the snippet's output to a transient output area (a bit tricky right now, but should become easier with some upcoming refactoring)? Or create a new cell with the snippet?\n\nThe first option would be very simple to implement and potentially useful, but violates a bit of the document metaphor, since there's no longer an indication of what code was actually executed to produce the output.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/127089523",
    "html_url": "https://github.com/jupyter/notebook/issues/252#issuecomment-127089523",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/252",
    "id": 127089523,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNzA4OTUyMw==",
    "user": {
      "login": "quantsignals",
      "id": 3116678,
      "node_id": "MDQ6VXNlcjMxMTY2Nzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3116678?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/quantsignals",
      "html_url": "https://github.com/quantsignals",
      "followers_url": "https://api.github.com/users/quantsignals/followers",
      "following_url": "https://api.github.com/users/quantsignals/following{/other_user}",
      "gists_url": "https://api.github.com/users/quantsignals/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/quantsignals/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/quantsignals/subscriptions",
      "organizations_url": "https://api.github.com/users/quantsignals/orgs",
      "repos_url": "https://api.github.com/users/quantsignals/repos",
      "events_url": "https://api.github.com/users/quantsignals/events{/privacy}",
      "received_events_url": "https://api.github.com/users/quantsignals/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-03T00:22:02Z",
    "updated_at": "2015-08-03T00:22:02Z",
    "author_association": "NONE",
    "body": "Thank you very much for considering this inquiry.\n\nI would already be very excited about the first simpler option, where the calculation behaves as if the remainder of the text would have been temporarily commented out.  Would it be just a matter of sending the highlighted code to the method that usually executes the full cell contents?\n\nThe second version, featuring a special output region for 'debugging' sounds like it would require more extensive development, but it could be an interesting alternative add-on feature.\n\nCould the first version be done via a minimal change to the jupyter browser code base, such that it becomes automatically part of all installed kernels, such a for example python, pyspark, scala, R ...  ?\n\nWhat would it take to add (hack) this sort of feature to a local (private) copy of the code? Would very much appreciate any pointers in this regard. Thanks\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/127368408",
    "html_url": "https://github.com/jupyter/notebook/issues/252#issuecomment-127368408",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/252",
    "id": 127368408,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNzM2ODQwOA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-03T18:49:24Z",
    "updated_at": "2015-08-03T18:49:30Z",
    "author_association": "MEMBER",
    "body": "I think the simple version of this can be done as a JS extension fairly easily. You'd just need to:\n- Create a function that gets the selected text from the selected cell and executes it\n- Hook up a toolbar button and/or keyboard shortcut to call your function.\n\n@Carreau knows the details of these things best, I think\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/127398168",
    "html_url": "https://github.com/jupyter/notebook/issues/252#issuecomment-127398168",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/252",
    "id": 127398168,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNzM5ODE2OA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-03T20:27:17Z",
    "updated_at": "2015-08-03T20:27:17Z",
    "author_association": "MEMBER",
    "body": "I'll try to write how to do that and publish and proof of concept of extension that does it. \n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/127419873",
    "html_url": "https://github.com/jupyter/notebook/issues/252#issuecomment-127419873",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/252",
    "id": 127419873,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNzQxOTg3Mw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-03T22:15:13Z",
    "updated_at": "2015-08-03T22:15:13Z",
    "author_association": "MEMBER",
    "body": "What about [this](http://carreau.gitbooks.io/jupyter-book/content/custom-extension-1.html) ?\n\n![ext1](https://cloud.githubusercontent.com/assets/335567/9048998/65e6d930-39f2-11e5-9713-85278eced2c2.gif)\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/127438999",
    "html_url": "https://github.com/jupyter/notebook/issues/252#issuecomment-127438999",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/252",
    "id": 127438999,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNzQzODk5OQ==",
    "user": {
      "login": "quantsignals",
      "id": 3116678,
      "node_id": "MDQ6VXNlcjMxMTY2Nzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3116678?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/quantsignals",
      "html_url": "https://github.com/quantsignals",
      "followers_url": "https://api.github.com/users/quantsignals/followers",
      "following_url": "https://api.github.com/users/quantsignals/following{/other_user}",
      "gists_url": "https://api.github.com/users/quantsignals/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/quantsignals/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/quantsignals/subscriptions",
      "organizations_url": "https://api.github.com/users/quantsignals/orgs",
      "repos_url": "https://api.github.com/users/quantsignals/repos",
      "events_url": "https://api.github.com/users/quantsignals/events{/privacy}",
      "received_events_url": "https://api.github.com/users/quantsignals/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-04T00:15:11Z",
    "updated_at": "2015-08-04T00:15:58Z",
    "author_association": "NONE",
    "body": "Thank you very much Carreau, that's great, also for pointing to your insightful documentation. Does the method of creating the extension in ~/.jupyter/nbextensions/runselected work with a production copy for jupyter or does it require a rebuild from the git source?\n\nHow would one configure the notebook to load up the extension as default, without the need to access the console? I guess there is a way to add a toggle button to the notebook .... \n\nTo try, I did build the notebook from the git repo on an fresh ubuntu vagrant image. But while being able to compile and run the original notebook, I did not quite yet get the extension working form the ~./jupyter location. However I got it to work  when sourcing the all functions  from main.js directly into Chrome's JS console. I might be missing something ....\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/127441017",
    "html_url": "https://github.com/jupyter/notebook/issues/252#issuecomment-127441017",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/252",
    "id": 127441017,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNzQ0MTAxNw==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-04T00:29:57Z",
    "updated_at": "2015-08-04T00:29:57Z",
    "author_association": "MEMBER",
    "body": "> Does the method of creating the extension in ~/.jupyter/nbextensions/runselected work with a production copy for jupyter or does it require a rebuild from the git source?\n\nIt works on master, on Stable,3.x production put it into `~/.ipython/nbextensions`. For global install , `/usr/local/share/jupyter/nbextensions` should work across users. (it is a search path) \nit might need a server restart in some cases though. \n\nThe following does configure the server to load the extension automatically, you only have to do it once. \n\n```\nIPython.notebook.config.update({\n  \"load_extensions\": {\"runselected/main\": true}\n})\n```\n\nmore especially it just create/update this config file:\n\n```\n~ $ cat ~/.jupyter/nbconfig/notebook.json\n{\n  \"load_extensions\": {\n    \"nbgrader/create_assignment\": true,\n    \"runselected/main\": true  // <- update/create this line. \n  }\n}\n```\n\nSo you can do it programmatically if you like. \nI did not fiddled around with my system, except symlink `~/Library/Jupyter/nbextensions` to `~/.jupyter/nbextension` so it should work for you. In particular you should see `Loaded extension: runselected/main` in Chrome console, or an error if it does not get the config.\n\nYou might need to restart the server after activating the extension though because of caching, and aggressively page refresh. \n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/127462086",
    "html_url": "https://github.com/jupyter/notebook/issues/252#issuecomment-127462086",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/252",
    "id": 127462086,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEyNzQ2MjA4Ng==",
    "user": {
      "login": "quantsignals",
      "id": 3116678,
      "node_id": "MDQ6VXNlcjMxMTY2Nzg=",
      "avatar_url": "https://avatars.githubusercontent.com/u/3116678?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/quantsignals",
      "html_url": "https://github.com/quantsignals",
      "followers_url": "https://api.github.com/users/quantsignals/followers",
      "following_url": "https://api.github.com/users/quantsignals/following{/other_user}",
      "gists_url": "https://api.github.com/users/quantsignals/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/quantsignals/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/quantsignals/subscriptions",
      "organizations_url": "https://api.github.com/users/quantsignals/orgs",
      "repos_url": "https://api.github.com/users/quantsignals/repos",
      "events_url": "https://api.github.com/users/quantsignals/events{/privacy}",
      "received_events_url": "https://api.github.com/users/quantsignals/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-04T03:05:05Z",
    "updated_at": "2015-08-04T03:05:05Z",
    "author_association": "NONE",
    "body": "Perfect! Got it to work as well now, by setting the following symlink within the VM:\n\nsudo ln -s /home/vagrant/.jupyter /usr/local/share/jupyter\n\nps. for reference if anyone is interested, I'm running on a vagrant image using the following to start up the server: \n\njupyter notebook --no-browser --ip=0.0.0.0 --port=5000\n\nwhile enabling port forwarding within the \"Vagrantfile\":\n\nconfig.vm.network \"forwarded_port\", host: 5000, guest: 5000, auto_correct: true\n\nFinally the notebook is accessible on the host machine at:\n\nhttp://127.0.0.1:5000/\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/180417339",
    "html_url": "https://github.com/jupyter/notebook/issues/252#issuecomment-180417339",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/252",
    "id": 180417339,
    "node_id": "MDEyOklzc3VlQ29tbWVudDE4MDQxNzMzOQ==",
    "user": {
      "login": "brucepucci",
      "id": 4780417,
      "node_id": "MDQ6VXNlcjQ3ODA0MTc=",
      "avatar_url": "https://avatars.githubusercontent.com/u/4780417?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/brucepucci",
      "html_url": "https://github.com/brucepucci",
      "followers_url": "https://api.github.com/users/brucepucci/followers",
      "following_url": "https://api.github.com/users/brucepucci/following{/other_user}",
      "gists_url": "https://api.github.com/users/brucepucci/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/brucepucci/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/brucepucci/subscriptions",
      "organizations_url": "https://api.github.com/users/brucepucci/orgs",
      "repos_url": "https://api.github.com/users/brucepucci/repos",
      "events_url": "https://api.github.com/users/brucepucci/events{/privacy}",
      "received_events_url": "https://api.github.com/users/brucepucci/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-02-05T16:04:03Z",
    "updated_at": "2016-02-05T16:04:03Z",
    "author_association": "NONE",
    "body": "The runselected extension in exactly what I wanted. Thanks.\n\nI really would like to map it to Cmd-Enter though. I tried editing the javascript to \"Cmd-Enter\" and I can get it to spit out \"executing selection\" to the console but the selection is not run. I simply get a newline. Anyway to over ride the existing behavior?\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/297578542",
    "html_url": "https://github.com/jupyter/notebook/issues/252#issuecomment-297578542",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/252",
    "id": 297578542,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI5NzU3ODU0Mg==",
    "user": {
      "login": "JamiesHQ",
      "id": 476301,
      "node_id": "MDQ6VXNlcjQ3NjMwMQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/476301?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/JamiesHQ",
      "html_url": "https://github.com/JamiesHQ",
      "followers_url": "https://api.github.com/users/JamiesHQ/followers",
      "following_url": "https://api.github.com/users/JamiesHQ/following{/other_user}",
      "gists_url": "https://api.github.com/users/JamiesHQ/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/JamiesHQ/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/JamiesHQ/subscriptions",
      "organizations_url": "https://api.github.com/users/JamiesHQ/orgs",
      "repos_url": "https://api.github.com/users/JamiesHQ/repos",
      "events_url": "https://api.github.com/users/JamiesHQ/events{/privacy}",
      "received_events_url": "https://api.github.com/users/JamiesHQ/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-04-27T00:32:36Z",
    "updated_at": "2017-04-27T00:32:36Z",
    "author_association": "MEMBER",
    "body": "The original request in this issue seems to be met. @brucepucci : if you still desire the functionality you mention above, please open a new issue. thanks!",
    "performed_via_github_app": null
  }
]
