[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/227739805",
    "html_url": "https://github.com/jupyter/notebook/issues/1559#issuecomment-227739805",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1559",
    "id": 227739805,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzczOTgwNQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-22T13:16:42Z",
    "updated_at": "2016-06-22T13:16:42Z",
    "author_association": "MEMBER",
    "body": "The PID it stores and acts on is for bash itself. You're running Python from bash, so that's a subprocess.\n\n```\nipython\n └ bash\n    └ python (in this example)\n```\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/227791052",
    "html_url": "https://github.com/jupyter/notebook/issues/1559#issuecomment-227791052",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1559",
    "id": 227791052,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzc5MTA1Mg==",
    "user": {
      "login": "j2kun",
      "id": 2467754,
      "node_id": "MDQ6VXNlcjI0Njc3NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2467754?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/j2kun",
      "html_url": "https://github.com/j2kun",
      "followers_url": "https://api.github.com/users/j2kun/followers",
      "following_url": "https://api.github.com/users/j2kun/following{/other_user}",
      "gists_url": "https://api.github.com/users/j2kun/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/j2kun/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/j2kun/subscriptions",
      "organizations_url": "https://api.github.com/users/j2kun/orgs",
      "repos_url": "https://api.github.com/users/j2kun/repos",
      "events_url": "https://api.github.com/users/j2kun/events{/privacy}",
      "received_events_url": "https://api.github.com/users/j2kun/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-22T15:59:58Z",
    "updated_at": "2016-06-22T16:01:21Z",
    "author_association": "NONE",
    "body": "@takluyver Is there a way to get the child process id into a python or bash variable to be used later in the notebook? The use case I'm envisioning is: cell 1 starts a simple local webserver, cell 2 invokes that webserver, cell 3 kills the webserver.\n\nFor example, can I use this answer to set a session id for the bash cell? http://stackoverflow.com/questions/4789837/how-to-terminate-a-python-subprocess-launched-with-shell-true\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/227793316",
    "html_url": "https://github.com/jupyter/notebook/issues/1559#issuecomment-227793316",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1559",
    "id": 227793316,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzc5MzMxNg==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-22T16:06:59Z",
    "updated_at": "2016-06-22T16:06:59Z",
    "author_association": "MEMBER",
    "body": "If you just want to run something, use Python's native `subprocess` module, rather than a magic i.e.\n\n``` python\nproc = subprocess.Popen(['python', 'myfile.py'])\n```\n\n(Of course, you can wrap this in a function for users to call if you like).\n\nIf you need to do it through bash for some reason, [this SO answer](http://stackoverflow.com/a/1911387/434217) describes how to save the PID of a background job.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/227801864",
    "html_url": "https://github.com/jupyter/notebook/issues/1559#issuecomment-227801864",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1559",
    "id": 227801864,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzgwMTg2NA==",
    "user": {
      "login": "j2kun",
      "id": 2467754,
      "node_id": "MDQ6VXNlcjI0Njc3NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2467754?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/j2kun",
      "html_url": "https://github.com/j2kun",
      "followers_url": "https://api.github.com/users/j2kun/followers",
      "following_url": "https://api.github.com/users/j2kun/following{/other_user}",
      "gists_url": "https://api.github.com/users/j2kun/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/j2kun/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/j2kun/subscriptions",
      "organizations_url": "https://api.github.com/users/j2kun/orgs",
      "repos_url": "https://api.github.com/users/j2kun/repos",
      "events_url": "https://api.github.com/users/j2kun/events{/privacy}",
      "received_events_url": "https://api.github.com/users/j2kun/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-22T16:35:55Z",
    "updated_at": "2016-06-22T16:53:21Z",
    "author_association": "NONE",
    "body": "I need to do it through bash, because the the notebook is converted to an online tutorial that focuses on bash, while the contents are run during integration tests.\n\nThe SO answer you linked to does not work, because Jupyter notebook silently ignores the `&` to spawn background processes from within a bash cell. For example, the following cell hangs indefinitely:\n\n```\n%%bash --out bg_pid\npython myfile.py&\necho $!\n```\n\nMoreover, putting the same code into `%%bash --bg --out bg_pid` also hangs (in the background), so that `bg_pid` is an `_io.BufferedReader`, waiting for `python myfile` to finish before the `echo` starts.\n\nI don't mean to pester, but it does seem like a bug in the notebook (or the bash kernel extension?) that if you run a python script from a `%%bash --bg` cell, that child process is lost forever. I'd be happy to submit a PR that adds `preexec_fn=os.setsid` as a kwarg to the bash magic Popen call, if you'd point me to where these kwargs are set.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/227802556",
    "html_url": "https://github.com/jupyter/notebook/issues/1559#issuecomment-227802556",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1559",
    "id": 227802556,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzgwMjU1Ng==",
    "user": {
      "login": "j2kun",
      "id": 2467754,
      "node_id": "MDQ6VXNlcjI0Njc3NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2467754?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/j2kun",
      "html_url": "https://github.com/j2kun",
      "followers_url": "https://api.github.com/users/j2kun/followers",
      "following_url": "https://api.github.com/users/j2kun/following{/other_user}",
      "gists_url": "https://api.github.com/users/j2kun/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/j2kun/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/j2kun/subscriptions",
      "organizations_url": "https://api.github.com/users/j2kun/orgs",
      "repos_url": "https://api.github.com/users/j2kun/repos",
      "events_url": "https://api.github.com/users/j2kun/events{/privacy}",
      "received_events_url": "https://api.github.com/users/j2kun/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-22T16:38:24Z",
    "updated_at": "2016-06-22T16:38:24Z",
    "author_association": "NONE",
    "body": "Alternatively, I would be happy with a way to kill all child processes spawned by the jupyter notebook as a whole. But even when the notebook exits, spawned child processes persist.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/227814561",
    "html_url": "https://github.com/jupyter/notebook/issues/1559#issuecomment-227814561",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1559",
    "id": 227814561,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzgxNDU2MQ==",
    "user": {
      "login": "j2kun",
      "id": 2467754,
      "node_id": "MDQ6VXNlcjI0Njc3NTQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/2467754?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/j2kun",
      "html_url": "https://github.com/j2kun",
      "followers_url": "https://api.github.com/users/j2kun/followers",
      "following_url": "https://api.github.com/users/j2kun/following{/other_user}",
      "gists_url": "https://api.github.com/users/j2kun/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/j2kun/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/j2kun/subscriptions",
      "organizations_url": "https://api.github.com/users/j2kun/orgs",
      "repos_url": "https://api.github.com/users/j2kun/repos",
      "events_url": "https://api.github.com/users/j2kun/events{/privacy}",
      "received_events_url": "https://api.github.com/users/j2kun/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-22T17:18:39Z",
    "updated_at": "2016-06-22T17:18:50Z",
    "author_association": "NONE",
    "body": "To be sure, I have a hacky bash workaround, using the following as a cleanup script:\n\n```\nps aux | grep 'myfile.py' | grep -v 'grep' | awk '{print $2}' | xargs kill\n```\n\nI am just looking for something more stable.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/227869012",
    "html_url": "https://github.com/jupyter/notebook/issues/1559#issuecomment-227869012",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1559",
    "id": 227869012,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyNzg2OTAxMg==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-22T20:37:56Z",
    "updated_at": "2016-06-22T20:37:56Z",
    "author_association": "MEMBER",
    "body": "I'll try to look into the issue with `&` tomorrow. This is in IPython, not bash_kernel - if you were using bash_kernel there would be no need for or option to use the `%%bash` cell magic.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/228705816",
    "html_url": "https://github.com/jupyter/notebook/issues/1559#issuecomment-228705816",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1559",
    "id": 228705816,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyODcwNTgxNg==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-27T10:10:28Z",
    "updated_at": "2016-06-27T10:10:28Z",
    "author_association": "MEMBER",
    "body": "If your code is as simple as this, you could also use `exec` to replace the bash process with the Python process:\n\n```\nexec python myfile.py\n```\n\nYou could also use the `%%python` magic to run a Python script instead of `%%bash`:\n\n```\n%%python\nexecfile('myscript.py')\n```\n\nBut there may be a reason that you used `%%bash` that is not evident in the minimal example.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/228900454",
    "html_url": "https://github.com/jupyter/notebook/issues/1559#issuecomment-228900454",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/1559",
    "id": 228900454,
    "node_id": "MDEyOklzc3VlQ29tbWVudDIyODkwMDQ1NA==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2016-06-27T22:55:41Z",
    "updated_at": "2016-06-27T22:55:41Z",
    "author_association": "MEMBER",
    "body": "That's  will need to be migrated to ipython/ipython as this is not directly a notebook issue. \n",
    "performed_via_github_app": null
  }
]
