[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/353059899",
    "html_url": "https://github.com/jupyter/notebook/issues/3149#issuecomment-353059899",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3149",
    "id": 353059899,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzA1OTg5OQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-20T13:14:18Z",
    "updated_at": "2017-12-20T13:14:18Z",
    "author_association": "MEMBER",
    "body": "Yup, I guess that example might be a bit out of date, or oversimplified.\r\n\r\nThis is what 'trusted' means - it can load potentially dangerous output (like Javascript) without the user having to run any cells. An untrusted notebook will not be able to do that.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/353109292",
    "html_url": "https://github.com/jupyter/notebook/issues/3149#issuecomment-353109292",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3149",
    "id": 353109292,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzEwOTI5Mg==",
    "user": {
      "login": "sjdv1982",
      "id": 8017841,
      "node_id": "MDQ6VXNlcjgwMTc4NDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8017841?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sjdv1982",
      "html_url": "https://github.com/sjdv1982",
      "followers_url": "https://api.github.com/users/sjdv1982/followers",
      "following_url": "https://api.github.com/users/sjdv1982/following{/other_user}",
      "gists_url": "https://api.github.com/users/sjdv1982/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sjdv1982/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sjdv1982/subscriptions",
      "organizations_url": "https://api.github.com/users/sjdv1982/orgs",
      "repos_url": "https://api.github.com/users/sjdv1982/repos",
      "events_url": "https://api.github.com/users/sjdv1982/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sjdv1982/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-20T16:20:56Z",
    "updated_at": "2017-12-20T16:20:56Z",
    "author_association": "NONE",
    "body": "So I can rely on this feature, good to hear!\r\n\r\nBut I suppose that there are some cases where you want to have a %%javascript cell for manual triggering, like here:?\r\nhttps://github.com/jupyter/notebook/issues/1282#issuecomment-318354077",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/353113738",
    "html_url": "https://github.com/jupyter/notebook/issues/3149#issuecomment-353113738",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3149",
    "id": 353113738,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzExMzczOA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-20T16:36:16Z",
    "updated_at": "2017-12-20T16:36:16Z",
    "author_association": "MEMBER",
    "body": "If you want the user to have to run a cell manually, you can clear the output before saving. Normally, though, when you send a notebook to someone else, it won't be trusted on their system until they have run it.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/353118654",
    "html_url": "https://github.com/jupyter/notebook/issues/3149#issuecomment-353118654",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3149",
    "id": 353118654,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzExODY1NA==",
    "user": {
      "login": "sjdv1982",
      "id": 8017841,
      "node_id": "MDQ6VXNlcjgwMTc4NDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8017841?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sjdv1982",
      "html_url": "https://github.com/sjdv1982",
      "followers_url": "https://api.github.com/users/sjdv1982/followers",
      "following_url": "https://api.github.com/users/sjdv1982/following{/other_user}",
      "gists_url": "https://api.github.com/users/sjdv1982/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sjdv1982/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sjdv1982/subscriptions",
      "organizations_url": "https://api.github.com/users/sjdv1982/orgs",
      "repos_url": "https://api.github.com/users/sjdv1982/repos",
      "events_url": "https://api.github.com/users/sjdv1982/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sjdv1982/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-20T16:52:29Z",
    "updated_at": "2017-12-20T16:52:29Z",
    "author_association": "NONE",
    "body": "> If you want the user to have to run a cell manually, you can clear the output before saving\r\n\r\nOK, so the policy is:  a %%javascript cell gets executed unconditionally upon loading/reloading, except for when the output cell is missing in the notebook? \r\nAnd the same for %%html, I suppose?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/353120076",
    "html_url": "https://github.com/jupyter/notebook/issues/3149#issuecomment-353120076",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3149",
    "id": 353120076,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzEyMDA3Ng==",
    "user": {
      "login": "sjdv1982",
      "id": 8017841,
      "node_id": "MDQ6VXNlcjgwMTc4NDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8017841?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sjdv1982",
      "html_url": "https://github.com/sjdv1982",
      "followers_url": "https://api.github.com/users/sjdv1982/followers",
      "following_url": "https://api.github.com/users/sjdv1982/following{/other_user}",
      "gists_url": "https://api.github.com/users/sjdv1982/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sjdv1982/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sjdv1982/subscriptions",
      "organizations_url": "https://api.github.com/users/sjdv1982/orgs",
      "repos_url": "https://api.github.com/users/sjdv1982/repos",
      "events_url": "https://api.github.com/users/sjdv1982/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sjdv1982/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-20T16:57:12Z",
    "updated_at": "2017-12-20T16:57:12Z",
    "author_association": "NONE",
    "body": "> Normally, though, when you send a notebook to someone else, it won't be trusted on their system until they have run it.\r\n\r\nThat's OK. I am experimenting with notebooks as lightweight web servers. The kernel would run semi-permanently, on my machine.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/353125434",
    "html_url": "https://github.com/jupyter/notebook/issues/3149#issuecomment-353125434",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3149",
    "id": 353125434,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzEyNTQzNA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-20T17:16:01Z",
    "updated_at": "2017-12-20T17:16:01Z",
    "author_association": "MEMBER",
    "body": "From Jupyter's point of view, nothing is being executed when you load. The Javascript/HTML code is the output of the cell, and that's saved in the notebook file. When you load it, the output is 'displayed' on the page without going through the kernel. And displaying Javascript causes the browser to run it.\r\n\r\nApart from the trust check, Jupyter doesn't do anything special with Javascript. It's just an output format that makes things happen when it's displayed. And all a `%%javascript` cell does is send its input back as output with the metadata to say it's Javascript.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/353156492",
    "html_url": "https://github.com/jupyter/notebook/issues/3149#issuecomment-353156492",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3149",
    "id": 353156492,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzE1NjQ5Mg==",
    "user": {
      "login": "sjdv1982",
      "id": 8017841,
      "node_id": "MDQ6VXNlcjgwMTc4NDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8017841?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sjdv1982",
      "html_url": "https://github.com/sjdv1982",
      "followers_url": "https://api.github.com/users/sjdv1982/followers",
      "following_url": "https://api.github.com/users/sjdv1982/following{/other_user}",
      "gists_url": "https://api.github.com/users/sjdv1982/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sjdv1982/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sjdv1982/subscriptions",
      "organizations_url": "https://api.github.com/users/sjdv1982/orgs",
      "repos_url": "https://api.github.com/users/sjdv1982/repos",
      "events_url": "https://api.github.com/users/sjdv1982/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sjdv1982/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-20T19:15:44Z",
    "updated_at": "2017-12-20T19:15:44Z",
    "author_association": "NONE",
    "body": "Thanks for the explanation!  \r\n\r\nLet me see if I get it right.\r\n\r\n%%javascript and %%html, *in trusted mode*, are simply injected directly into the DOM when the notebook is loaded. So they are essentially **data cells** (like markdown or output cells). \r\nHowever, if they are in untrusted mode, they behave like **code cells** (even though they don't go through the kernel, of course), that have to be explicitly executed. The underlying \"execution\" mechanism  is again just a DOM injection, there is no such thing as Jupyter.eval.\r\n\r\nNormally, executing a cell puts into trusted mode afterwards (because trusted or untrusted is a feature of the *output* of a cell). \r\n\r\nSo, to make a JS or HTML cell that has a code-cell-like behavior (`%%javascript --code` or whatever the syntax ), *it has to remain in a permanently untrusted mode*.\r\n\r\nDo I understand it correctly?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/353172091",
    "html_url": "https://github.com/jupyter/notebook/issues/3149#issuecomment-353172091",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3149",
    "id": 353172091,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzE3MjA5MQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-20T20:20:15Z",
    "updated_at": "2017-12-20T20:20:15Z",
    "author_association": "MEMBER",
    "body": "Not quite.\r\n\r\n`%%javascript` and `%%html` *do* go through the kernel. They're regular code cells, it's just like calling `display(HTML('<span>...'))`. Jupyter does not do anything special with these cells (except for adjusting the syntax highlighting). The kernel sends back the contents as output with the appropriate mimetype so the browser knows what to do with it.\r\n\r\nJupyter handles this output just like it would text or images: it puts it in the page, at which point Javascript runs. Like any other output, it's saved in the notebook file. You can open a notebook file in a text editor and see the Javascript or HTML output saved along with the cell that made it.\r\n\r\nWhen you load a trusted notebook (trust affects the outputs, but it's a property of a whole notebook), the output saved in the file is put back on the page. This causes the Javascript to run again, without involving the kernel, because the Javascript is coming in from the file.\r\n\r\nWhen you load an untrusted notebook, it gets to a Javascript/HTML output and skips putting it on the page, so that that code can't run.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/353180080",
    "html_url": "https://github.com/jupyter/notebook/issues/3149#issuecomment-353180080",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3149",
    "id": 353180080,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzE4MDA4MA==",
    "user": {
      "login": "sjdv1982",
      "id": 8017841,
      "node_id": "MDQ6VXNlcjgwMTc4NDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8017841?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sjdv1982",
      "html_url": "https://github.com/sjdv1982",
      "followers_url": "https://api.github.com/users/sjdv1982/followers",
      "following_url": "https://api.github.com/users/sjdv1982/following{/other_user}",
      "gists_url": "https://api.github.com/users/sjdv1982/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sjdv1982/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sjdv1982/subscriptions",
      "organizations_url": "https://api.github.com/users/sjdv1982/orgs",
      "repos_url": "https://api.github.com/users/sjdv1982/repos",
      "events_url": "https://api.github.com/users/sjdv1982/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sjdv1982/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-20T20:55:57Z",
    "updated_at": "2017-12-20T20:55:57Z",
    "author_association": "NONE",
    "body": "Ooh... that's unexpected!  So I,  as the controller of an IPython kernel, can make the browser of the notebook execute arbitrary JS... all I have to do is to modify my %% javascript magic to do add a payload to the echo!",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/353192820",
    "html_url": "https://github.com/jupyter/notebook/issues/3149#issuecomment-353192820",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3149",
    "id": 353192820,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzE5MjgyMA==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-20T21:51:45Z",
    "updated_at": "2017-12-20T21:51:45Z",
    "author_association": "MEMBER",
    "body": "The kernel can send the browser Javascript code as the output of any cell. The model assumes that the browser trusts the kernel.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/353301971",
    "html_url": "https://github.com/jupyter/notebook/issues/3149#issuecomment-353301971",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3149",
    "id": 353301971,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzMwMTk3MQ==",
    "user": {
      "login": "sjdv1982",
      "id": 8017841,
      "node_id": "MDQ6VXNlcjgwMTc4NDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8017841?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sjdv1982",
      "html_url": "https://github.com/sjdv1982",
      "followers_url": "https://api.github.com/users/sjdv1982/followers",
      "following_url": "https://api.github.com/users/sjdv1982/following{/other_user}",
      "gists_url": "https://api.github.com/users/sjdv1982/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sjdv1982/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sjdv1982/subscriptions",
      "organizations_url": "https://api.github.com/users/sjdv1982/orgs",
      "repos_url": "https://api.github.com/users/sjdv1982/repos",
      "events_url": "https://api.github.com/users/sjdv1982/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sjdv1982/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-21T09:27:51Z",
    "updated_at": "2017-12-21T09:27:51Z",
    "author_association": "NONE",
    "body": "Yes, you are right,  obviously. I have to think of this further.  \r\n\r\nWhat I would like is to use Jupyter notebook/hub/lab eventually as a web portal,  connecting the browser to dockerized kernels. The kernel docker container will be notebook-specific (e.g IPython+Tensorflow) and potentially an external web service. I will have to think of a way to prevent untrusted kernels to access the Jupyter REST API (maybe a sandbox iframe?).\r\n\r\nThank you for your patient explanations. Jupyter is a great project! \r\n\r\n \r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/353312773",
    "html_url": "https://github.com/jupyter/notebook/issues/3149#issuecomment-353312773",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3149",
    "id": 353312773,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzMxMjc3Mw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-21T10:13:41Z",
    "updated_at": "2017-12-21T10:13:41Z",
    "author_association": "MEMBER",
    "body": "If the browser is talking to a notebook server, I don't think you can stop the user playing with the REST API. They don't need to use the kernel for that - they can open the browser's Javascript console and run code in the webpage.\r\n\r\nThere are a couple of approaches you could take:\r\n\r\n- Run the notebook server in the docker container as well, and let the user do what they like with it. This is what Jupyterhub and Binder do - the user only has access to their own notebook server, so they can't interfere with anyone else.\r\n- Run kernels without a notebook server using something like [kernel_gateway](https://github.com/jupyter/kernel_gateway/), and hook them up to web pages that don't try to load/save .ipynb files, e.g. [Thebe](https://github.com/oreillymedia/thebe) (though it looks like Thebe is unmaintained now, but a similar idea is still possible).",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/353580310",
    "html_url": "https://github.com/jupyter/notebook/issues/3149#issuecomment-353580310",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3149",
    "id": 353580310,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzU4MDMxMA==",
    "user": {
      "login": "sjdv1982",
      "id": 8017841,
      "node_id": "MDQ6VXNlcjgwMTc4NDE=",
      "avatar_url": "https://avatars.githubusercontent.com/u/8017841?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/sjdv1982",
      "html_url": "https://github.com/sjdv1982",
      "followers_url": "https://api.github.com/users/sjdv1982/followers",
      "following_url": "https://api.github.com/users/sjdv1982/following{/other_user}",
      "gists_url": "https://api.github.com/users/sjdv1982/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/sjdv1982/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/sjdv1982/subscriptions",
      "organizations_url": "https://api.github.com/users/sjdv1982/orgs",
      "repos_url": "https://api.github.com/users/sjdv1982/repos",
      "events_url": "https://api.github.com/users/sjdv1982/events{/privacy}",
      "received_events_url": "https://api.github.com/users/sjdv1982/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-22T11:31:39Z",
    "updated_at": "2017-12-22T11:31:52Z",
    "author_association": "NONE",
    "body": "Thanks again!  \r\n\r\nI don't mind if the user plays with the REST API. I am just worried about untrusted kernels: Docker will protect *my* system, but with the REST API, they could sniff or infect the user's files in Jupyter.\r\n\r\nkernel_gateway looks like what I will need. I know next to nothing about browser security, but I suppose that something like Google Caja could sanitize or sandbox the kernel responses.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/353584425",
    "html_url": "https://github.com/jupyter/notebook/issues/3149#issuecomment-353584425",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3149",
    "id": 353584425,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MzU4NDQyNQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-22T11:57:45Z",
    "updated_at": "2017-12-22T11:57:45Z",
    "author_association": "MEMBER",
    "body": "Yeah, you'd probably need to disable Javascript output entirely, and use something like Caja on HTML, Markdown and SVG output.",
    "performed_via_github_app": null
  }
]
