[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/535981801",
    "html_url": "https://github.com/jupyter/notebook/issues/4916#issuecomment-535981801",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4916",
    "id": 535981801,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNTk4MTgwMQ==",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-27T15:13:31Z",
    "updated_at": "2019-09-27T15:13:31Z",
    "author_association": "MEMBER",
    "body": "One compelling usecase from https://github.com/jupyterlab/jupyterlab/issues/835#issuecomment-535977438\r\n\r\n> If the current design is intentional, one of the problems with it is when you have hidden files. For example, it's common to clone a git repo in various projects. All of the .git directory is hidden, and so you can never delete the repo without resorting to the command line. If this is a deliberate decision, I would encourage at least a config parameter in order to allow for the deletion of non-empty folders.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/535982588",
    "html_url": "https://github.com/jupyter/notebook/issues/4916#issuecomment-535982588",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4916",
    "id": 535982588,
    "node_id": "MDEyOklzc3VlQ29tbWVudDUzNTk4MjU4OA==",
    "user": {
      "login": "jasongrout",
      "id": 192614,
      "node_id": "MDQ6VXNlcjE5MjYxNA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/192614?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/jasongrout",
      "html_url": "https://github.com/jasongrout",
      "followers_url": "https://api.github.com/users/jasongrout/followers",
      "following_url": "https://api.github.com/users/jasongrout/following{/other_user}",
      "gists_url": "https://api.github.com/users/jasongrout/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/jasongrout/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/jasongrout/subscriptions",
      "organizations_url": "https://api.github.com/users/jasongrout/orgs",
      "repos_url": "https://api.github.com/users/jasongrout/repos",
      "events_url": "https://api.github.com/users/jasongrout/events{/privacy}",
      "received_events_url": "https://api.github.com/users/jasongrout/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2019-09-27T15:15:35Z",
    "updated_at": "2019-09-27T15:15:35Z",
    "author_association": "MEMBER",
    "body": "I can imagine one way to resolve this is to have a force flag in the rest api, like the `-f` in `rm -rf`, which will delete nonempty directories. Then jlab could call without the force flag, and if there is an error, could confirm with the user and call the rest api with the force flag.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/616613014",
    "html_url": "https://github.com/jupyter/notebook/issues/4916#issuecomment-616613014",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4916",
    "id": 616613014,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYxNjYxMzAxNA==",
    "user": {
      "login": "albertmichaelj",
      "id": 5385923,
      "node_id": "MDQ6VXNlcjUzODU5MjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5385923?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/albertmichaelj",
      "html_url": "https://github.com/albertmichaelj",
      "followers_url": "https://api.github.com/users/albertmichaelj/followers",
      "following_url": "https://api.github.com/users/albertmichaelj/following{/other_user}",
      "gists_url": "https://api.github.com/users/albertmichaelj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/albertmichaelj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/albertmichaelj/subscriptions",
      "organizations_url": "https://api.github.com/users/albertmichaelj/orgs",
      "repos_url": "https://api.github.com/users/albertmichaelj/repos",
      "events_url": "https://api.github.com/users/albertmichaelj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/albertmichaelj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-04-20T15:05:02Z",
    "updated_at": "2020-04-20T15:05:02Z",
    "author_association": "NONE",
    "body": "I wanted to ping about this issue again. Is this something that maintainers might be willing to consider. This has ended up being a fairly significant problem for my use case (teaching non-sophisticated users in a JupyterHub deployment using git repositories for code distribution) due to hidden files that are very difficult to manually delete for non-sophisticated users. I'm in the process of reworking the JupyterHub deployment for the next academic year, and I would really like for the users to have an ability to delete a non-empty directory.\r\n\r\nHappy to provide any more details if needed!",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/623871163",
    "html_url": "https://github.com/jupyter/notebook/issues/4916#issuecomment-623871163",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4916",
    "id": 623871163,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyMzg3MTE2Mw==",
    "user": {
      "login": "hemangjoshi37a",
      "id": 12392345,
      "node_id": "MDQ6VXNlcjEyMzkyMzQ1",
      "avatar_url": "https://avatars.githubusercontent.com/u/12392345?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/hemangjoshi37a",
      "html_url": "https://github.com/hemangjoshi37a",
      "followers_url": "https://api.github.com/users/hemangjoshi37a/followers",
      "following_url": "https://api.github.com/users/hemangjoshi37a/following{/other_user}",
      "gists_url": "https://api.github.com/users/hemangjoshi37a/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/hemangjoshi37a/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/hemangjoshi37a/subscriptions",
      "organizations_url": "https://api.github.com/users/hemangjoshi37a/orgs",
      "repos_url": "https://api.github.com/users/hemangjoshi37a/repos",
      "events_url": "https://api.github.com/users/hemangjoshi37a/events{/privacy}",
      "received_events_url": "https://api.github.com/users/hemangjoshi37a/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-05T06:02:48Z",
    "updated_at": "2020-05-05T06:02:48Z",
    "author_association": "NONE",
    "body": "Has this been solved already??",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/629916209",
    "html_url": "https://github.com/jupyter/notebook/issues/4916#issuecomment-629916209",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4916",
    "id": 629916209,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYyOTkxNjIwOQ==",
    "user": {
      "login": "Dmitry1987",
      "id": 9369080,
      "node_id": "MDQ6VXNlcjkzNjkwODA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9369080?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dmitry1987",
      "html_url": "https://github.com/Dmitry1987",
      "followers_url": "https://api.github.com/users/Dmitry1987/followers",
      "following_url": "https://api.github.com/users/Dmitry1987/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dmitry1987/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dmitry1987/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dmitry1987/subscriptions",
      "organizations_url": "https://api.github.com/users/Dmitry1987/orgs",
      "repos_url": "https://api.github.com/users/Dmitry1987/repos",
      "events_url": "https://api.github.com/users/Dmitry1987/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dmitry1987/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-18T02:46:40Z",
    "updated_at": "2020-05-18T02:46:40Z",
    "author_association": "NONE",
    "body": "Additional dialog box for confirmation, is what many other web UIs do. A flag for command line when we start the notebook server, would be a good solution as well. Would it be accepted if a PR is sent? It's a relatively simple patch for the filemanager.py code. I am actually surprised it is not a bug but a design decision.\r\n\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/630219676",
    "html_url": "https://github.com/jupyter/notebook/issues/4916#issuecomment-630219676",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4916",
    "id": 630219676,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDIxOTY3Ng==",
    "user": {
      "login": "albertmichaelj",
      "id": 5385923,
      "node_id": "MDQ6VXNlcjUzODU5MjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5385923?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/albertmichaelj",
      "html_url": "https://github.com/albertmichaelj",
      "followers_url": "https://api.github.com/users/albertmichaelj/followers",
      "following_url": "https://api.github.com/users/albertmichaelj/following{/other_user}",
      "gists_url": "https://api.github.com/users/albertmichaelj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/albertmichaelj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/albertmichaelj/subscriptions",
      "organizations_url": "https://api.github.com/users/albertmichaelj/orgs",
      "repos_url": "https://api.github.com/users/albertmichaelj/repos",
      "events_url": "https://api.github.com/users/albertmichaelj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/albertmichaelj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-18T14:28:11Z",
    "updated_at": "2020-05-18T14:28:11Z",
    "author_association": "NONE",
    "body": "@Dmitry1987 If you put together a pull request, I am happy to help with any testing. I think the problem is that if there is a way to send files to trash (which is what #3108 seemed to be allowing) then you can delete non-empty directories. However, there is a bug in using Docker containers that use the Overlay-FS (see #3130) that means that in a Docker container, you need to set `c.FileContentsManager.delete_to_trash = False`. I think a better solution would be just a dialog box that asks if you really want to delete the directory (with language like \"This can not be undone.\") would be a better approach instead of just refusing to delete non-empty directories.\r\n\r\nAgain, I'm very happy to help with any testing/feedback if you put together a pull request!",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/630376731",
    "html_url": "https://github.com/jupyter/notebook/issues/4916#issuecomment-630376731",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4916",
    "id": 630376731,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDM3NjczMQ==",
    "user": {
      "login": "Dmitry1987",
      "id": 9369080,
      "node_id": "MDQ6VXNlcjkzNjkwODA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9369080?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dmitry1987",
      "html_url": "https://github.com/Dmitry1987",
      "followers_url": "https://api.github.com/users/Dmitry1987/followers",
      "following_url": "https://api.github.com/users/Dmitry1987/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dmitry1987/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dmitry1987/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dmitry1987/subscriptions",
      "organizations_url": "https://api.github.com/users/Dmitry1987/orgs",
      "repos_url": "https://api.github.com/users/Dmitry1987/repos",
      "events_url": "https://api.github.com/users/Dmitry1987/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dmitry1987/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-18T18:59:34Z",
    "updated_at": "2020-05-18T18:59:34Z",
    "author_association": "NONE",
    "body": "thanks for your suggestion @albertmichaelj I will try that setting to see if it works.\r\nCould you point me to the function I can use to display a dialog box and collect the response with? I might be able to make the PR with that",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/630409278",
    "html_url": "https://github.com/jupyter/notebook/issues/4916#issuecomment-630409278",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4916",
    "id": 630409278,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDQwOTI3OA==",
    "user": {
      "login": "albertmichaelj",
      "id": 5385923,
      "node_id": "MDQ6VXNlcjUzODU5MjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5385923?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/albertmichaelj",
      "html_url": "https://github.com/albertmichaelj",
      "followers_url": "https://api.github.com/users/albertmichaelj/followers",
      "following_url": "https://api.github.com/users/albertmichaelj/following{/other_user}",
      "gists_url": "https://api.github.com/users/albertmichaelj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/albertmichaelj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/albertmichaelj/subscriptions",
      "organizations_url": "https://api.github.com/users/albertmichaelj/orgs",
      "repos_url": "https://api.github.com/users/albertmichaelj/repos",
      "events_url": "https://api.github.com/users/albertmichaelj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/albertmichaelj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-18T20:09:45Z",
    "updated_at": "2020-05-18T20:09:45Z",
    "author_association": "NONE",
    "body": "Unfortunately, I have no idea what functions display dialogue boxes. If I had a better understanding of the notebook code base, I'd try a PR myself.\r\n\r\nLike I said, if I can help with testing, I'd be happy to.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/630510204",
    "html_url": "https://github.com/jupyter/notebook/issues/4916#issuecomment-630510204",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4916",
    "id": 630510204,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDUxMDIwNA==",
    "user": {
      "login": "Dmitry1987",
      "id": 9369080,
      "node_id": "MDQ6VXNlcjkzNjkwODA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9369080?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dmitry1987",
      "html_url": "https://github.com/Dmitry1987",
      "followers_url": "https://api.github.com/users/Dmitry1987/followers",
      "following_url": "https://api.github.com/users/Dmitry1987/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dmitry1987/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dmitry1987/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dmitry1987/subscriptions",
      "organizations_url": "https://api.github.com/users/Dmitry1987/orgs",
      "repos_url": "https://api.github.com/users/Dmitry1987/repos",
      "events_url": "https://api.github.com/users/Dmitry1987/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dmitry1987/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-19T00:48:59Z",
    "updated_at": "2020-05-19T00:48:59Z",
    "author_association": "NONE",
    "body": "I tried the flag of `c.FileContentsManager.delete_to_trash = False`, added it to config and restarted everything, but looks like it had no effect  :( . Seems like this is a default behavior of that function.. are you able to delete non-empty folders @albertmichaelj ? if so, mind sharing the config file sections that might be relevant as well, to that functionality?  thanks for trying to help 👍 \r\n```\r\n[W 2020-05-19 00:29:20.409 SingleUserNotebookApp handlers:236] delete /shared_disk/somefolder\r\n[W 2020-05-19 00:29:20.410 SingleUserNotebookApp web:1786] 400 DELETE /user/dima1987/api/contents/shared_disk/somefolder (xxxxxx): Directory /home/ds-team/shared_disk/somefolder not empty\r\n[W 2020-05-19 00:29:20.410 SingleUserNotebookApp handlers:620] Directory /home/ds-team/shared_disk/somefolder not empty\r\n[W 2020-05-19 00:29:20.411 SingleUserNotebookApp log:174] 400 DELETE /user/dima1987/api/contents/shared_disk/somefolder (dima1987@xxxxxxx) 2.31ms\r\n```\r\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/630511788",
    "html_url": "https://github.com/jupyter/notebook/issues/4916#issuecomment-630511788",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4916",
    "id": 630511788,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMDUxMTc4OA==",
    "user": {
      "login": "Dmitry1987",
      "id": 9369080,
      "node_id": "MDQ6VXNlcjkzNjkwODA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9369080?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dmitry1987",
      "html_url": "https://github.com/Dmitry1987",
      "followers_url": "https://api.github.com/users/Dmitry1987/followers",
      "following_url": "https://api.github.com/users/Dmitry1987/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dmitry1987/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dmitry1987/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dmitry1987/subscriptions",
      "organizations_url": "https://api.github.com/users/Dmitry1987/orgs",
      "repos_url": "https://api.github.com/users/Dmitry1987/repos",
      "events_url": "https://api.github.com/users/Dmitry1987/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dmitry1987/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-19T00:55:05Z",
    "updated_at": "2020-05-19T00:55:05Z",
    "author_association": "NONE",
    "body": "I guess the solution in my case would be just to patch the relevant file, and rebuild the notebook, each time in our CI, before it gets deployed. We run a CI that rebuilds kernels (the data team keeps a list of kernel names and the packages they'd like to have, so when they modify these files, we rebuild and redeploy it), so it can also patch the code after \"pip install ...\" of the notebook. But it'll need to be maintained alongside newer versions, and it's a pain to do every time. Maybe I can use the repo as a source instead of pip package, so it'll be patched by git command, can be a longer term solution (the patch will work for newer versions until there's a conflict in same file)",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/631657748",
    "html_url": "https://github.com/jupyter/notebook/issues/4916#issuecomment-631657748",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4916",
    "id": 631657748,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzMTY1Nzc0OA==",
    "user": {
      "login": "albertmichaelj",
      "id": 5385923,
      "node_id": "MDQ6VXNlcjUzODU5MjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5385923?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/albertmichaelj",
      "html_url": "https://github.com/albertmichaelj",
      "followers_url": "https://api.github.com/users/albertmichaelj/followers",
      "following_url": "https://api.github.com/users/albertmichaelj/following{/other_user}",
      "gists_url": "https://api.github.com/users/albertmichaelj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/albertmichaelj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/albertmichaelj/subscriptions",
      "organizations_url": "https://api.github.com/users/albertmichaelj/orgs",
      "repos_url": "https://api.github.com/users/albertmichaelj/repos",
      "events_url": "https://api.github.com/users/albertmichaelj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/albertmichaelj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-05-20T18:48:50Z",
    "updated_at": "2020-05-20T18:48:50Z",
    "author_association": "NONE",
    "body": "@Dmitry1987 You need to set `c.FileContentsManager.delete_to_trash = True` to get it to delete to trash. The default behavior is `True`, but I'm guessing that somehow it is sest to `False` in a config. Are you using the Jupyter docker notebooks by any chance? If so, it is set [here](https://github.com/jupyter/docker-stacks/blob/3b1f4f5e6cc1fd81a14bd57e805fbb25daa3063c/base-notebook/jupyter_notebook_config.py#L16).\r\n\r\nHope that helps, but as for this issue, I still think that we should be able to delete folders that aren't empty with a dialogue box.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/637128619",
    "html_url": "https://github.com/jupyter/notebook/issues/4916#issuecomment-637128619",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4916",
    "id": 637128619,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzNzEyODYxOQ==",
    "user": {
      "login": "Dmitry1987",
      "id": 9369080,
      "node_id": "MDQ6VXNlcjkzNjkwODA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9369080?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dmitry1987",
      "html_url": "https://github.com/Dmitry1987",
      "followers_url": "https://api.github.com/users/Dmitry1987/followers",
      "following_url": "https://api.github.com/users/Dmitry1987/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dmitry1987/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dmitry1987/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dmitry1987/subscriptions",
      "organizations_url": "https://api.github.com/users/Dmitry1987/orgs",
      "repos_url": "https://api.github.com/users/Dmitry1987/repos",
      "events_url": "https://api.github.com/users/Dmitry1987/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dmitry1987/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-01T21:41:29Z",
    "updated_at": "2020-06-01T21:41:29Z",
    "author_association": "NONE",
    "body": "thanks @albertmichaelj , I do use the docker versions, but I am running it on linux, if I set to \"True\" doesn't it look for windows trash bin only in windows related parts of the code?\r\n\r\nI'll try the \"True\" setting today and will post results, thanks :) ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/638719400",
    "html_url": "https://github.com/jupyter/notebook/issues/4916#issuecomment-638719400",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4916",
    "id": 638719400,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzODcxOTQwMA==",
    "user": {
      "login": "Dmitry1987",
      "id": 9369080,
      "node_id": "MDQ6VXNlcjkzNjkwODA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9369080?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dmitry1987",
      "html_url": "https://github.com/Dmitry1987",
      "followers_url": "https://api.github.com/users/Dmitry1987/followers",
      "following_url": "https://api.github.com/users/Dmitry1987/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dmitry1987/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dmitry1987/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dmitry1987/subscriptions",
      "organizations_url": "https://api.github.com/users/Dmitry1987/orgs",
      "repos_url": "https://api.github.com/users/Dmitry1987/repos",
      "events_url": "https://api.github.com/users/Dmitry1987/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dmitry1987/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-04T09:04:01Z",
    "updated_at": "2020-06-04T09:04:01Z",
    "author_association": "NONE",
    "body": "No it doesn't work :( both True/False of this setting have no effect. I'll try to patch the relevant piece of code, will share results if I have a working solution. ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/638888168",
    "html_url": "https://github.com/jupyter/notebook/issues/4916#issuecomment-638888168",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4916",
    "id": 638888168,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzODg4ODE2OA==",
    "user": {
      "login": "albertmichaelj",
      "id": 5385923,
      "node_id": "MDQ6VXNlcjUzODU5MjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5385923?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/albertmichaelj",
      "html_url": "https://github.com/albertmichaelj",
      "followers_url": "https://api.github.com/users/albertmichaelj/followers",
      "following_url": "https://api.github.com/users/albertmichaelj/following{/other_user}",
      "gists_url": "https://api.github.com/users/albertmichaelj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/albertmichaelj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/albertmichaelj/subscriptions",
      "organizations_url": "https://api.github.com/users/albertmichaelj/orgs",
      "repos_url": "https://api.github.com/users/albertmichaelj/repos",
      "events_url": "https://api.github.com/users/albertmichaelj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/albertmichaelj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-04T14:33:54Z",
    "updated_at": "2020-06-04T14:33:54Z",
    "author_association": "NONE",
    "body": "@dmikushin To be honest, I'm not sure what you're talking about. I can confirm that the following Dockerfile works fine (as in I can delete non-empty directories):\r\n\r\n``` dockerfile\r\nARG BASE_CONTAINER=jupyter/base-notebook:8e8cbd0a0af7\r\nFROM $BASE_CONTAINER\r\n\r\nRUN sed -i 's/c.FileContentsManager.delete_to_trash = False/c.FileContentsManager.delete_to_trash = True/g' /etc/jupyter/jupyter_notebook_config.py\r\n```\r\n\r\nWhile the following does not allow me to delete non-empty directories:\r\n\r\n``` dockerfile\r\nARG BASE_CONTAINER=jupyter/base-notebook:8e8cbd0a0af7\r\nFROM $BASE_CONTAINER\r\n\r\n# RUN sed -i 's/c.FileContentsManager.delete_to_trash = False/c.FileContentsManager.delete_to_trash = True/g' /etc/jupyter/jupyter_notebook_config.py\r\n```\r\n\r\nI build the containers as `test_docker`, and I run them with the following command:\r\n\r\n```\r\ndocker run -it --rm -e JUPYTER_ENABLE_LAB=yes -p 10000:8888 test_docker start-notebook.sh --NotebookApp.token=''\r\n```\r\n\r\nor \r\n\r\n```\r\ndocker run -it --rm -p 10000:8888 test_docker start-notebook.sh --NotebookApp.token=''\r\n```\r\n\r\nThis will allow you to delete folders. What issue are you running into?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/638895487",
    "html_url": "https://github.com/jupyter/notebook/issues/4916#issuecomment-638895487",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4916",
    "id": 638895487,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzODg5NTQ4Nw==",
    "user": {
      "login": "dmikushin",
      "id": 5672874,
      "node_id": "MDQ6VXNlcjU2NzI4NzQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5672874?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/dmikushin",
      "html_url": "https://github.com/dmikushin",
      "followers_url": "https://api.github.com/users/dmikushin/followers",
      "following_url": "https://api.github.com/users/dmikushin/following{/other_user}",
      "gists_url": "https://api.github.com/users/dmikushin/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/dmikushin/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/dmikushin/subscriptions",
      "organizations_url": "https://api.github.com/users/dmikushin/orgs",
      "repos_url": "https://api.github.com/users/dmikushin/repos",
      "events_url": "https://api.github.com/users/dmikushin/events{/privacy}",
      "received_events_url": "https://api.github.com/users/dmikushin/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-04T14:44:19Z",
    "updated_at": "2020-06-04T14:44:19Z",
    "author_association": "CONTRIBUTOR",
    "body": "@albertmichaelj Wrong Dmitry @Dmitry1987 ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/638896052",
    "html_url": "https://github.com/jupyter/notebook/issues/4916#issuecomment-638896052",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4916",
    "id": 638896052,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzODg5NjA1Mg==",
    "user": {
      "login": "albertmichaelj",
      "id": 5385923,
      "node_id": "MDQ6VXNlcjUzODU5MjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5385923?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/albertmichaelj",
      "html_url": "https://github.com/albertmichaelj",
      "followers_url": "https://api.github.com/users/albertmichaelj/followers",
      "following_url": "https://api.github.com/users/albertmichaelj/following{/other_user}",
      "gists_url": "https://api.github.com/users/albertmichaelj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/albertmichaelj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/albertmichaelj/subscriptions",
      "organizations_url": "https://api.github.com/users/albertmichaelj/orgs",
      "repos_url": "https://api.github.com/users/albertmichaelj/repos",
      "events_url": "https://api.github.com/users/albertmichaelj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/albertmichaelj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-04T14:45:14Z",
    "updated_at": "2020-06-04T14:45:14Z",
    "author_association": "NONE",
    "body": "Sorry @dmikushin!",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/639208942",
    "html_url": "https://github.com/jupyter/notebook/issues/4916#issuecomment-639208942",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4916",
    "id": 639208942,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzOTIwODk0Mg==",
    "user": {
      "login": "Dmitry1987",
      "id": 9369080,
      "node_id": "MDQ6VXNlcjkzNjkwODA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9369080?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dmitry1987",
      "html_url": "https://github.com/Dmitry1987",
      "followers_url": "https://api.github.com/users/Dmitry1987/followers",
      "following_url": "https://api.github.com/users/Dmitry1987/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dmitry1987/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dmitry1987/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dmitry1987/subscriptions",
      "organizations_url": "https://api.github.com/users/Dmitry1987/orgs",
      "repos_url": "https://api.github.com/users/Dmitry1987/repos",
      "events_url": "https://api.github.com/users/Dmitry1987/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dmitry1987/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-05T01:45:55Z",
    "updated_at": "2020-06-05T01:45:55Z",
    "author_association": "NONE",
    "body": "Thanks for sharing @albertmichaelj . \r\nI have a custom image, it's basically the same Dockerfile as the \"jupyter/base-notebook\" is based on, but uses a different python version because we wanted Python 3.7 to be the default in the first kernel that loads (the default environment). Maybe it was a bad idea. But the installation of notebook is the same. \r\n\r\nThe relevant part of the dockerfile is this for example \r\n```\r\n# Create NB_USER wtih name ds-team user with UID=1000 and in the 'users' group\r\n# and make sure these dirs are writable by the `users` group.\r\nRUN echo \"auth requisite pam_deny.so\" >> /etc/pam.d/su && \\\r\n    sed -i.bak -e 's/^%admin/#%admin/' /etc/sudoers && \\\r\n    sed -i.bak -e 's/^%sudo/#%sudo/' /etc/sudoers && \\\r\n    useradd -m -s /bin/bash -N -u $NB_UID $NB_USER && \\\r\n    mkdir -p /usr/local/bin/before-notebook.d && \\\r\n    mkdir -p $PYTHON_DIR && \\\r\n    chown $NB_USER:$NB_GID $PYTHON_DIR && \\\r\n    chmod g+w /etc/passwd && \\\r\n    fix-permissions $HOME && \\\r\n    fix-permissions \"$(dirname $PYTHON_DIR)\" && \\\r\n    fix-permissions /usr/local/bin/before-notebook.d\r\n\r\n\r\nRUN HOME=/root pip install \\\r\n    'notebook==6.0.0' \\\r\n    'jupyterhub==1.0.0' \\\r\n    'jupyterlab==1.2.1'\r\n\r\nUSER $NB_UID\r\nWORKDIR $HOME\r\n\r\n# Setup work directory for backward-compatibility, and the .jupyter folder for custom settings.\r\nRUN mkdir /home/$NB_USER/temp && \\\r\n    mkdir /home/$NB_USER/.jupyter\r\n\r\n# Copy custom settings for frequent autosave in UI\r\nCOPY custom.js /home/$NB_USER/.jupyter\r\n\r\nRUN fix-permissions /home/$NB_USER\r\n\r\nEXPOSE 8888\r\n\r\n# Configure container startup\r\nENTRYPOINT [\"tini\", \"-g\", \"--\"]\r\nCMD [\"start-singleuser.sh\"]\r\n\r\n```\r\n\r\nSo what runs inside is a vanilla  'notebook==6.0.0'. But the dialogue of \"directory not empty\" error gets displayed in both cases, with True/False of 'c.FileContentsManager.delete_to_trash' :( ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/639247913",
    "html_url": "https://github.com/jupyter/notebook/issues/4916#issuecomment-639247913",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4916",
    "id": 639247913,
    "node_id": "MDEyOklzc3VlQ29tbWVudDYzOTI0NzkxMw==",
    "user": {
      "login": "Dmitry1987",
      "id": 9369080,
      "node_id": "MDQ6VXNlcjkzNjkwODA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9369080?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dmitry1987",
      "html_url": "https://github.com/Dmitry1987",
      "followers_url": "https://api.github.com/users/Dmitry1987/followers",
      "following_url": "https://api.github.com/users/Dmitry1987/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dmitry1987/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dmitry1987/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dmitry1987/subscriptions",
      "organizations_url": "https://api.github.com/users/Dmitry1987/orgs",
      "repos_url": "https://api.github.com/users/Dmitry1987/repos",
      "events_url": "https://api.github.com/users/Dmitry1987/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dmitry1987/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-05T04:15:30Z",
    "updated_at": "2020-06-05T04:15:30Z",
    "author_association": "NONE",
    "body": "I inspected the image \"jupyter/base-notebook:8e8cbd0a0af7\" and saw my versions of all components are a bit older but not much. Also the fact it works in the original image with that config file, gives me a place to start investigation why it doesn't work in my custom image :) .\r\nThat's very helpful, thanks!",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/640887570",
    "html_url": "https://github.com/jupyter/notebook/issues/4916#issuecomment-640887570",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4916",
    "id": 640887570,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MDg4NzU3MA==",
    "user": {
      "login": "Dmitry1987",
      "id": 9369080,
      "node_id": "MDQ6VXNlcjkzNjkwODA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9369080?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dmitry1987",
      "html_url": "https://github.com/Dmitry1987",
      "followers_url": "https://api.github.com/users/Dmitry1987/followers",
      "following_url": "https://api.github.com/users/Dmitry1987/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dmitry1987/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dmitry1987/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dmitry1987/subscriptions",
      "organizations_url": "https://api.github.com/users/Dmitry1987/orgs",
      "repos_url": "https://api.github.com/users/Dmitry1987/repos",
      "events_url": "https://api.github.com/users/Dmitry1987/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dmitry1987/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-08T21:08:17Z",
    "updated_at": "2020-06-08T21:08:17Z",
    "author_association": "NONE",
    "body": "I ended up patching the filemanager.py :) and it works great now. Just removed the send2trash and everything windows related, it solved the issue. Maybe a bad solution but couldn't find what else is different in my docker images, it was all same python content from \"pip install notebook=6.0.3\"  🤷 ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/640899019",
    "html_url": "https://github.com/jupyter/notebook/issues/4916#issuecomment-640899019",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4916",
    "id": 640899019,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0MDg5OTAxOQ==",
    "user": {
      "login": "Dmitry1987",
      "id": 9369080,
      "node_id": "MDQ6VXNlcjkzNjkwODA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9369080?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dmitry1987",
      "html_url": "https://github.com/Dmitry1987",
      "followers_url": "https://api.github.com/users/Dmitry1987/followers",
      "following_url": "https://api.github.com/users/Dmitry1987/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dmitry1987/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dmitry1987/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dmitry1987/subscriptions",
      "organizations_url": "https://api.github.com/users/Dmitry1987/orgs",
      "repos_url": "https://api.github.com/users/Dmitry1987/repos",
      "events_url": "https://api.github.com/users/Dmitry1987/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dmitry1987/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-08T21:32:21Z",
    "updated_at": "2020-06-08T21:32:21Z",
    "author_association": "NONE",
    "body": "just in case someone wants to patch it same way:\r\n```\r\n    def delete_file(self, path):\r\n        \"\"\"Delete file at path.\"\"\"\r\n        path = path.strip('/')\r\n        os_path = self._get_os_path(path)\r\n        rm = os.unlink\r\n        if not os.path.exists(os_path):\r\n            raise web.HTTPError(404, u'File or directory does not exist: %s' % os_path)\r\n\r\n        if os.path.isdir(os_path):\r\n            self.log.debug(\"Removing directory %s\", os_path)\r\n            with self.perm_to_403():\r\n                shutil.rmtree(os_path)\r\n        else:\r\n            self.log.debug(\"Unlinking file %s\", os_path)\r\n            with self.perm_to_403():\r\n                rm(os_path)\r\n```\r\nthis will do it (UI confirmation box still exists, asks whether you want to delete the folder, seems good enough to me).",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/647733816",
    "html_url": "https://github.com/jupyter/notebook/issues/4916#issuecomment-647733816",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4916",
    "id": 647733816,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0NzczMzgxNg==",
    "user": {
      "login": "albertmichaelj",
      "id": 5385923,
      "node_id": "MDQ6VXNlcjUzODU5MjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5385923?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/albertmichaelj",
      "html_url": "https://github.com/albertmichaelj",
      "followers_url": "https://api.github.com/users/albertmichaelj/followers",
      "following_url": "https://api.github.com/users/albertmichaelj/following{/other_user}",
      "gists_url": "https://api.github.com/users/albertmichaelj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/albertmichaelj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/albertmichaelj/subscriptions",
      "organizations_url": "https://api.github.com/users/albertmichaelj/orgs",
      "repos_url": "https://api.github.com/users/albertmichaelj/repos",
      "events_url": "https://api.github.com/users/albertmichaelj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/albertmichaelj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-22T19:44:33Z",
    "updated_at": "2020-06-22T19:44:33Z",
    "author_association": "NONE",
    "body": "@Dmitry1987 I am in the process of updating my JupyterHub configuration, and I discovered that my fix that I gave you wasn't actually working when deployed. The docker container that I showed in https://github.com/jupyter/notebook/issues/4916#issuecomment-638888168 works fine for deleting folders when I'm using docker on my local machine (a Mac), but when I deployed it to a kubernetes cluster (for JupyterHub on Kubernetes), I couldn't delete folders. For some reason, the config `c.FileContentsManager.delete_to_trash = True` was not being respected.\r\n\r\nI ended up using the notebook argument `--FileContentsManager.delete_to_trash = True` at launch time. For the Jupyter Docker Stacks images, you can set this with the environmental variable `NOTEBOOK_ARGS`. When I did that it worked fine. I cannot figure out why their is a difference between whether or not that config gets set based on whether or not I'm launching the docker container locally or on a JupyterHub kubernetes based deployment, but there it is.\r\n\r\nThis might be an easier path forward for you instead of patching the notebook files.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/647779486",
    "html_url": "https://github.com/jupyter/notebook/issues/4916#issuecomment-647779486",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4916",
    "id": 647779486,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY0Nzc3OTQ4Ng==",
    "user": {
      "login": "Dmitry1987",
      "id": 9369080,
      "node_id": "MDQ6VXNlcjkzNjkwODA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9369080?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dmitry1987",
      "html_url": "https://github.com/Dmitry1987",
      "followers_url": "https://api.github.com/users/Dmitry1987/followers",
      "following_url": "https://api.github.com/users/Dmitry1987/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dmitry1987/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dmitry1987/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dmitry1987/subscriptions",
      "organizations_url": "https://api.github.com/users/Dmitry1987/orgs",
      "repos_url": "https://api.github.com/users/Dmitry1987/repos",
      "events_url": "https://api.github.com/users/Dmitry1987/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dmitry1987/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-06-22T21:30:26Z",
    "updated_at": "2020-06-22T21:30:26Z",
    "author_association": "NONE",
    "body": "the CLI flag is a good option, thanks for sharing 👍 ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/661261312",
    "html_url": "https://github.com/jupyter/notebook/issues/4916#issuecomment-661261312",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4916",
    "id": 661261312,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2MTI2MTMxMg==",
    "user": {
      "login": "perllaghu",
      "id": 1478924,
      "node_id": "MDQ6VXNlcjE0Nzg5MjQ=",
      "avatar_url": "https://avatars.githubusercontent.com/u/1478924?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/perllaghu",
      "html_url": "https://github.com/perllaghu",
      "followers_url": "https://api.github.com/users/perllaghu/followers",
      "following_url": "https://api.github.com/users/perllaghu/following{/other_user}",
      "gists_url": "https://api.github.com/users/perllaghu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/perllaghu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/perllaghu/subscriptions",
      "organizations_url": "https://api.github.com/users/perllaghu/orgs",
      "repos_url": "https://api.github.com/users/perllaghu/repos",
      "events_url": "https://api.github.com/users/perllaghu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/perllaghu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-20T18:33:31Z",
    "updated_at": "2020-07-20T18:35:29Z",
    "author_association": "NONE",
    "body": "@Dmitry1987 - I ended up writing this to get round the problem...  https://github.com/edina/nb_empty_trash\r\n\r\nSet `c.FileContentsManager.delete_to_trash = True` and install the extension.\r\n\r\n_seems_ to be working for me (docker images in a k8s cluster)\r\n\r\n(but note, this is for _classic_ notebook, not _jupyterlab_ - but I'm sure someone could fork & adapt :) )",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/661513023",
    "html_url": "https://github.com/jupyter/notebook/issues/4916#issuecomment-661513023",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4916",
    "id": 661513023,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2MTUxMzAyMw==",
    "user": {
      "login": "Dmitry1987",
      "id": 9369080,
      "node_id": "MDQ6VXNlcjkzNjkwODA=",
      "avatar_url": "https://avatars.githubusercontent.com/u/9369080?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dmitry1987",
      "html_url": "https://github.com/Dmitry1987",
      "followers_url": "https://api.github.com/users/Dmitry1987/followers",
      "following_url": "https://api.github.com/users/Dmitry1987/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dmitry1987/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dmitry1987/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dmitry1987/subscriptions",
      "organizations_url": "https://api.github.com/users/Dmitry1987/orgs",
      "repos_url": "https://api.github.com/users/Dmitry1987/repos",
      "events_url": "https://api.github.com/users/Dmitry1987/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dmitry1987/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-07-21T01:01:15Z",
    "updated_at": "2020-07-21T01:01:15Z",
    "author_association": "NONE",
    "body": "nice work @perllaghu , I hope it helps others who find this thread, our hacks and plugins :)))",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/669184236",
    "html_url": "https://github.com/jupyter/notebook/issues/4916#issuecomment-669184236",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4916",
    "id": 669184236,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY2OTE4NDIzNg==",
    "user": {
      "login": "albertmichaelj",
      "id": 5385923,
      "node_id": "MDQ6VXNlcjUzODU5MjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5385923?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/albertmichaelj",
      "html_url": "https://github.com/albertmichaelj",
      "followers_url": "https://api.github.com/users/albertmichaelj/followers",
      "following_url": "https://api.github.com/users/albertmichaelj/following{/other_user}",
      "gists_url": "https://api.github.com/users/albertmichaelj/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/albertmichaelj/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/albertmichaelj/subscriptions",
      "organizations_url": "https://api.github.com/users/albertmichaelj/orgs",
      "repos_url": "https://api.github.com/users/albertmichaelj/repos",
      "events_url": "https://api.github.com/users/albertmichaelj/events{/privacy}",
      "received_events_url": "https://api.github.com/users/albertmichaelj/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-05T13:10:39Z",
    "updated_at": "2020-08-05T13:10:39Z",
    "author_association": "NONE",
    "body": "@Dmitry1987 Just an FYI, I ended up using your patch technique because I ran into another problem with having symlinks in the home folder to other mount locations. Thanks for the patch!",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/738830765",
    "html_url": "https://github.com/jupyter/notebook/issues/4916#issuecomment-738830765",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4916",
    "id": 738830765,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczODgzMDc2NQ==",
    "user": {
      "login": "tlvu",
      "id": 11966697,
      "node_id": "MDQ6VXNlcjExOTY2Njk3",
      "avatar_url": "https://avatars.githubusercontent.com/u/11966697?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/tlvu",
      "html_url": "https://github.com/tlvu",
      "followers_url": "https://api.github.com/users/tlvu/followers",
      "following_url": "https://api.github.com/users/tlvu/following{/other_user}",
      "gists_url": "https://api.github.com/users/tlvu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/tlvu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/tlvu/subscriptions",
      "organizations_url": "https://api.github.com/users/tlvu/orgs",
      "repos_url": "https://api.github.com/users/tlvu/repos",
      "events_url": "https://api.github.com/users/tlvu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/tlvu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-04T14:59:43Z",
    "updated_at": "2020-12-04T14:59:43Z",
    "author_association": "NONE",
    "body": "> just in case someone wants to patch it same way:\r\n> \r\n> ```\r\n>     def delete_file(self, path):\r\n>         \"\"\"Delete file at path.\"\"\"\r\n>         path = path.strip('/')\r\n>         os_path = self._get_os_path(path)\r\n>         rm = os.unlink\r\n>         if not os.path.exists(os_path):\r\n>             raise web.HTTPError(404, u'File or directory does not exist: %s' % os_path)\r\n> \r\n>         if os.path.isdir(os_path):\r\n>             self.log.debug(\"Removing directory %s\", os_path)\r\n>             with self.perm_to_403():\r\n>                 shutil.rmtree(os_path)\r\n>         else:\r\n>             self.log.debug(\"Unlinking file %s\", os_path)\r\n>             with self.perm_to_403():\r\n>                 rm(os_path)\r\n> ```\r\n> \r\n> this will do it (UI confirmation box still exists, asks whether you want to delete the folder, seems good enough to me).\r\n\r\n@Dmitry1987 Thanks for the patch, I am interested as well.  This is the patch for which file?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/738962495",
    "html_url": "https://github.com/jupyter/notebook/issues/4916#issuecomment-738962495",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4916",
    "id": 738962495,
    "node_id": "MDEyOklzc3VlQ29tbWVudDczODk2MjQ5NQ==",
    "user": {
      "login": "thakkarparth007",
      "id": 747423,
      "node_id": "MDQ6VXNlcjc0NzQyMw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/747423?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/thakkarparth007",
      "html_url": "https://github.com/thakkarparth007",
      "followers_url": "https://api.github.com/users/thakkarparth007/followers",
      "following_url": "https://api.github.com/users/thakkarparth007/following{/other_user}",
      "gists_url": "https://api.github.com/users/thakkarparth007/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/thakkarparth007/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/thakkarparth007/subscriptions",
      "organizations_url": "https://api.github.com/users/thakkarparth007/orgs",
      "repos_url": "https://api.github.com/users/thakkarparth007/repos",
      "events_url": "https://api.github.com/users/thakkarparth007/events{/privacy}",
      "received_events_url": "https://api.github.com/users/thakkarparth007/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-12-04T19:05:52Z",
    "updated_at": "2020-12-04T19:05:52Z",
    "author_association": "NONE",
    "body": "Pinging on this issue again. Can someone please fix this? The original issue started in the Jupyter Lab repo 4 years ago (https://github.com/jupyterlab/jupyterlab/issues/835)",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/760217670",
    "html_url": "https://github.com/jupyter/notebook/issues/4916#issuecomment-760217670",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4916",
    "id": 760217670,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc2MDIxNzY3MA==",
    "user": {
      "login": "FernandezMathieu",
      "id": 61463398,
      "node_id": "MDQ6VXNlcjYxNDYzMzk4",
      "avatar_url": "https://avatars.githubusercontent.com/u/61463398?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/FernandezMathieu",
      "html_url": "https://github.com/FernandezMathieu",
      "followers_url": "https://api.github.com/users/FernandezMathieu/followers",
      "following_url": "https://api.github.com/users/FernandezMathieu/following{/other_user}",
      "gists_url": "https://api.github.com/users/FernandezMathieu/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/FernandezMathieu/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/FernandezMathieu/subscriptions",
      "organizations_url": "https://api.github.com/users/FernandezMathieu/orgs",
      "repos_url": "https://api.github.com/users/FernandezMathieu/repos",
      "events_url": "https://api.github.com/users/FernandezMathieu/events{/privacy}",
      "received_events_url": "https://api.github.com/users/FernandezMathieu/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-01-14T14:05:51Z",
    "updated_at": "2021-01-14T14:05:51Z",
    "author_association": "NONE",
    "body": "I got the same need here, i'll look if i can find something to fix that.  \r\nMeanwhile, anyone has an update on this issue ? Look like everyone dropped the deal. ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/781946308",
    "html_url": "https://github.com/jupyter/notebook/issues/4916#issuecomment-781946308",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4916",
    "id": 781946308,
    "node_id": "MDEyOklzc3VlQ29tbWVudDc4MTk0NjMwOA==",
    "user": {
      "login": "gauravcdac",
      "id": 14068391,
      "node_id": "MDQ6VXNlcjE0MDY4Mzkx",
      "avatar_url": "https://avatars.githubusercontent.com/u/14068391?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gauravcdac",
      "html_url": "https://github.com/gauravcdac",
      "followers_url": "https://api.github.com/users/gauravcdac/followers",
      "following_url": "https://api.github.com/users/gauravcdac/following{/other_user}",
      "gists_url": "https://api.github.com/users/gauravcdac/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gauravcdac/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gauravcdac/subscriptions",
      "organizations_url": "https://api.github.com/users/gauravcdac/orgs",
      "repos_url": "https://api.github.com/users/gauravcdac/repos",
      "events_url": "https://api.github.com/users/gauravcdac/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gauravcdac/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-02-19T09:18:16Z",
    "updated_at": "2021-02-19T09:18:16Z",
    "author_association": "NONE",
    "body": "> > just in case someone wants to patch it same way:\r\n> > ```\r\n> >     def delete_file(self, path):\r\n> >         \"\"\"Delete file at path.\"\"\"\r\n> >         path = path.strip('/')\r\n> >         os_path = self._get_os_path(path)\r\n> >         rm = os.unlink\r\n> >         if not os.path.exists(os_path):\r\n> >             raise web.HTTPError(404, u'File or directory does not exist: %s' % os_path)\r\n> > \r\n> >         if os.path.isdir(os_path):\r\n> >             self.log.debug(\"Removing directory %s\", os_path)\r\n> >             with self.perm_to_403():\r\n> >                 shutil.rmtree(os_path)\r\n> >         else:\r\n> >             self.log.debug(\"Unlinking file %s\", os_path)\r\n> >             with self.perm_to_403():\r\n> >                 rm(os_path)\r\n> > ```\r\n> > \r\n> > \r\n> > this will do it (UI confirmation box still exists, asks whether you want to delete the folder, seems good enough to me).\r\n> \r\n> @Dmitry1987 Thanks for the patch... Just want to know in which file we can add this patch...",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/809535454",
    "html_url": "https://github.com/jupyter/notebook/issues/4916#issuecomment-809535454",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/4916",
    "id": 809535454,
    "node_id": "MDEyOklzc3VlQ29tbWVudDgwOTUzNTQ1NA==",
    "user": {
      "login": "meeseeksmachine",
      "id": 39504233,
      "node_id": "MDQ6VXNlcjM5NTA0MjMz",
      "avatar_url": "https://avatars.githubusercontent.com/u/39504233?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/meeseeksmachine",
      "html_url": "https://github.com/meeseeksmachine",
      "followers_url": "https://api.github.com/users/meeseeksmachine/followers",
      "following_url": "https://api.github.com/users/meeseeksmachine/following{/other_user}",
      "gists_url": "https://api.github.com/users/meeseeksmachine/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/meeseeksmachine/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/meeseeksmachine/subscriptions",
      "organizations_url": "https://api.github.com/users/meeseeksmachine/orgs",
      "repos_url": "https://api.github.com/users/meeseeksmachine/repos",
      "events_url": "https://api.github.com/users/meeseeksmachine/events{/privacy}",
      "received_events_url": "https://api.github.com/users/meeseeksmachine/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2021-03-29T16:45:10Z",
    "updated_at": "2021-03-29T16:45:10Z",
    "author_association": "NONE",
    "body": "This issue has been mentioned on **Jupyter Community Forum**. There might be relevant details there:\n\nhttps://discourse.jupyter.org/t/jupyterhub-not-allowing-to-delete-non-empty-directory/8539/1\n",
    "performed_via_github_app": null
  }
]
