[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/133155905",
    "html_url": "https://github.com/jupyter/notebook/issues/320#issuecomment-133155905",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/320",
    "id": 133155905,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzE1NTkwNQ==",
    "user": {
      "login": "Carreau",
      "id": 335567,
      "node_id": "MDQ6VXNlcjMzNTU2Nw==",
      "avatar_url": "https://avatars.githubusercontent.com/u/335567?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Carreau",
      "html_url": "https://github.com/Carreau",
      "followers_url": "https://api.github.com/users/Carreau/followers",
      "following_url": "https://api.github.com/users/Carreau/following{/other_user}",
      "gists_url": "https://api.github.com/users/Carreau/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Carreau/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Carreau/subscriptions",
      "organizations_url": "https://api.github.com/users/Carreau/orgs",
      "repos_url": "https://api.github.com/users/Carreau/repos",
      "events_url": "https://api.github.com/users/Carreau/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Carreau/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-20T20:04:27Z",
    "updated_at": "2015-08-20T20:04:27Z",
    "author_association": "MEMBER",
    "body": "You are hitting one of the problem we have for a long time now. \nHow do you do that if server and kernel are on different machines ?\nHow do you deal with that on upgrade ?\nHow do you allow different kernel to expose differents file ?\n\nWe lack manpower to tackle these kind of issues, and actual people that have experience in javascript, and actual use case. We would be happy to discuss the need and constraint.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/133158358",
    "html_url": "https://github.com/jupyter/notebook/issues/320#issuecomment-133158358",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/320",
    "id": 133158358,
    "node_id": "MDEyOklzc3VlQ29tbWVudDEzMzE1ODM1OA==",
    "user": {
      "login": "shashi",
      "id": 25916,
      "node_id": "MDQ6VXNlcjI1OTE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/25916?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shashi",
      "html_url": "https://github.com/shashi",
      "followers_url": "https://api.github.com/users/shashi/followers",
      "following_url": "https://api.github.com/users/shashi/following{/other_user}",
      "gists_url": "https://api.github.com/users/shashi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shashi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shashi/subscriptions",
      "organizations_url": "https://api.github.com/users/shashi/orgs",
      "repos_url": "https://api.github.com/users/shashi/repos",
      "events_url": "https://api.github.com/users/shashi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shashi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2015-08-20T20:15:04Z",
    "updated_at": "2015-08-20T20:16:03Z",
    "author_association": "NONE",
    "body": "> How do you do that if server and kernel are on different machines ?\n\nOh wow, I didn't know that's possible. What about just letting this work for the others who have kernel and server on the same machine and throwing a warning otherwise?\n\n> How do you deal with that on upgrade ?\n\nWhen the package registering the static directory upgrades, it can also serve new files right? Was that the question?\n\n> How do you allow different kernel to expose differents file ?\n\nThat's a good point. I think one could have a message where the kernel sends Jupyter a request to serve a directory / a file and Jupyter returns a URL of the form `/kernel_static/<UUID>` where the static files get served from.\n\n> We lack manpower to tackle these kind of issues, and actual people that have experience in javascript, and actual use case.\n\nWe do have an actual use case (see the IJulia issue referenced above). And I think between @rohitvarkey and I we can figure out how to do this if everyone agrees on a design.\n",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/350108706",
    "html_url": "https://github.com/jupyter/notebook/issues/320#issuecomment-350108706",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/320",
    "id": 350108706,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDEwODcwNg==",
    "user": {
      "login": "gnestor",
      "id": 512354,
      "node_id": "MDQ6VXNlcjUxMjM1NA==",
      "avatar_url": "https://avatars.githubusercontent.com/u/512354?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gnestor",
      "html_url": "https://github.com/gnestor",
      "followers_url": "https://api.github.com/users/gnestor/followers",
      "following_url": "https://api.github.com/users/gnestor/following{/other_user}",
      "gists_url": "https://api.github.com/users/gnestor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gnestor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gnestor/subscriptions",
      "organizations_url": "https://api.github.com/users/gnestor/orgs",
      "repos_url": "https://api.github.com/users/gnestor/repos",
      "events_url": "https://api.github.com/users/gnestor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gnestor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-07T22:04:56Z",
    "updated_at": "2017-12-07T22:04:56Z",
    "author_association": "CONTRIBUTOR",
    "body": "@shashi Any update on this one? Can we close?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/350124913",
    "html_url": "https://github.com/jupyter/notebook/issues/320#issuecomment-350124913",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/320",
    "id": 350124913,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM1MDEyNDkxMw==",
    "user": {
      "login": "shashi",
      "id": 25916,
      "node_id": "MDQ6VXNlcjI1OTE2",
      "avatar_url": "https://avatars.githubusercontent.com/u/25916?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/shashi",
      "html_url": "https://github.com/shashi",
      "followers_url": "https://api.github.com/users/shashi/followers",
      "following_url": "https://api.github.com/users/shashi/following{/other_user}",
      "gists_url": "https://api.github.com/users/shashi/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/shashi/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/shashi/subscriptions",
      "organizations_url": "https://api.github.com/users/shashi/orgs",
      "repos_url": "https://api.github.com/users/shashi/repos",
      "events_url": "https://api.github.com/users/shashi/events{/privacy}",
      "received_events_url": "https://api.github.com/users/shashi/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-07T23:20:00Z",
    "updated_at": "2017-12-07T23:20:00Z",
    "author_association": "NONE",
    "body": "I'm not sure if there were updates regarding this. I think a good way to do this is via a plugin...",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/408588141",
    "html_url": "https://github.com/jupyter/notebook/issues/320#issuecomment-408588141",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/320",
    "id": 408588141,
    "node_id": "MDEyOklzc3VlQ29tbWVudDQwODU4ODE0MQ==",
    "user": {
      "login": "akloster",
      "id": 171319,
      "node_id": "MDQ6VXNlcjE3MTMxOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/171319?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/akloster",
      "html_url": "https://github.com/akloster",
      "followers_url": "https://api.github.com/users/akloster/followers",
      "following_url": "https://api.github.com/users/akloster/following{/other_user}",
      "gists_url": "https://api.github.com/users/akloster/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/akloster/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/akloster/subscriptions",
      "organizations_url": "https://api.github.com/users/akloster/orgs",
      "repos_url": "https://api.github.com/users/akloster/repos",
      "events_url": "https://api.github.com/users/akloster/events{/privacy}",
      "received_events_url": "https://api.github.com/users/akloster/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-07-28T07:06:38Z",
    "updated_at": "2018-07-28T07:06:38Z",
    "author_association": "NONE",
    "body": "I have run into this issue also a couple of times. Some of this can be stated as the general problem of transferring data to the browser.\r\n\r\nFor individual kernels:\r\n- images can be transferred as data  URIs\r\n- comm messages can be used, with or without messages. The drawback is that binary data has to be escaped and coded to fit into the \"json over websocket\" paradigm\r\n- The kernel can output html/javascript code which then can be executed or picked up by the front-side code. Same problem about encoding, and additionally the kernel can't really control where in the notebook the output is going.\r\n- Use Tornado or Asyncio to run your own server, optionally in another thread. No encoding problems, can implement any REST API it wants, even additional websockets. The problem here is the additional port that needs to be opened and managed. It's not trivial for the kernel to figure out under which IP address this port is accessible.\r\n\r\nIn my opinion, using comm messages is the best method, because it requires no additional configuration. Sometimes though, this isn't possible, or very difficult, because certain Javascript APIs aren't flexible enough to take data from other front-side code, or it would be too complicated to convert them from a REST API.\r\n\r\nA notebook extension could act as a reverse proxy to the kernel's HTTP server. The notebook server would provide a URL base and forward the requests. This would solve problems about ports and addresses. It would be tricky to support advanced HTTP features like websockets or audio/video streaming, but these would also be possible.",
    "performed_via_github_app": null
  }
]
