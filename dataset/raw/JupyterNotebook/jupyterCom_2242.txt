[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/283335505",
    "html_url": "https://github.com/jupyter/notebook/issues/2242#issuecomment-283335505",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2242",
    "id": 283335505,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzMzNTUwNQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-01T13:10:30Z",
    "updated_at": "2017-03-01T13:10:30Z",
    "author_association": "MEMBER",
    "body": "You could probably make a custom kernel that doesn't support that extra syntax, but it doesn't work as a security measure - normal Python code can do anything you can do with a shell command. If you're trying to protect the system from users, it's a better bet to run users' notebook servers in containers (e.g. using Docker).",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/283365865",
    "html_url": "https://github.com/jupyter/notebook/issues/2242#issuecomment-283365865",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2242",
    "id": 283365865,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzM2NTg2NQ==",
    "user": {
      "login": "xiapoy",
      "id": 12005605,
      "node_id": "MDQ6VXNlcjEyMDA1NjA1",
      "avatar_url": "https://avatars.githubusercontent.com/u/12005605?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/xiapoy",
      "html_url": "https://github.com/xiapoy",
      "followers_url": "https://api.github.com/users/xiapoy/followers",
      "following_url": "https://api.github.com/users/xiapoy/following{/other_user}",
      "gists_url": "https://api.github.com/users/xiapoy/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/xiapoy/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/xiapoy/subscriptions",
      "organizations_url": "https://api.github.com/users/xiapoy/orgs",
      "repos_url": "https://api.github.com/users/xiapoy/repos",
      "events_url": "https://api.github.com/users/xiapoy/events{/privacy}",
      "received_events_url": "https://api.github.com/users/xiapoy/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-01T15:08:57Z",
    "updated_at": "2017-03-08T20:05:50Z",
    "author_association": "NONE",
    "body": "I run jupyterhub on Docker. I changed my users shell to a limited one (`lshell`). The jupyter terminal opens the `lshell` but the users can still run `sh` commands within the notebook (the shell backend seems to be setup to `/bin/sh`). Ideally, I would like that backend to be setup to `lshell` as well. Is it possible?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/283369629",
    "html_url": "https://github.com/jupyter/notebook/issues/2242#issuecomment-283369629",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2242",
    "id": 283369629,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4MzM2OTYyOQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-01T15:21:11Z",
    "updated_at": "2017-03-01T15:21:11Z",
    "author_association": "MEMBER",
    "body": "At present, no, but I think we'd probably accept a PR for that to follow the `$SHELL` environment variable. The relevant code is here: https://github.com/ipython/ipython/blob/master/IPython/utils/_process_posix.py#L61",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/284198777",
    "html_url": "https://github.com/jupyter/notebook/issues/2242#issuecomment-284198777",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2242",
    "id": 284198777,
    "node_id": "MDEyOklzc3VlQ29tbWVudDI4NDE5ODc3Nw==",
    "user": {
      "login": "minrk",
      "id": 151929,
      "node_id": "MDQ6VXNlcjE1MTkyOQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/151929?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/minrk",
      "html_url": "https://github.com/minrk",
      "followers_url": "https://api.github.com/users/minrk/followers",
      "following_url": "https://api.github.com/users/minrk/following{/other_user}",
      "gists_url": "https://api.github.com/users/minrk/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/minrk/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/minrk/subscriptions",
      "organizations_url": "https://api.github.com/users/minrk/orgs",
      "repos_url": "https://api.github.com/users/minrk/repos",
      "events_url": "https://api.github.com/users/minrk/events{/privacy}",
      "received_events_url": "https://api.github.com/users/minrk/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-03-05T01:49:33Z",
    "updated_at": "2017-03-05T01:49:33Z",
    "author_association": "MEMBER",
    "body": "@naileakim unless you are running a *heavily* modified IPython, users are going to be able to run shell commands via Python APIs, e.g. `subprocess.Popen(['bash', '-c', '...'])`. Locking down `!` doesn't prevent execution of arbitrary code.\r\n\r\nIf you want to only disable `!`, you can override the `system` method on the InteractiveShell object:\r\n\r\n```python\r\nIn [11]: !ls\r\nfiles\r\n\r\nIn [12]: get_ipython().system = lambda *args: print('! is disabled!')\r\n\r\nIn [13]: !ls\r\n! is disabled!\r\n```",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/315409386",
    "html_url": "https://github.com/jupyter/notebook/issues/2242#issuecomment-315409386",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2242",
    "id": 315409386,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTQwOTM4Ng==",
    "user": {
      "login": "alivcor",
      "id": 12253342,
      "node_id": "MDQ6VXNlcjEyMjUzMzQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/12253342?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alivcor",
      "html_url": "https://github.com/alivcor",
      "followers_url": "https://api.github.com/users/alivcor/followers",
      "following_url": "https://api.github.com/users/alivcor/following{/other_user}",
      "gists_url": "https://api.github.com/users/alivcor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alivcor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alivcor/subscriptions",
      "organizations_url": "https://api.github.com/users/alivcor/orgs",
      "repos_url": "https://api.github.com/users/alivcor/repos",
      "events_url": "https://api.github.com/users/alivcor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alivcor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-14T16:51:35Z",
    "updated_at": "2017-07-14T16:51:35Z",
    "author_association": "NONE",
    "body": "Is there a way to filter (regex etc) before running the code in a cell ? If that is so, we can apply a patch and see if the user is trying any imports relevant to os/system. ",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/315518855",
    "html_url": "https://github.com/jupyter/notebook/issues/2242#issuecomment-315518855",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2242",
    "id": 315518855,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTUxODg1NQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-15T08:20:05Z",
    "updated_at": "2017-07-15T08:20:05Z",
    "author_association": "MEMBER",
    "body": "Locking down Python that way is really hard, because it's a very flexible language and there are a lot of ways around simple restrictions. E.g. if you block `import os`, I might still be able to do `__import__('os')`. There are a lot of things like that, and trying to lock them all down will probably make it very hard to do anything useful.\r\n\r\nIf you want to provide Python execution for untrusted users, a better way is to do it in some kind of container or VM sandbox, and then let them run any code they want.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/315555316",
    "html_url": "https://github.com/jupyter/notebook/issues/2242#issuecomment-315555316",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2242",
    "id": 315555316,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTU1NTMxNg==",
    "user": {
      "login": "alivcor",
      "id": 12253342,
      "node_id": "MDQ6VXNlcjEyMjUzMzQy",
      "avatar_url": "https://avatars.githubusercontent.com/u/12253342?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/alivcor",
      "html_url": "https://github.com/alivcor",
      "followers_url": "https://api.github.com/users/alivcor/followers",
      "following_url": "https://api.github.com/users/alivcor/following{/other_user}",
      "gists_url": "https://api.github.com/users/alivcor/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/alivcor/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/alivcor/subscriptions",
      "organizations_url": "https://api.github.com/users/alivcor/orgs",
      "repos_url": "https://api.github.com/users/alivcor/repos",
      "events_url": "https://api.github.com/users/alivcor/events{/privacy}",
      "received_events_url": "https://api.github.com/users/alivcor/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-15T19:07:18Z",
    "updated_at": "2017-07-15T19:07:18Z",
    "author_association": "NONE",
    "body": "Thanks for your response @takluyver \r\n\r\nYeah, locking down that way would be hard. The problem I'm facing is that I can't dockerize/containerize it because I need to configure it for an enterprise, and several access / bureaucratic issues if I go down that route. \r\n\r\nIn my case, luckily the end users would be people with less programming background and hub service won't be exposed to the outside world. So I was thinking of doing some patching (regex etc on the code) before it even runs ! \r\n\r\nTo do so, any ideas which files I could modify ? Any help would be highly appreciated !",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/315597177",
    "html_url": "https://github.com/jupyter/notebook/issues/2242#issuecomment-315597177",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/2242",
    "id": 315597177,
    "node_id": "MDEyOklzc3VlQ29tbWVudDMxNTU5NzE3Nw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-07-16T09:31:55Z",
    "updated_at": "2017-07-16T09:31:55Z",
    "author_association": "MEMBER",
    "body": "I really don't recommend that. Regex-munging code is not going to give you any meaningful security, and it's going to be an annoying mess to maintain. Sorry, but I'm not going to provide instructions for something that seems very clearly a bad idea.",
    "performed_via_github_app": null
  }
]
