[
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/348549723",
    "html_url": "https://github.com/jupyter/notebook/issues/3101#issuecomment-348549723",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3101",
    "id": 348549723,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODU0OTcyMw==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-01T17:01:22Z",
    "updated_at": "2017-12-01T17:01:22Z",
    "author_association": "MEMBER",
    "body": "The kernel does not know about the notebook document structure (this is a deliberate design decision). What you're getting with `In` and other such variables is the execution history.\r\n\r\nYou can get the raw version of the full execution history from `get_ipython().history_manager.input_hist_raw`.\r\n\r\nYou may have more luck with Javascript, because the Javascript does have access to the notebook document structure. Try e.g. `Jupyter.notebook.get_cells()`.\r\n\r\nIf it's practical to work with the notebook as a file rather than working from inside the notebook's kernel, you can do this readily with Python using the [nbformat package](http://nbformat.readthedocs.io/en/latest/api.html).",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/348565415",
    "html_url": "https://github.com/jupyter/notebook/issues/3101#issuecomment-348565415",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3101",
    "id": 348565415,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODU2NTQxNQ==",
    "user": {
      "login": "wstomv",
      "id": 5611123,
      "node_id": "MDQ6VXNlcjU2MTExMjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5611123?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wstomv",
      "html_url": "https://github.com/wstomv",
      "followers_url": "https://api.github.com/users/wstomv/followers",
      "following_url": "https://api.github.com/users/wstomv/following{/other_user}",
      "gists_url": "https://api.github.com/users/wstomv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wstomv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wstomv/subscriptions",
      "organizations_url": "https://api.github.com/users/wstomv/orgs",
      "repos_url": "https://api.github.com/users/wstomv/repos",
      "events_url": "https://api.github.com/users/wstomv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wstomv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-01T18:04:24Z",
    "updated_at": "2017-12-01T18:04:24Z",
    "author_association": "NONE",
    "body": "We do use nbformat for other processing of notebooks. But it would be good to have dynamic and static test cases together.\r\n\r\nWhere can one find documentation about how a notebook is stored in the browser (client)? Is there API documentation?",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/348566305",
    "html_url": "https://github.com/jupyter/notebook/issues/3101#issuecomment-348566305",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3101",
    "id": 348566305,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM0ODU2NjMwNQ==",
    "user": {
      "login": "takluyver",
      "id": 327925,
      "node_id": "MDQ6VXNlcjMyNzkyNQ==",
      "avatar_url": "https://avatars.githubusercontent.com/u/327925?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/takluyver",
      "html_url": "https://github.com/takluyver",
      "followers_url": "https://api.github.com/users/takluyver/followers",
      "following_url": "https://api.github.com/users/takluyver/following{/other_user}",
      "gists_url": "https://api.github.com/users/takluyver/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/takluyver/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/takluyver/subscriptions",
      "organizations_url": "https://api.github.com/users/takluyver/orgs",
      "repos_url": "https://api.github.com/users/takluyver/repos",
      "events_url": "https://api.github.com/users/takluyver/events{/privacy}",
      "received_events_url": "https://api.github.com/users/takluyver/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2017-12-01T18:08:01Z",
    "updated_at": "2017-12-01T18:08:01Z",
    "author_association": "MEMBER",
    "body": "There's not, unfortunately. We resisted adding it for far too long on the grounds that the API was going to change.\r\n\r\nPossibly the best source of information is to find [an nbextension](http://jupyter-contrib-nbextensions.readthedocs.io/en/latest/nbextensions.html) that does something similar and look at the code. E.g. the *2to3 converter* is an extension that gets the content of code cells and sends them to the kernel, which sounds similar to what you might want.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/394824944",
    "html_url": "https://github.com/jupyter/notebook/issues/3101#issuecomment-394824944",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3101",
    "id": 394824944,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NDgyNDk0NA==",
    "user": {
      "login": "lsloan",
      "id": 20786,
      "node_id": "MDQ6VXNlcjIwNzg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/20786?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lsloan",
      "html_url": "https://github.com/lsloan",
      "followers_url": "https://api.github.com/users/lsloan/followers",
      "following_url": "https://api.github.com/users/lsloan/following{/other_user}",
      "gists_url": "https://api.github.com/users/lsloan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lsloan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lsloan/subscriptions",
      "organizations_url": "https://api.github.com/users/lsloan/orgs",
      "repos_url": "https://api.github.com/users/lsloan/repos",
      "events_url": "https://api.github.com/users/lsloan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lsloan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-05T19:06:18Z",
    "updated_at": "2018-06-05T19:07:28Z",
    "author_association": "NONE",
    "body": "I noticed this issue because I would like to use notebook introspection to produce a table of contents at the beginning of the notebook. The TOC would be filled with links to the various headings within the notebook.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/395021925",
    "html_url": "https://github.com/jupyter/notebook/issues/3101#issuecomment-395021925",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3101",
    "id": 395021925,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTAyMTkyNQ==",
    "user": {
      "login": "wstomv",
      "id": 5611123,
      "node_id": "MDQ6VXNlcjU2MTExMjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5611123?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wstomv",
      "html_url": "https://github.com/wstomv",
      "followers_url": "https://api.github.com/users/wstomv/followers",
      "following_url": "https://api.github.com/users/wstomv/following{/other_user}",
      "gists_url": "https://api.github.com/users/wstomv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wstomv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wstomv/subscriptions",
      "organizations_url": "https://api.github.com/users/wstomv/orgs",
      "repos_url": "https://api.github.com/users/wstomv/repos",
      "events_url": "https://api.github.com/users/wstomv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wstomv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-06T10:29:46Z",
    "updated_at": "2018-06-06T10:30:14Z",
    "author_association": "NONE",
    "body": "@lsloan There is a separate extension `toc2` (part of `nbextensions` for Jupyter Notebook; _not_ for Jupyter Lab) that does exactly that:\r\n\r\n> https://jupyter-contrib-nbextensions.readthedocs.io/en/latest/nbextensions/toc2/README.html",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/395130623",
    "html_url": "https://github.com/jupyter/notebook/issues/3101#issuecomment-395130623",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3101",
    "id": 395130623,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTEzMDYyMw==",
    "user": {
      "login": "lsloan",
      "id": 20786,
      "node_id": "MDQ6VXNlcjIwNzg2",
      "avatar_url": "https://avatars.githubusercontent.com/u/20786?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/lsloan",
      "html_url": "https://github.com/lsloan",
      "followers_url": "https://api.github.com/users/lsloan/followers",
      "following_url": "https://api.github.com/users/lsloan/following{/other_user}",
      "gists_url": "https://api.github.com/users/lsloan/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/lsloan/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/lsloan/subscriptions",
      "organizations_url": "https://api.github.com/users/lsloan/orgs",
      "repos_url": "https://api.github.com/users/lsloan/repos",
      "events_url": "https://api.github.com/users/lsloan/events{/privacy}",
      "received_events_url": "https://api.github.com/users/lsloan/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-06T16:26:49Z",
    "updated_at": "2018-06-06T17:16:25Z",
    "author_association": "NONE",
    "body": "Thanks for pointing that out, @wstomv.  However, from the description, it seems to work _only_ in Jupyter Notebooks and nothing else.\r\n\r\nI'd like the option of saving the generated TOC as part of the notebook.  That is, the first cell calls the code to generate the TOC, which is displayed in that cell's output.  When I save and share that notebook online (Bitbucket, GitHub, etc.), the TOC would be displayed from the saved version.  Of course, I'd hope that the TOC items would link to the various sections of the document, but that's not critical.",
    "performed_via_github_app": null
  },
  {
    "url": "https://api.github.com/repos/jupyter/notebook/issues/comments/395179405",
    "html_url": "https://github.com/jupyter/notebook/issues/3101#issuecomment-395179405",
    "issue_url": "https://api.github.com/repos/jupyter/notebook/issues/3101",
    "id": 395179405,
    "node_id": "MDEyOklzc3VlQ29tbWVudDM5NTE3OTQwNQ==",
    "user": {
      "login": "wstomv",
      "id": 5611123,
      "node_id": "MDQ6VXNlcjU2MTExMjM=",
      "avatar_url": "https://avatars.githubusercontent.com/u/5611123?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/wstomv",
      "html_url": "https://github.com/wstomv",
      "followers_url": "https://api.github.com/users/wstomv/followers",
      "following_url": "https://api.github.com/users/wstomv/following{/other_user}",
      "gists_url": "https://api.github.com/users/wstomv/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/wstomv/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/wstomv/subscriptions",
      "organizations_url": "https://api.github.com/users/wstomv/orgs",
      "repos_url": "https://api.github.com/users/wstomv/repos",
      "events_url": "https://api.github.com/users/wstomv/events{/privacy}",
      "received_events_url": "https://api.github.com/users/wstomv/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2018-06-06T19:05:28Z",
    "updated_at": "2018-06-06T19:05:28Z",
    "author_association": "NONE",
    "body": "It does all that, if I recall correctly.\n\nOn 6 Jun 2018 18:27, Lance E Sloan «UMich» <notifications@github.com> wrote:\n\nThanks for pointing that out, @wstomv<https://github.com/wstomv>. However, from the description, it seems to work only in Jupyter Notebooks and nothing else.\n\nI'd like the option of the generated TOC to be saved as part of the notebook. That is, the first cell calls the code to generate the TOC, which is displayed in that cell's output. When I save and share that notebook online (Bitbucket, GitHub, etc.), the TOC would be displayed from the saved version. Of course, I'd hope that the TOC items would link to the various sections of the document, but that's not critical.\n\n—\nYou are receiving this because you were mentioned.\nReply to this email directly, view it on GitHub<https://github.com/jupyter/notebook/issues/3101#issuecomment-395130623>, or mute the thread<https://github.com/notifications/unsubscribe-auth/AFWec2GHCjgIK5a8Hm6n85W_odKp-v6eks5t6ALRgaJpZM4Qyjhd>.\n",
    "performed_via_github_app": null
  }
]
