Python2 kernel died when I ran CODESCODES from LINKLINK [CLS] [SEP] How can I help fix this [CLS] [SEP] If there is something that I should report dependent package versions, etc [CLS] [SEP] please tell me [CLS] [SEP] CODELCODEL. This is the key: which is a C level error in zeromq when starting the kernel, possibly related to funkiness in the Ubuntu+Windows environment [CLS] [SEP] How did you install your Python packages, specifically pyzmq [CLS] [SEP] I installed the jupyter dependent packages including pyzmq with the following commands [CLS] [SEP] CODELCODEL. minrk I wonder if unicode characters are getting in the way as well here with Python: CODESCODES. kozo2 can you install zeromq with apt, and then reinstall pyzmq: CODELCODEL. minrk I installed zeromq with apt, and reinstalled pyzmq with pip CODESCODES option, but still fails like this. CODELCODEL. I suspect that libzmq has some issues in the pseudo linux context [CLS] [SEP] Getting to the bottom of that is probably the key [CLS] [SEP] For instance, can you run the pyzmq tests: CODELCODEL. and see what you get [CLS] [SEP] It's possible that you will need to build libzmq from source to get it to properly detect its environment, and also possible that it will need patches to run [CLS] [SEP] I got. CODELCODEL. Next, I will try to build libzmq from source [CLS] [SEP] Thanks [CLS] [SEP] minrk kozo2 You may already be aware of this resource, but I'll pass it along as an FYI [CLS] [SEP] There is an LINKLINK maintained by Christoph Gohlke, Laboratory for Fluorescence Dynamics, University of California, Irvine [CLS] [SEP] I don't know if this resource will be helpful for Ubuntu on Windows, but may be helpful when working with Windows [CLS] [SEP] There's a ZeroMQ binary towards the end of the home page [CLS] [SEP] willingc thanks, yes, that's useful for the Windows side, but here I think we want linux binaries, which we are currently getting from CODESCODES [CLS] [SEP] These are meant to Just Workâ„¢, but apparently don't, so I'm guessing that perhaps running the zeromq configure & build on the machine may detect something that the binary assumed incorrectly at build time [CLS] [SEP] minrk I agree [CLS] [SEP] FYI [CLS] [SEP] I did a quick scan of the Microsoft blog post comments and the LINKLINK [CLS] [SEP] It looks like socket support is a known issue area that needs improvement [CLS] [SEP] Thanks for finding that, willingc [CLS] [SEP] Hi all [CLS] [SEP] I just built Libzmq in this context to get to the meat of the error [CLS] [SEP] I've attached my test suite log: LINKLINK. It appears that line 186 of src tcp address [CLS] [SEP] cpp is causing the error [CLS] [SEP] In particular, this is the code which is causing an invalid argument error [CLS] [SEP] See LINKLINK [CLS] [SEP] CODELCODEL. MadcowD Great job tracking the error down [CLS] [SEP] For what it's worth, Bash on Windows does not currently expose any network interfaces [CLS] [SEP] Networking is available, but no information is exposed about the underlying physical or virtual hardware; not even a loopback device [CLS] [SEP] willingc How do I get Bash to recognize pyzmq [CLS] [SEP] I've the same problem [CLS] [SEP] Have any one of you solved it yet [CLS] [SEP] adonese If you could provide a bit more detail, it will assist us in helping you [CLS] [SEP] What is your operating system [CLS] [SEP] How have you tried to install pyzmq [CLS] [SEP] What version of the notebook are you trying to install [CLS] [SEP] Any additional information that you think we may find useful [CLS] [SEP] Thanks [CLS] [SEP] Sorry I thought this issue is in Bash on Ubuntu on Windows page thumbs up. I'm using Bash on Ubuntu on Windows [CLS] [SEP] I've tried: CODESCODES. CODESCODES. CODESCODES. None of them have actually helped me [CLS] [SEP] Regarding the unofficial Python packages, I just didn't how do I get Bash to recognize Windows' CODESCODES [CLS] [SEP] I'm using Jupyter notebook 4 [CLS] [SEP] 1, the latest version I believe [CLS] [SEP] Hi adonese, Hmm [CLS] [SEP] I've checked around a bit since I actually don't have access to a Bash on Ubuntu on Windows system [CLS] [SEP] It looks like this issue on the Bash on Windows issue tracker has some promise LINKLINK. If you find one of those work for you, please drop us a note here [CLS] [SEP] Good luck [CLS] [SEP] adonese take a look at the link willingc posted; a bunch of us have worked out the fix there [CLS] [SEP] willingc FYI: If you're interested in trying out Bash on Ubuntu on Windows aka WSL, I believe you can get a free VM from modern [CLS] [SEP] ie: LINKLINK. Download the latest Preview VM; older ones don't support WSL yet [CLS] [SEP] Its license expires after a month or a few months or so, but you're allowed to download a new VM when your current one expires [CLS] [SEP] It doesn't come with WSL preinstalled; you have to run through its install process [CLS] [SEP] Maybe not worth it, but FYI it's an option [CLS] [SEP] aseering Thanks for passing along the info and for finding the solution: cake: Closing issue [CLS] [SEP] Resolution. See Bash on Windows issue tracker LINKLINK. In case people are wondering how to get it working using CODESCODES installed via CODESCODES, here's a fix crossposted from. LINKLINK. CODELCODEL. gglanzani Thanks for telling me that information, but it core dumped like. CODELCODEL. kozo2 Are you sure it has nothing to do with the missing CODESCODES [CLS] [SEP] the 404 at the end [CLS] [SEP] It's working properly for me + 2 other that commented on the BOW repo see link above. I don't think there's any way that a missing nbextension could lead to a segfault [CLS] [SEP] I won't say it's impossible, but it would be a really bizarre cause [CLS] [SEP] takluyver I can't argue with you thumbs up. kozo2 How did you install CODESCODES [CLS] [SEP] Simply CODESCODES [CLS] [SEP] I'm running off a virtual env and as an unpriviled user you are running under CODESCODES, probably as CODESCODES, so that might contribute. gglanzani. Thanks for telling me that virtualenv [CLS] [SEP] By following your virtualenv advice after adding a user, I succeeded running Jupyter in Ubuntu on Windows from Windows [CLS] [SEP] It seems CODESCODES is irrelevant to the segmentation fault [CLS] [SEP] gglanzani aseering, I am also having problems with running Jupyter notebook from my bash shell on WSL [CLS] [SEP] I'd prefer to get it working in WSL bash rather than trying to use virtualbox vagrant, etc [CLS] [SEP] Please help [CLS] [SEP] I am able to bring up my Jupyter notebook, but as soon as I tried to run even the most basic notebook, my connection fails [CLS] [SEP] Looks like something to do with zeromq or the Python versions [CLS] [SEP] Error message from the Jupyter console: KernelRestarter: restarting kernel 1 5. WARNING: root: kernel 5c0f6900 thumbs down bcc 40bd bcd6 a60efd458664 restarted. Invalid argument bundled zeromq src tcp address [CLS] [SEP] cpp:190. KernelRestarter: restarting kernel 1 5. WARNING: root: kernel 5c0f6900 thumbs down bcc 40bd bcd6 a60efd458664 restarted. Invalid argument bundled zeromq src tcp address [CLS] [SEP] cpp:190. Surface Pro Using Windows Subsystem for Linux WSL [CLS] [SEP] Windows 10. root mypc: mnt c Users myid mylinux python version Python 2 [CLS] [SEP] 6. root mypc: mnt c Users myid mylinux pip version pip 1 [CLS] [SEP] 4 from usr lib python2 [CLS] [SEP] 7 dist packages python 2 [CLS] [SEP] 7. root mypc: mnt c Users myid mylinux jupyter version 4 [CLS] [SEP] 0. root mypc: mnt c Users myid mylinux python. Python 2 [CLS] [SEP] 6 default, Jun 22 2015, 17:58:13. on linux2. I did execute the below code, but even after that I am getting the same issues: pip uninstall pyzmq didn't find this. sudo add apt repository ppa: aseering wsl. sudo apt get update. sudo apt get install libzmq3 libzmq3 dev. export LD LIBRARY PATH usr lib x86 64 linux gnu. pip install no use wheel v pyzmq. pip install jupyter. sudo apt get install python pip python dev python matplotlib. export TF BINARY URL LINKLINK. sudo pip install upgrade TF BINARY URL. sudo pip install jupyter Pillow. Thanks [CLS] [SEP] Hi HemanK it sounds like the CODESCODES Python library must be using a version of CODESCODES other than the one in my PPA [CLS] [SEP] I'm not on an Ubuntu or WSL machine right at the moment, but in order to track down what's going wrong the first step would be to find where pyzmq got installed on your computer's filesystem usually in a Python CODESCODES directory somewhere [CLS] [SEP] Then, look in that directory for all CODESCODES files [CLS] [SEP] Then run CODESCODES on each of the CODESCODES files; that will print out the list of libraries that the specified file is linking against [CLS] [SEP] One or more of them will be linking against some version of libzmq; the question is, what version of libzmq [CLS] [SEP] My assumption is that it's not the version of libzmq that's in the PPA, but, why not [CLS] [SEP] The answer to that should become apparent given the location of the libzmq library that is actually being used by pyzmq on your machine [CLS] [SEP] Hio aseeing, Thanks for your quick response [CLS] [SEP] For some reason I was having problems posting to GitHub yesterday [CLS] [SEP] Not sure what was going on [CLS] [SEP] It doesn't look like I have pyzmq Python library, at least not that I can locate [CLS] [SEP] In fact here are all the files of the pattern mq [CLS] [SEP] and there are very few of those: Hi aseering, root mypc: mnt c Users myid mylinux tf tutorial find usr HOME name mq [CLS] [SEP] usr include zmq [CLS] [SEP] usr include zmq [CLS] [SEP] hpp. usr lib x86 64 linux gnu libzmq [CLS] [SEP] usr lib x86 64 linux gnu libzmq [CLS] [SEP] so. usr lib x86 64 linux gnu libzmq [CLS] [SEP] so [CLS] [SEP] usr lib x86 64 linux gnu libzmq [CLS] [SEP] so [CLS] [SEP] 1 [CLS] [SEP] usr lib x86 64 linux gnu pkgconfig libzmq [CLS] [SEP] pc. usr local lib python2 [CLS] [SEP] 7 dist packages zmq backend cython libzmq [CLS] [SEP] pxd. usr local lib python2 [CLS] [SEP] 7 dist packages zmq include zmq [CLS] [SEP] usr local lib python2 [CLS] [SEP] 7 dist packages zmq libzmq [CLS] [SEP] so. usr share man man7 zmq [CLS] [SEP] gz [CLS] [SEP] root mypc: mnt c Users myid mylinux tf tutorial ou. usr lib x86 64 linux gnu libzmq [CLS] [SEP] so. usr local lib python2 [CLS] [SEP] 7 dist packages zmq libzmq [CLS] [SEP] so. root mypc: mnt c Users myid mylinux tf tutorial. and here is the result of ldd. linux vdso [CLS] [SEP] so [CLS] [SEP] 1 0x00007fffdf564000. librt [CLS] [SEP] so [CLS] [SEP] 1 lib x86 64 linux gnu librt [CLS] [SEP] so [CLS] [SEP] 1 0x00007f87108d0000. libstdc++ [CLS] [SEP] so [CLS] [SEP] 6 usr lib x86 64 linux gnu libstdc++ [CLS] [SEP] so [CLS] [SEP] 6 0x00007f87105c0000. libgcc s [CLS] [SEP] so [CLS] [SEP] 1 lib x86 64 linux gnu libgcc s [CLS] [SEP] so [CLS] [SEP] 1 0x00007f8710390000. libpthread [CLS] [SEP] so [CLS] [SEP] 0 lib x86 64 linux gnu libpthread [CLS] [SEP] so [CLS] [SEP] 0 0x00007f8710170000. libc [CLS] [SEP] so [CLS] [SEP] 6 lib x86 64 linux gnu libc [CLS] [SEP] so [CLS] [SEP] 6 0x00007f870fda0000. libm [CLS] [SEP] so [CLS] [SEP] 6 lib x86 64 linux gnu libm [CLS] [SEP] so [CLS] [SEP] 6 0x00007f870fa80. lib64 ld linux x86 64 [CLS] [SEP] so [CLS] [SEP] 2 0x00007f8710e00000. root mypc: mnt c Users myid mylinux tf tutorial. linux vdso [CLS] [SEP] so [CLS] [SEP] 1 0x00007fffc5c4e000. libpgm 5 [CLS] [SEP] so [CLS] [SEP] 0 usr lib x86 64 linux gnu libpgm 5 [CLS] [SEP] so [CLS] [SEP] 0 0x00007faff62b0000. librt [CLS] [SEP] so [CLS] [SEP] 1 lib x86 64 linux gnu librt [CLS] [SEP] so [CLS] [SEP] 1 0x00007faff60a0000. libpthread [CLS] [SEP] so [CLS] [SEP] 0 lib x86 64 linux gnu libpthread [CLS] [SEP] so [CLS] [SEP] 0 0x00007faff5e70000. libstdc++ [CLS] [SEP] so [CLS] [SEP] 6 usr lib x86 64 linux gnu libstdc++ [CLS] [SEP] so [CLS] [SEP] 6 0x00007faff5b60000. libc [CLS] [SEP] so [CLS] [SEP] 6 lib x86 64 linux gnu libc [CLS] [SEP] so [CLS] [SEP] 6 0x00007faff5790000. libgcc s [CLS] [SEP] so [CLS] [SEP] 1 lib x86 64 linux gnu libgcc s [CLS] [SEP] so [CLS] [SEP] 1 0x00007faff5560000. libm [CLS] [SEP] so [CLS] [SEP] 6. lib x86 64 linux gnu libm [CLS] [SEP] so [CLS] [SEP] 6 0x00007faff5250000. lib64 ld linux x86 64 [CLS] [SEP] so [CLS] [SEP] 2 0x00007faff6800000. So the libzmq [CLS] [SEP] so files are in usr lib x86 64 linux gnu and usr local python2 [CLS] [SEP] 7 deist packages zmq [CLS] [SEP] I wonder if I am missing some packages and whether I should try to reinstall bash on Windows. and Tensorflow [CLS] [SEP] Also, when I installed Windows Subsystem for Linux WSL, I used default user root, rather than creating a userid [CLS] [SEP] Not sure if that would have installed some python packages in some path that is not visible from within Jupyter [CLS] [SEP] Any suggestions [CLS] [SEP] Thanks [CLS] [SEP] Hi HemanK you said that you ran CODESCODES [CLS] [SEP] That installs CODESCODES [CLS] [SEP] So you do have it somewhere [CLS] [SEP] I assume it's the CODESCODES directory inside CODESCODES that you've located above Python packages sometimes omit the py prefix when they install on disk because, well, it's in the Python packages directory; labeling it as py something is somewhat redundant [CLS] [SEP] Anyway, I do see something interesting in the list of files above: There's a CODESCODES in the system library directory CODESCODES ; that's the one that my package is supposed to override [CLS] [SEP] However, there's also one inside the Python zmq package CODESCODES [CLS] [SEP] I don't know exactly where that version of the file is coming from but I bet it still has this bug [CLS] [SEP] Perhaps someone from the Jupyter project minrk willingc [CLS] [SEP] could comment are y'all now bundling your own version of libzmq [CLS] [SEP] If so, would you consider pulling in a newer version from the libzmq project that contains the fix to this issue [CLS] [SEP] Or, if you don't want to upgrade, you could backport LINKLINK ; as patches go, this one is very simple [CLS] [SEP] Hi aseering, I can see only object that starts with pyz [CLS] [SEP] It is the pyzmq egg info: I am not very familiar with how that works [CLS] [SEP] Will wait for feedback from you or minrk or willingc. root mypc: mnt c Users myid mylinux tf tutorial find usr HOME name pyz. usr local lib python2 [CLS] [SEP] 7 dist packages pyzmq thumbs down 6 [CLS] [SEP] 0 py2 [CLS] [SEP] egg info. root mypc: mnt c Users myid mylinux tf tutorial cd usr local lib python2 [CLS] [SEP] 7 dist packages pyzmq. info ls ltr. total 20. rw r r 1 root staff 4 Oct 20 19:18 top level [CLS] [SEP] txt. rw r r 1 root staff 1 Oct 20 19:18 not zip safe. rw r r 1 root staff 1 Oct 20 19:18 dependency links [CLS] [SEP] txt. rw r r 1 root staff 14265 Oct 20 19:18 SOURCES [CLS] [SEP] txt. info view SOURCES [CLS] [SEP] txt. Thanks [CLS] [SEP] Same issue described; error is as follows: CODELCODEL. System Information: CODELCODEL. I am running jupyter notebook on Ubuntu on Windows [CLS] [SEP] Python installation is the default from Anaconda2 4 [CLS] [SEP] 0 Linux x86 64 [CLS] [SEP] sh, and I am using the jupyter notebook app that comes preinstalled with anaconda2 [CLS] [SEP] Hi aseering HemanK ebridge2, I'm traveling at the moment so I don't have access to a Windows system [CLS] [SEP] I will have access over the weekend and will try to replicate or troubleshoot [CLS] [SEP] Thanks [CLS] [SEP] cc minrk takluyver. Can you try a manual download and install of pyzmq: CODELCODEL. and share the complete output [CLS] [SEP] Hi minrk, I had some issues with my laptop and have to get a replacement laptop from my office this week, so I it may take me sometime to get everything setup again and to resume my testing [CLS] [SEP] In the meanwhile I installed CNTK Microsoft Cognitive Toolkit for Deep Learning, which is similar to Tensorflow and got it working quickly on my Windows laptop [CLS] [SEP] That installation was using Anaconda, Python 3 [CLS] [SEP] 4 and Jupyter [CLS] [SEP] Hope to compare Tensorflow and CNTK once I get Tensor flow also working later [CLS] [SEP] So look forward to getting Tensor Flow installed and working within the next couple of weeks [CLS] [SEP] Thanks [CLS] [SEP] aseering HemanK: FWIW, RE: This will happen if CODESCODES can't find the system CODESCODES it will build it's own [CLS] [SEP] tildebyte what you describe would be correct for a source package, but pyzmq is distributed on PyPI as a binary package by default [CLS] [SEP] aseering I hear you, but CODESCODES built it's own lib when I ran CODESCODES [CLS] [SEP] Maybe something wierd on my system [CLS] [SEP] minrk I followed your instructions from LINKLINK and I'm seeing the exact same result as the OP although with the slightly different line number of CODESCODES Invalid argument bundled zeromq src tcp address [CLS] [SEP] cpp:190 CODESCODES, so it is using the installed pyzmq, I presume [CLS] [SEP] Or did you want the output of the pyzmq build process [CLS] [SEP] EDIT: I eventually got this to work by manually building a patched version of pyzmq with a fix from Microsoft BashOnWindows 185For what it's worth, I'm guessing haven't checked recently that WSL has worked around this issue in the latest LINKLINK [CLS] [SEP] aseering Do you have confirmation that this is the case [CLS] [SEP] My situation is identical to HemanK 's and I've thought about switching over to the Insider channel to see if the updates to WSL resolve issues like this, but value the reliability of a more stable build for my main machine [CLS] [SEP] A quick verification that this works better on the latest Insider Build would be all the push I need to switch [CLS] [SEP] Thanks for all the support that you've been providing on this issue [CLS] [SEP] TheNathanielWatkins glad I could help [CLS] [SEP] I can confirm that Ubuntu's stock Notebook package now works properly without my patch [CLS] [SEP] I tested on what is currently the latest Insider build 14986 [CLS] [SEP] We're told that the relevant change will be released to stable Windows as part of the Creators release in a few months [CLS] [SEP] I haven't tested with other Jupyter Notebook versions, but I would expect them to work as well [CLS] [SEP] If you want to test yourself, you could download the Preview VM LINKLINK and test there [CLS] [SEP] The VM is based on a slightly older Insider build; you might need to update it [CLS] [SEP] Which you can probably do through Windows Update, but I haven't actually tried [CLS] [SEP] Wow [CLS] [SEP] Thank you aseering [CLS] [SEP] You're definitely my internet hero of 01 05 17 [CLS] [SEP] Took a while to get switched over to the Insider Preview why do they make us wait 24 hours to switch [CLS] [SEP] and re setup, but now that it's up, everything seems to be working perfectly now [CLS] [SEP] Combined with a BROWSER hack detailed LINKLINK, I can now seemlessly run Jupyter in my Windows native Chrome [CLS] [SEP] Hi, Does anybody know how we can use matplotlib inline on Jupyter [CLS] [SEP] My kernel dies when I am using this package [CLS] [SEP] I am using WSL [CLS] [SEP] I know it does not support graphical applications officially [CLS] [SEP] But I was able to use Xming [CLS] [SEP] Now, my problem is I can have anaconda and Jupyter on my chrome to run my codes, but when I am trying to plot something, my python kernel dies [CLS] [SEP] NimaHi nimasasa for what it's worth, matplotlib works fine for me [CLS] [SEP] That said, I'm using a recent LINKLINK of Windows despite its potential bugs, because its support for Linux features is so much better [CLS] [SEP] nimasasa Check that your versions are up to date too [CLS] [SEP] CODESCODES will give additional output [CLS] [SEP] aseering and willingc thanks for your responses [CLS] [SEP] I am currently using the updated windows but not the insider build unfortunately cant use it on my work PC and my notebook is 4 [CLS] [SEP] 3 [CLS] [SEP] If you haven't already done this, try running CODESCODES in a cell before plotting [CLS] [SEP] 