I plan on implementing the hiding of input cells [CLS] [SEP] Might not happen for 4 [CLS] [SEP] but I will be optimistic for now [CLS] [SEP] Woot [CLS] [SEP] BTW, I like our variation of making a Tabbed Input Output cell such that you can see the code in the Input tab, but defaults to showing the Output tab initially [CLS] [SEP] Also can display the input next to output [CLS] [SEP] LINKLINK. I can imagine that this view would be useful sometimes [CLS] [SEP] But initially this. will be as simple as possible possibly without UI just in the command. palette [CLS] [SEP] Doug Blank wrote: Brian Granger. Associate Professor of Physics and Data Science. Cal Poly State University, San Luis Obispo. ellisonbg on Twitter and GitHub. and. Would it be possible to expose the JS so that it survives nbconvert [CLS] [SEP] Otherwise any derived materials would need to re implement show hide machinery [CLS] [SEP] I'm also thumbs up on the possibility of switching input on one cell only, imagine publishing lecture materials in a non programming course, where you only might want to check how a particular thing is produced [CLS] [SEP] Here's a snipped that works for me if I run as HTML in the 1st cell [CLS] [SEP] CODELCODEL. Here's the button [CLS] [SEP] CODELCODEL. I just signed in to thank Saynah for that great hack [CLS] [SEP] I don't use Jupyter specifically because it doesn't have cell folding, but this is the closest I've found so far [CLS] [SEP] Saynah, ecollins, I created a code hiding plugin for Jupyter a couple of months ago [CLS] [SEP] If you're interested in check out LINKLINK [CLS] [SEP] Edit: fixed a typo [CLS] [SEP] Thanks kirbs, had some LINKLINK the first time around the install [CLS] [SEP] It'd definitely be nice to see this feature upstream [CLS] [SEP] It seems like this would be nice done a cell magic, then it's easy to selectively hide cells, not sure though [CLS] [SEP] still learning the system [CLS] [SEP] Plus I seem to be running an ancient version. I don't think a cell magic is the right thing for this: Hiding cells should work the same way for any kernel, and magics are not general [CLS] [SEP] Cell magics usually affect what the kernel does with code, whereas here we don't want that to change. If you're on an old version, have a look at the upgrade instructions here: LINKLINK. Hiding input cells for HTML output would be greatly appreciated [CLS] [SEP] I second that [CLS] [SEP] I have cell hiding on HTML export figured out with a helpful piece of code to trigger upon export; but now that I'm moving to deploying Jupyterhub in my organization I really would appreciate the ability to hide live input cells so users don't see them when they run their notebooks [CLS] [SEP] The CODESCODES notebook extension is nice, but it doesn't hide the code when exporting [CLS] [SEP] Can an nbextension register preprocessors [CLS] [SEP] As CODESCODES adds a variable to the meta data, that should be trivial to implement [CLS] [SEP] You can hide the code in nbconvert using a custom template [CLS] [SEP] Like this template LINKLINK for conversion to HTML [CLS] [SEP] You have to change the metadata variable name in the template, because it was made for another notebook extension [CLS] [SEP] For conversion to TeX or PDF you can take a look at this template LINKLINK and modify it accordingly [CLS] [SEP] I think it would be cleaner to do this with a preprocessor which I just did locally [CLS] [SEP] I fell the hiding of cells should be independent of the template [CLS] [SEP] It would be neat if in addition to the feature we could allow to export to pdf html removing hiding input cell code and prompt so we could have a clean pdf html output without any code but with the beautiful graphs, markdown and results [CLS] [SEP] A man can dream [CLS] [SEP] BreitA that's super easy [CLS] [SEP] The hard part is getting rid of the prompt for the output [CLS] [SEP] Lemme send a PR [CLS] [SEP] Hm actually I realized that I was doing the wrong thing and also removed the output of the cell [CLS] [SEP] That was simple [CLS] [SEP] Oops, ping jamiesHQ. I actually already do all of that with a mix of workarounds like theses one. LINKLINK. CODELCODEL. and use LINKLINK to convert the rendered HTML into pdf but with this the layout is atrocious as expected [CLS] [SEP] If you guys provide an embeded good solution on jupyter for this it would be perfect [CLS] [SEP] CODELCODEL. This is good to have, though I believe the initial discussion was about. hide fold functionality within Jupyter. Joel Bondurant wrote: I was just trying to hack something like this together [CLS] [SEP] My idea was a bit different [CLS] [SEP] I try to use damianavila RISE plugin to create lecture notes [CLS] [SEP] I would like to see code blocks within the notebook, but mark them hide during the presentation [CLS] [SEP] Hence, I can easily read and follow what is done, but the presentation stays clean [CLS] [SEP] I am trying to merge the hide plugin from kirbs by adding a Boolean expression to the if clause: CODELCODEL. whereas, ' maintoolbar' [CLS] [SEP] hasClass 'reveal tagging' is set by RISE to identify whether the presentation mode is on or off as far as I understood [CLS] [SEP] EDIT: Just to get this again more on topic [CLS] [SEP] Implementing this directly into Jupyter sounds great but please make sure, that different plugins or exports can easily utilise resp [CLS] [SEP] customize the hide code functionality [CLS] [SEP] Just wanted to call out that the hiding of the output prompt for example Out should be included in this feature [CLS] [SEP] I think the majority of use cases that want to hide the input cell want to hide all references to the code, which includes the prompts [CLS] [SEP] Still eager to see this feature integrated into Jupyter [CLS] [SEP] thumbs up. I remember to read months year ago that Jupyter at that time IPython Notebook would not allow to hide input cells for security reasons [CLS] [SEP] Can anyone point me to that discussion [CLS] [SEP] Any update as to the hiding of input cells [CLS] [SEP] Would love to be able to use Jupyter to create the equivalent of RMarkdown reports [CLS] [SEP] Thanks overall for this wonderful Jupyter project [CLS] [SEP] I'm wanting to do the same [CLS] [SEP] Is creating Rmarkdown style reports on the. Jupyter roadmap [CLS] [SEP] CSS etc [CLS] [SEP] While we have never. really thought of the COM CSS of the classic notebook as being a public. API, in reality, many extensions rely on those things and would break [CLS] [SEP] cc sccolbert who is tackling the performance issues on the JLab side [CLS] [SEP] wrote: Brian Granger. Associate Professor of Physics and Data Science. Cal Poly State University, San Luis Obispo. ellisonbg on Twitter and GitHub. and. ellisonbg Thanks for that explanation [CLS] [SEP] I have a couple questions: Once the performance issues are resolved, could we potentially re use the JupyterLab widgets in classic notebook with little effort [CLS] [SEP] I don't understand the subtleties of this UX yet, but I imagine that it works like: user wants to hide and input cell user selects input cell user hides the cell by either selecting the action from the command palette or using the menu the cell is rendered as a [CLS] [SEP] indicating that it is hidden when the user clicks on the [CLS] [SEP] the cell is rendered as a cell again [CLS] [SEP] It seems pretty straight forward when thinking about it like: if the cell's CODESCODES then render as [CLS] [SEP] else render as usual [CLS] [SEP] On the first question [CLS] [SEP] We could implement the classic notebook using the. JupyterLab codebase [CLS] [SEP] I don't think it would be too much work, but it. would break all of the classic notebook APIs JS, DOM structure, CSS [CLS] [SEP] Because we have made a commitment to try and not break those APIs during. the transition to JupyterLab, I don't see how we could do it in practice [CLS] [SEP] On the second: what you describe is definitely the basic idea [CLS] [SEP] But there. are a number of edge cases we found that hand to be handled: When a cells input and output is hidden, only show one set of [CLS] [SEP] basically the logic depends jointly on the input and output hidden state. in a non trivial way [CLS] [SEP] There are also other actions that modify that state [CLS] [SEP] Some examples: running a cell sets hide output to false [CLS] [SEP] Clearing output sets hide output. to false, editing a cell, shows input, etc [CLS] [SEP] Each isn't complicated, just a. bunch of edge cases we are still chasing them [CLS] [SEP] We also have logic that adds and removes CSS classes to a cell based on. the whether there is output in the cell or not [CLS] [SEP] We needed this to do. conditional styling of the collapser and [CLS] [SEP] when there isn't output at. all [CLS] [SEP] wrote: Brian Granger. Associate Professor of Physics and Data Science. Cal Poly State University, San Luis Obispo. ellisonbg on Twitter and GitHub. and. Given the current issue count and the lack of manpower dedicated to the notebook nowadays, I say we go with option 1: preserved it it is there [CLS] [SEP] ellisonbg Is the notebook currently stripping the metadata [CLS] [SEP] If so, this must be happening in the JS since JupyterLab is not stripping it [CLS] [SEP] I don't now the current state of how lab and the notebook are handling this metadata, we would have to do some tests [CLS] [SEP] I've been trying to get PDF export to hide input cells and have done this successfully with tplx templates etc [CLS] [SEP] My problem now is that hide input seems to hide the cells even if I disable all extensions [CLS] [SEP] Is hide input actually being used by vanilla notebook [CLS] [SEP] or do I have an extension mysteriously running somewhere [CLS] [SEP] I don't think the notebook web interface uses any metadata for hiding input yet, though maybe it's gone in without me noticing [CLS] [SEP] Stuff to check: browser Javascript console, logging from the server, run CODESCODES thumbs up 0, would be perfect if we can edit the meta data in Jupyter Lab to: hide input of cell and only show output. hide cell numbers, looks tacky [CLS] [SEP] See Ref [CLS] [SEP] LINKLINK [CLS] [SEP] It is my understanding that what takluyver says is correct not using the metadata in notebook yet [CLS] [SEP] We do have work in progress to add that handling to lab though [CLS] [SEP] I realize this has been open for a while and there were some difficulties here, but I have been getting a lot of questions regarding why classic jupyter doesn't respect the CODESCODES metadata CODESCODES [CLS] [SEP] JupyterLab, nbconvert, nbformat, and nteract all respect the field if I recall correctly [CLS] [SEP] I see there's a lot of discussion on the DOM structure and how JupyterLab reimplemented that, but it seems like CODESCODES and CODESCODES wouldn't need drastic changes to enforce even if classic couldn't edit the attribute easily [CLS] [SEP] My front end dev skills are a bit rusty but would adding a metadata check to LINKLINK to set CODESCODES be 80 of the work for CODESCODES [CLS] [SEP] Seems like it'd only need to capture initial render and metadata edit events to adjust the display attribute [CLS] [SEP] Thoughts comments [CLS] [SEP] 