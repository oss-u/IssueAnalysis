I have been searching hours on this problem and can consistently replicate it: CODELCODEL. This snippet crashes because of scoring metrics [CLS] [SEP] make scorer metrics [CLS] [SEP] scorer [CLS] [SEP] f1 score, average macro where metrics refers to sklearn [CLS] [SEP] metrics module [CLS] [SEP] If I cancel out the scoring [CLS] [SEP] line, the parallel execution works [CLS] [SEP] If I want to use the f1 score as evaluation method, I have to cancel out the parallel execution by setting n jobs. Is there a way I can define another score method without losing the parallel execution possibility [CLS] [SEP] Thanks. This is surprising, so we'll have to work out what the problem is and make sure it works [CLS] [SEP] Can you please provide a little more detail: What do you mean by crashes [CLS] [SEP] What version of scikit learn is this [CLS] [SEP] If it's 0 [CLS] [SEP] 14, does it still happen in the current development version [CLS] [SEP] Multiprocessing has platform specific issues [CLS] [SEP] What platform are you on [CLS] [SEP] for example CODESCODES. Have you tried it on different datasets [CLS] [SEP] FWIW, my machine has no problem fitting iris with this snippet on the development version of sklearn [CLS] [SEP] Thank you for your fast reply [CLS] [SEP] With crashing I actually mean freezing [CLS] [SEP] It doesn't continue anymore and there is also no more activity to be monitored in the python process of task manager of windows [CLS] [SEP] The processes are still there and consume a constant amount of RAM but require no processing time [CLS] [SEP] This is scikit learn version 0 [CLS] [SEP] 14, last updated and run using Enthought Canopy [CLS] [SEP] I am on platform Windows 7 6 [CLS] [SEP] 7601 SP1 [CLS] [SEP] Code: CODELCODEL. Once again, this code works on my computer only when I change n jobs to 1 or when I don't define a scoring argument [CLS] [SEP] Generally multiprocessing in Windows encounters a lot of problems [CLS] [SEP] But I. don't know why this should be correlated with a custom metric [CLS] [SEP] There's. nothing about the average macro option in 0 [CLS] [SEP] 14 that suggests it should be. more likely to hang than the default average weighted [CLS] [SEP] At the development. head, this completes in 11s on my macbook, and in 7s at version 0 [CLS] [SEP] 14. that's something to look into [CLS] [SEP] Are you able to try this out in the current development version, to see if. it's still an issue [CLS] [SEP] On 25 February 2014 20:40, adverley wrote: As a side point, ogrisel, I note there seems to be a lot more joblib. parallelisation overhead in master on OS X at least that wasn't there. in 0 [CLS] [SEP] 14 [CLS] [SEP] On 25 February 2014 21:52, Joel Nothman d [CLS] [SEP] edu [CLS] [SEP] auwrote: This has nothing to do with custom scorers [CLS] [SEP] This is a LINKLINK of Python multiprocessing on Windows: you have to run everything that uses CODESCODES in an CODESCODES block or you'll get freezes crashes [CLS] [SEP] Maybe we should document this somewhere prominently, for example in the README [CLS] [SEP] Well, the good news is that nowadays joblib gives a meaningful error. message on such crash, rather than a fork bomb [CLS] [SEP] GaelVaroquaux does current scikit learn give that error message [CLS] [SEP] If so, the issue can be considered fixed, IMHO [CLS] [SEP] It should do [CLS] [SEP] The only way to be sure is to check [CLS] [SEP] I am on the move right. now, and I cannot boot up a Windows VM to do that [CLS] [SEP] I'm not going to install a C compiler on Windows just for this [CLS] [SEP] Sorry, but I really don't do Windows thumbs up. I have a Windows VM [CLS] [SEP] I can check [CLS] [SEP] It's just a question of finding a. little be of time to do it [CLS] [SEP] larsmans, you are completely right [CLS] [SEP] The custom scorer object was a mistake of me, the problem lies indeed in the multiprocessing on windows [CLS] [SEP] I tried this same code on a Linux and it runs well [CLS] [SEP] I don't get any error messages because it doesn't crash, it just stops doing any meaningful [CLS] [SEP] adverley Could you try the most recent version from GitHub on your Windows box [CLS] [SEP] Closing because of lack of feeback and it is probably a known issue that is fixed in newer joblib [CLS] [SEP] Not sure if related, does seem to be [CLS] [SEP] In windows, custom scorer still freezes [CLS] [SEP] I encountered this thread on google removed the scorer, and the grid search works [CLS] [SEP] When it freezes, it shows no error message [CLS] [SEP] There are 3 python processes spawned too because I set n jobs 3 [CLS] [SEP] However, the CPU utilization remains 0 for all python processes [CLS] [SEP] I am using IPython Notebook [CLS] [SEP] Can you share the code of the scorer [CLS] [SEP] It seems a bit unlikely [CLS] [SEP] Does your scorer use joblib n jobs anywhere [CLS] [SEP] It shouldn't, and that could maybe cause problems though I think joblib should detect that [CLS] [SEP] Sure here's the full code LINKLINK. The scorer function is score model, it doesn't use joblib [CLS] [SEP] This runs from command prompt, but not from IPython Notebook [CLS] [SEP] The error message is. CODESCODES. Then the IPython and all the spawned python instances become idle silently and don't respond to any python code anymore till I restart it [CLS] [SEP] Fix the attribute error, then it'll work [CLS] [SEP] Do you do pylab imports in IPython notebook [CLS] [SEP] Otherwise everything should be the same [CLS] [SEP] Well I do not know what causes the AttributeError [CLS] [SEP] Though it is most likely related to joblibs, since it happens only when n jobs is more than 1, runs fine with CODESCODES [CLS] [SEP] The error talks about attribute CODESCODES missing from CODESCODES, whether or not I have a CODESCODES in the IPython Notebook or not [CLS] [SEP] I realized that the error line was pasted incorrectly above I edited in the post above [CLS] [SEP] I don't use pylab [CLS] [SEP] Here's the full extended error message LINKLINK. Hum, that is likely related to issues of multiprocessing on windows [CLS] [SEP] Maybe GaelVaroquaux or ogrisel can help [CLS] [SEP] I don't know what the notebook makes of the CODESCODES [CLS] [SEP] Try not defining the metric in the notebook, but in a separate file and import it [CLS] [SEP] I'd think that would fix it [CLS] [SEP] This is not really related to GridSearchCV, but some interesting interaction between windows multiprocessing, IPython notebook and joblib [CLS] [SEP] guys [CLS] [SEP] thanks for the thread [CLS] [SEP] Anyway i should have checked this thread before, wasted 5 hours of my time on this [CLS] [SEP] Trying to run in parallel processing [CLS] [SEP] Thanks a lot thumbs up. TO ADD A FEEDBACK: its still freezing [CLS] [SEP] I faced the same issue when in presence of my own make Score cost function [CLS] [SEP] my system starts freezing [CLS] [SEP] When i did not use custom cost function, i did not face these freezes in parallel processing. The best way of turning these 5 hours into something useful for the project, would be to provide us with a stand alone example reproducing the problem [CLS] [SEP] I was experiencing the same issue on Windows 10 working in Jupyter notebook trying to use a custom scorer within a nested cross validation and n jobs thumbs down [CLS] [SEP] I was getting the CODESCODES message [CLS] [SEP] As amueller suggested, importing the custom scorer instead of defining it in the notebook works [CLS] [SEP] I have the exact same problem on OSX 10 [CLS] [SEP] 10 [CLS] [SEP] 5Same here [CLS] [SEP] OSX 10 [CLS] [SEP] 12 [CLS] [SEP] 5Please give a reproducible code snippet [CLS] [SEP] We'd love to get to the bottom of this [CLS] [SEP] It is hard to understand without code, including data, that shows us the issue [CLS] [SEP] Just run these lines in a python shell. CODELCODEL. Note that removing the PCA step from the pipeline solves the issue [CLS] [SEP] More info: Darwin thumbs down 6 [CLS] [SEP] 0 x86 64 i386 64bit. 'NumPy', '1 [CLS] [SEP] 12 [CLS] [SEP] 1'. 'SciPy', '0 [CLS] [SEP] 19 [CLS] [SEP] 1'. 'Scikit Learn', '0 [CLS] [SEP] 18 [CLS] [SEP] 2' seeing as you don't use a custom scorer, should we assume that is a. separate issue [CLS] [SEP] When I first faced this issue I was using custom scorer, but while trying to simplify the example code as much as possible, I found that it is not necessarily have to contain custom scorer [CLS] [SEP] At least on my machine [CLS] [SEP] Importing the scorer also didn't help in my case [CLS] [SEP] Anyway, the symptoms looks similar [CLS] [SEP] The script hangs forever and the CPU utilization is low [CLS] [SEP] boazsh thanks a lot for the snippet, it is not deterministic though, can you edit it and use a CODESCODES to make sure the random numbers are always the same on each run [CLS] [SEP] Also there is a work around if you are using Python 3 suggested for example in LINKLINK [CLS] [SEP] I don't have a way to test this on OSX at the moment but I may be able to try in the upcoming days [CLS] [SEP] Some piece of information useful to have just add what is missing to your earlier comment LINKLINK: CODELCODEL. Also how did you install scikit learn, with pip, with conda, with one of the OSX package managers brew, etc [CLS] [SEP] Updated the snippet used np [CLS] [SEP] random [CLS] [SEP] seed. Darwin thumbs down 6 [CLS] [SEP] 0 x86 64 i386 64bit. 'NumPy', '1 [CLS] [SEP] 12 [CLS] [SEP] 1'. 'SciPy', '0 [CLS] [SEP] 19 [CLS] [SEP] 1'. 'Scikit Learn', '0 [CLS] [SEP] 18 [CLS] [SEP] 2'. Great thanks a lot [CLS] [SEP] Have you answered this one, I can't find your answer [CLS] [SEP] Sorry, missed it pip [CLS] [SEP] FWIW, I have no problem running that snippet with: Darwin thumbs down 6 [CLS] [SEP] 0 x86 64 i386 64bit. Python 2 [CLS] [SEP] 12 Continuum Analytics, Inc [CLS] [SEP] default, Jul 2 2016, 17:43:17. NumPy 1 [CLS] [SEP] 13 [CLS] [SEP] 1. SciPy 0 [CLS] [SEP] 19 [CLS] [SEP] 1. Scikit Learn 0 [CLS] [SEP] 18 [CLS] [SEP] 2. Could you put verbose 10 in cross val predict, too, so that we can perhaps. see where it breaks for you [CLS] [SEP] jnothman I am guessing that your conda environment uses MKL and not Accelerate [CLS] [SEP] This freezing problem is specific to Accelerate and Python multiprocessing [CLS] [SEP] LINKLINK for more details [CLS] [SEP] pip on the other hand will use wheels that are shipped with Accelerate at the time of writing [CLS] [SEP] A work around other than the JOBLIB START METHOD to avoid this particular bug is to use MKL for example via conda or OpenBLAS for example via the conda forge channel [CLS] [SEP] Nothing is being printed [CLS] [SEP] LINKLINK. jnothman in case you want to reproduce the problem, IIRC you can create an environment with Accelerate on OSX with something like: CODELCODEL FWIW I can not reproduce the problem on my OS X VM [CLS] [SEP] I tried to mimic as close as possible boazsh's versions: CODELCODEL Hmm actually I can reproduce but your snippet was not a complete reproducer [CLS] [SEP] Here is an updated snippet: CODELCODEL. In any case, this is a known problem with Accelerate and Python multiprocessing [CLS] [SEP] Work arounds exist and have been listed in earlier posts [CLS] [SEP] The easiest one is probably to use conda and make sure that you use MKL and not Accelerate [CLS] [SEP] On the longer term probably scikit learn 0 [CLS] [SEP] 20 this problem will be universally solved by the new loky backend for joblib: LINKLINK Having a fix to multiprocessing be dependent on the scikit learn version is symptomatic of the problems of vendoring [CLS] [SEP] I recently read the following, which I found interesting: LINKLINK. I have a similar issue with RandomizedSearchCV; it hangs indefinitely [CLS] [SEP] I am using a 3 year old macbook pro, 16GB ram and core i7 and my scikit learn version is 0 [CLS] [SEP] 19 [CLS] [SEP] Puzzling part is that it was working last Friday [CLS] [SEP] Monday morning, I go back and try to run and it just freezes [CLS] [SEP] I know from previous runs that it take about 60 min to finish, but I waited a lot longer than that and nothing happens, it just hangs, no error msgs, nothing and my computer heats up and sucks power like there's no tomorrow [CLS] [SEP] Code below [CLS] [SEP] I tried changing n iter to 2 and n jobs 1 after reading some comments here and that worked [CLS] [SEP] So it may have something to do with n jobs thumbs down [CLS] [SEP] Still, this code worked fine last Friday [CLS] [SEP] it just hates Mondays [CLS] [SEP] My dataset size is less that 20k examples with dimensionality 100 [CLS] [SEP] CODELCODEL. what is crf [CLS] [SEP] just to eliminate the possibility, could you try using. return train score False [CLS] [SEP] It is very likely that this KaisJM's problem is due to the well known limitation on Accelerate with multiprocessing, see our LINKLINK [CLS] [SEP] How did you install scikit learn [CLS] [SEP] Also for future reference, can you paste the output of: CODELCODEL. this was working last Friday [CLS] [SEP] I done nothing since [CLS] [SEP] I think scikit learn is part of anaconda, but I did upgrade with pip pip install upgrade sklearn, but thats before I got this problem [CLS] [SEP] I ran the code fine after upgrading to 0 [CLS] [SEP] 19 [CLS] [SEP] here's the output of the above prints: CODELCODEL jnothman: I am using RandomizedSearchCV from sklearn [CLS] [SEP] grid search which does not have the return train score parameter [CLS] [SEP] I know sklearn [CLS] [SEP] grid search is depricated [CLS] [SEP] I will try the one from sklearn [CLS] [SEP] model selection, but something tells me I will have the same exact issue [CLS] [SEP] Updated original comment with more info and code [CLS] [SEP] Can you post the output of CODESCODES [CLS] [SEP] I would wild guess that by updating scikit learn with pip you updated numpy with pip too and you got the numpy wheels which uses Accelerate and has the limitation mentioned above [CLS] [SEP] Small word of advice: post a fully stand alone snippet for your next issue [CLS] [SEP] That means anyone can copy and paste it in a IPython session and easily try to reproduce [CLS] [SEP] This will give you the best chance of getting good feed back [CLS] [SEP] if you are using conda, stick to conda to manage packages that are available through conda [CLS] [SEP] Only use pip when you have to [CLS] [SEP] If you insist you want to use CODESCODES, I would strongly recommend you use CODESCODES [CLS] [SEP] Otherwise if a package dependends, say on numpy, and you happen not to have the latest numpy, numpy will be upgraded with pip, which you do not want [CLS] [SEP] Oh yeah and BTW, sklearn [CLS] [SEP] grid search is deprecated you probably want to use sklearn [CLS] [SEP] model selection at one point not too far down the road [CLS] [SEP] Good advice, thank you [CLS] [SEP] So is the workaround to downgrade numpy [CLS] [SEP] what limitation are you referring to [CLS] [SEP] the FAQ link above [CLS] [SEP] I did read it, but I do not understand this stuff i'm just an algo guy thumbs up [CLS] [SEP] output of CODESCODES. numpy 1 [CLS] [SEP] 12 [CLS] [SEP] 0. numpy 1 [CLS] [SEP] 12 [CLS] [SEP] 0 py27 0. numpy 1 [CLS] [SEP] 13 [CLS] [SEP] 1. numpydoc 0 [CLS] [SEP] 0 Wow three numpy installed I saw two before but never three [CLS] [SEP] anyway this seems indicative of the problem I was mentioning, for example that you have mixed pip and conda which is a bad idea for a given package [CLS] [SEP] CODELCODEL. Hopefully after that you will have a single numpy that uses MKL [CLS] [SEP] If I were you I would double check that you don't have the same problem for other core scientific packages, for example scipy, etc [CLS] [SEP] the reason I resort to pip for some packages is that conda does not have some packages, which actually is very frustrating because I know mixing pip with conda is a bad idea [CLS] [SEP] Next time that happens I'll use the no deps option [CLS] [SEP] one thing I should've mentioned is that I installed Spyder within the python env I was working in [CLS] [SEP] However, I was able to run the code after installing Spyder, both in Spyder and in Jupyter [CLS] [SEP] I did uninstall Spyder and the numpys above, re installed bumpy with conda which updated scikit to 0 [CLS] [SEP] 19 and still get the same error [CLS] [SEP] Something may have happened because of the Spyder install, but then why would it work for a day and then suddenly stop [CLS] [SEP] ok, nothing is working [CLS] [SEP] should I just create a new environment using conda and re install everything there [CLS] [SEP] will that solve it or make it worse [CLS] [SEP] Sounds worth a try [CLS] [SEP] created a new env and installed everything with conda, still freezes indefinitely [CLS] [SEP] only one copy of each package etc [CLS] [SEP] n jobs 1 works, but takes forever of course it worked in the previous env as well [CLS] [SEP] n jobs thumbs down is what freezes indefinitely [CLS] [SEP] CODELCODEL Then I don't know [CLS] [SEP] The only way we can investigate, is that you post a fully standalone snippet which we can just copy and paste in an IPython sesion and see if we can reproduce the problem [CLS] [SEP] will try to create a minimal example that reproduces the problem [CLS] [SEP] I need to do that to debug more efficiently [CLS] [SEP] Try this snippet taken from LINKLINK: CODELCODEL. If this freezes for example it does not finish within one second that means you are using Accelerate and the freeze is a known limitation with Python multiprocessing [CLS] [SEP] The work around is to not use Accelerate [CLS] [SEP] On OSX you can do that with conda which uses MKL by default [CLS] [SEP] You can also use OpenBLAS using conda forge [CLS] [SEP] If it does not freeze then you are not using Accelerate, and we would need a stand alone snippet to investigate [CLS] [SEP] will try to reproduce with minimal code [CLS] [SEP] CODELCODEL GaelVaroquaux scikit learn is not an app but a library in a rich ecosystem [CLS] [SEP] If everybody did what we do, everything would come crashing down [CLS] [SEP] That's a pretty clear signal that we need to change [CLS] [SEP] And there are many environments where the opposite is true from that comment [CLS] [SEP] I used a ubuntu virtual instance in google cloud compute engine bumpy, spicy, scikit etc were not the most up to date [CLS] [SEP] The code ran fine [CLS] [SEP] Then I installed Gensim [CLS] [SEP] This updated numpy and scipy to the latest versions and installed few other things it needs boto, bz2file and smart open [CLS] [SEP] After that the code freezes [CLS] [SEP] I hope this gives a useful clue as to what causes this freeze [CLS] [SEP] after installing Gensim. numpy 1 [CLS] [SEP] 10 [CLS] [SEP] 4 updated to numpy 1 [CLS] [SEP] 13 [CLS] [SEP] 3. scipy 0 [CLS] [SEP] 16 [CLS] [SEP] 1 updated to scipy 0 [CLS] [SEP] 19 [CLS] [SEP] 1. more info: Doing some research I found that libblas, liblapack and liblapack atlas were missing from my usr lib, also I did not see the directory usr lib atlas base [CLS] [SEP] I don't know if they were there and installing gensim removed them since it updated numpy etc, but this is likely since the code worked before installing gensim [CLS] [SEP] I installed them using CODESCODES and update alternatives according to the advanced scikit LINKLINK, but it did not help, the code still freezes with n jobs thumbs down [CLS] [SEP] I think the problem is that numpy is using OpenBlas [CLS] [SEP] Will switch it to ATLAS and see what happens [CLS] [SEP] CODELCODEL Still the same problem [CLS] [SEP] The following runs fine, unless I insert n jobs thumbs down [CLS] [SEP] CODELCODEL paulaceccon are your Numpy and Scipy installations using ATLAS or OpenBLAS [CLS] [SEP] It is a bit hard to follow what you have done KaisJM [CLS] [SEP] From a maintainer's point of view what we need is a fully stand alone python snippet to see if we can reproduce [CLS] [SEP] If we can reproduce, only then can we investigate and try to understand what is happening [CLS] [SEP] If that only happens when you install gensim and you manage to reproduce this behaviour consistently, then we would need full instructions how to create a Python environment that has the problem vs a Python environment that doesn't have the problem [CLS] [SEP] This requires a non negligible amount of time and effort, I completely agree, but without it, I am afraid that there is not much we can do to investigate the problem you are facing [CLS] [SEP] KaisJM by the way, this page is out of date, since nowadays wheels are available on Linux and contain their own OpenBLAS [CLS] [SEP] If you install a released scikit learn with pip you will be using OpenBLAS [CLS] [SEP] lesteve are you saying that Openblas does not cause a freeze anymore [CLS] [SEP] lesteve paula has posted a snippet that also has the same problem [CLS] [SEP] I can see it's not complete code, but I hope it gives some clue [CLS] [SEP] I can make here snippet complete and post for you [CLS] [SEP] However, it is clear that the out of date as you call it instructions page may not be so out of date [CLS] [SEP] The highest likelihood is that OpenBLAS is causing the fees they are talking about in that page [CLS] [SEP] These instructions are outdated believe me [CLS] [SEP] If you read in details, it says but can freeze joblib multiprocessing prior to OpenBLAS version 0 [CLS] [SEP] 8 4 [CLS] [SEP] I checked a recent numpy wheel and it contains OpenBLAS 0 [CLS] [SEP] 8 [CLS] [SEP] 18 [CLS] [SEP] The freeze they are referring to is the one in LINKLINK, which you don't seem to have [CLS] [SEP] Not really no [CLS] [SEP] We have reports of users that seems to indicate that freezing can still happen, none of which we have managed to reproduce AFAIK [CLS] [SEP] That seems to indicate, that this problem happens in some very specific combination of factors [CLS] [SEP] Unless someone that has the problem spends some time and figures out how to reproduce in a controlled way and we manage to reproduce, there is just no way we can do anything about it [CLS] [SEP] That would be great [CLS] [SEP] That would be great if you could check if such a snippet still cause the freeze in a separate conda environment or virtualenv depending on what you use [CLS] [SEP] lesteve paulaceccon: I took Paula's excerpt code and made a complete run able code snippet [CLS] [SEP] Just paste it into a Jupyter cell and run it [CLS] [SEP] Paula: I could not get this snippet to freeze [CLS] [SEP] Notice that n jobs thumbs down and runs fine [CLS] [SEP] Would be great if you can take a look and post a version of it that freezes [CLS] [SEP] Notice that you can switch between grid search module and model selection module, both ran fine for me [CLS] [SEP] CODELCODEL KaisJM I think it is more useful if you start from your freezing script and manage to simplify and post a fully stand alone that freezes for you [CLS] [SEP] lesteve Agreed [CLS] [SEP] I created a new python2 environment like the one I had before installing Gensim [CLS] [SEP] Code ran fine, NO freeze with n jobs thumbs down [CLS] [SEP] What's more, Numpy is using OpenBLAS and has the same config as the environment that exhibits the freeze the one where Gensim was installed [CLS] [SEP] So it seems that openblas is not the cause of this freeze [CLS] [SEP] CODELCODEL KaisJM I'm running the same snippet here windows and it freezes [CLS] [SEP] CODELCODEL. I know that it's awkward but it didn't froze when running with a custom metric [CLS] [SEP] I have a similar problem [CLS] [SEP] I have been running the same code and simply wanted to update the model with the new month data and it stopped running [CLS] [SEP] i believe sklearn got updated in the meantime to 0 [CLS] [SEP] 19Running GridSearchCV or RandomizedSearchCV in a loop and n jobs 1 would hang silently in Jupiter & IntelliJ: CODELCODEL. Followed lesteve recommendation & checked environment & removed numpy installed with pip: Darwin thumbs down 6 [CLS] [SEP] 0 x86 64 i386 64bit. Python 3 [CLS] [SEP] 1 Anaconda custom x86 64 default, May 11 2017, 13:04:09. NumPy 1 [CLS] [SEP] 13 [CLS] [SEP] 1. SciPy 0 [CLS] [SEP] 19 [CLS] [SEP] 1. Scikit Learn 0 [CLS] [SEP] 19 [CLS] [SEP] 0. conda list grep numpy. gnumpy 0 [CLS] [SEP] 2 pip. numpy 1 [CLS] [SEP] 13 [CLS] [SEP] 1 py36 0. numpy 1 [CLS] [SEP] 13 [CLS] [SEP] 3 pip. numpydoc 0 [CLS] [SEP] 0 py36 0. pip uninstall numpy. conda list grep numpy. gnumpy 0 [CLS] [SEP] 2 pip. numpy 1 [CLS] [SEP] 13 [CLS] [SEP] 1 py36 0. numpydoc 0 [CLS] [SEP] 0 py36 0. conda install numpy f most likely unnecessary. conda list grep numpy. gnumpy 0 [CLS] [SEP] 2 pip. numpy 1 [CLS] [SEP] 13 [CLS] [SEP] 1 py36 0. numpydoc 0 [CLS] [SEP] 0 py36 0. Fixed my problem [CLS] [SEP] paulaceccon your problem is related to. The following will run your code: CODELCODEL. with external [CLS] [SEP] py. CODELCODEL. Results running on 8 cores. Fitting 3 folds for each of 54 candidates, totalling 162 fits. Done 34 tasks elapsed: 7 [CLS] [SEP] 1s. Done 162 out of 162 elapsed: 30 [CLS] [SEP] 5s finished. 'class weight': 0: 0 [CLS] [SEP] 51891309, 1: 13 [CLS] [SEP] 71835531, 'criterion': 'gini', 'min samples leaf': 10, 'min samples split': 20, 'n estimators': 400. Issue is still there guys [CLS] [SEP] I am using a custom scorer and it keeps going on forever when I set n jobs to anything [CLS] [SEP] When I don't specify n jobs at all it works fine but otherwise it freezes [CLS] [SEP] Can you provide a stand alone snippet to reproduce the problem [CLS] [SEP] Please read LINKLINK for more details [CLS] [SEP] Still facing this problem with the same sample code [CLS] [SEP] Windows thumbs down 0 thumbs down 0 [CLS] [SEP] 15063 SP0. Python 3 [CLS] [SEP] 4 Anaconda custom 64 bit default, Jan 16 2018, 10:22:32. NumPy 1 [CLS] [SEP] 14 [CLS] [SEP] 1. SciPy 1 [CLS] [SEP] 0. Scikit Learn 0 [CLS] [SEP] 19 [CLS] [SEP] 1. Can you provide a stand alone snippet to reproduce the problem [CLS] [SEP] Please read LINKLINK for more details [CLS] [SEP] I suspect this is the same old multiprocessing in windows issue [CLS] [SEP] see our FAQ. I tested the code in thomberg1's LINKLINK [CLS] [SEP] OS: Windows 10 x64 10 [CLS] [SEP] 16299 [CLS] [SEP] 309. Python package: WinPython 64bit 3 [CLS] [SEP] 1. numpy 1 [CLS] [SEP] 14 [CLS] [SEP] 2. scikit learn 0 [CLS] [SEP] 19 [CLS] [SEP] 1. scipy 1 [CLS] [SEP] 0. It worked fine in Jupyter Notebook and command line [CLS] [SEP] HI, i m having the same issue, so i did not want to open new one which could lead to almost identical thread [CLS] [SEP] Macos. Anaconda. scikit learn 0 [CLS] [SEP] 19 [CLS] [SEP] scipy 1 [CLS] [SEP] numpy 1 [CLS] [SEP] 14 [CLS] [SEP] CODELCODEL. Code is from a tutorial: LINKLINK. I tried changing the n jobs parameter to 1, thumbs down, but neither of these worked [CLS] [SEP] Any hint [CLS] [SEP] it runs if I add the multiprocessing import and the if statement as show below I don't work with keras so I don't have more insight. CODELCODEL. Fitting 3 folds for each of 18 candidates, totalling 54 fits. Done 26 tasks elapsed: 18 [CLS] [SEP] 4s. Done 54 out of 54 elapsed: 23 [CLS] [SEP] 7s finished. Best: 0 [CLS] [SEP] 675781 using 'batch size': 5, 'epochs': 5, 'init': 'glorot uniform', 'optimizer': 'adam'.0 [CLS] [SEP] 621094 0 [CLS] [SEP] 036225 with: 'batch size': 5, 'epochs': 5, 'init': 'glorot uniform', 'optimizer': 'rmsprop'.0 [CLS] [SEP] 675781 0 [CLS] [SEP] 006379 with: 'batch size': 5, 'epochs': 5, 'init': 'glorot uniform', 'optimizer': 'adam'. [CLS] [SEP] 0 [CLS] [SEP] 651042 0 [CLS] [SEP] 025780 with: 'batch size': 20, 'epochs': 5, 'init': 'uniform', 'optimizer': 'adam'. version info if needed. sys 3 [CLS] [SEP] 4 Anaconda custom 64 bit default, Jan 16 2018, 12:04:33. numpy 1 [CLS] [SEP] 14 [CLS] [SEP] 2. pandas 0 [CLS] [SEP] 22 [CLS] [SEP] 0. sklearn 0 [CLS] [SEP] 19 [CLS] [SEP] 1. torch 0 [CLS] [SEP] 0a0+9692519. IPython 6 [CLS] [SEP] 1. keras 2 [CLS] [SEP] 5. compiler: GCC 4 [CLS] [SEP] 1 Compatible Clang 4 [CLS] [SEP] 1 tags RELEASE 401 final. system: Darwin. release: 17 [CLS] [SEP] 0. machine: x86 64. processor: i386. CPU cores: 24. interpreter: 64bitThank you thomberg1, but adding. CODELCODEL. did not help [CLS] [SEP] The problem is still the sameSame problem on my machine when using customized scoring function in CODESCODES [CLS] [SEP] python 3 [CLS] [SEP] 4, scikit learn 0 [CLS] [SEP] 19 [CLS] [SEP] windows 10 [CLS] [SEP] CPU cores: 24 byrony can you provide code to reproduce [CLS] [SEP] did you use CODESCODES if name main CODESCODES [CLS] [SEP] I've experienced a similar problem multiple times on my machine when using CODESCODES or CODESCODES as an argument for CODESCODES but using the default scorer argument [CLS] [SEP] Python 3 [CLS] [SEP] 5, scikit learn 0 [CLS] [SEP] 19 [CLS] [SEP] Arch Linux, CPU cores: Here is the code I used: CODELCODEL. I know is a big dataset so I expected it would take some time to get results but then after 2 days running, it just stopped working the script keeps executing but is not using any resource apart from RAM and swap [CLS] [SEP] LINKLINK. LINKLINK. Thanks in advance [CLS] [SEP] amueller I didn't use the CODESCODES [CLS] [SEP] Below is my code, it only works when CODESCODES. CODELCODEL You're using XGBoost [CLS] [SEP] I don't know what they do internally, it's very possible that's the issue [CLS] [SEP] Can you try to see if adding the CODESCODES if name CODESCODES helps [CLS] [SEP] Otherwise I don't think there's a fix for that yet [CLS] [SEP] Pazitos10 can you reproduce with synthetic data and or smaller data [CLS] [SEP] I can't reproduce without your data and it would be good to reproduce in shorter time [CLS] [SEP] amueller Ok, I will run it again with 500k rows and will post the results [CLS] [SEP] Thanks [CLS] [SEP] amueller, running the script with 50k rows works as expected [CLS] [SEP] The script ends correctly, showing the results as follows sorry, I meant 50k not 500k: LINKLINK. LINKLINK. The problem is that I don't know if these results are going to be the best for my whole dataset [CLS] [SEP] Any advice [CLS] [SEP] Seems like you're running out of ram [CLS] [SEP] Maybe try using Keras instead, it's likely a better solution for large scale neural nets [CLS] [SEP] amueller Oh, ok [CLS] [SEP] I will try using Keras instead [CLS] [SEP] Thank you again [CLS] [SEP] Is it perhaps an idea for scikit, that in case of Windows to alter the function. And use queues to feed tasks to a collection of worker processes and collect the results. As described here: LINKLINK. and for 3 [CLS] [SEP] 6 here: LINKLINK PGTBoos this is fixed in scikit learn 0 [CLS] [SEP] 20 [CLS] [SEP] 0. 