Apologies for this somewhat long issue. It describes my progress and ultimate failure to install jupyter extensions. I just upgraded from ipython to jupyter and am trying to get my environment working properly. I upgraded using conda CODESCODES and have jupyer 1.0 installed. I am trying to get extensions working, following these instructions: LINKLINK. First I was stuck on installing extensions: LINKLINK. When I first tried. CODELCODEL. I got a long stack trace ending with. CODELCODEL. It seemed like it was looking for an extension in my local file path, so I surmised I was supposed to clone the IPython notebook extensions repo and install the extensions from the base directory. CODELCODEL. Still got the IOError. However, examining the repo files, I was able to finally get something to work. CODELCODEL. This command completed without an error, so I assumed it was working. In fact, it put the file CODESCODES into the path CODESCODES, which I presume is not the desired behavior. After futher trial and error, I ended up with. CODELCODEL. which gave me. CODELCODEL. Looked good. I now have all the extension files in CODESCODES. So I did. CODELCODEL. As far as I can tell, all this does is put the following into CODESCODES. CODELCODEL. Now I start jupyter in my home directory with CODESCODES. After creating a new python 2 notebook, I see the followin in the log. CODELCODEL. which makes me think that the extension is not being found. Sure enough, the extension doesn't work. The following cell. CODELCODEL. gives me CODESCODES. I am using the most standard platform possible anaconda on mac and have tried to follow the instructions carefully, but I really don't see how to move forward. So there seems to be a bug in either the code or the documentation. Any advice appreciated. p. The output of my config path info is. CODELCODEL. CODELCODEL. CODELCODEL. CODELCODEL. rabernat I'm sorry that the installation instructions for notebook extensions has been frustrating. I also followed the documentation you linked and, like you, was unsuccessful in installing the codefolding extension. I am fairly confident that this is a documentation issue. Please bear with us on this holiday weekend in the US and have confidence that we wish to assist you. minrk Carreau ellisonbg I'm game for writing an installation doc for notebook extensions when using an anaconda installation on the mac. In troubleshooting, I found that: the standard Anaconda download for 3.4 defaults to CODESCODES. the PATH needs to be updated to include anaconda bin. conda's default version is 3.14. After executing CODESCODES and CODESCODES, the versions are CODESCODES, CODESCODES and CODESCODES. After CODESCODES, CODESCODES, CODESCODES, CODESCODES and CODESCODES. This is what I would expect. As rabernat, the remaining installation instructions were insufficient for successful activation of the extension: I was able to have the check nbextension return True after cloning the ipython extensions repo, jupyter installing, and jupyter enabling the extension. Alas, the extensions were not active. Any tips would be much appreciated and turned into a shiny document: penguin: ocean: I have reorganized the CODESCODES repository today. It now has a CODESCODES script for installing the extensions and a recipe to generate a conda package. Also, the Jupyter related documentation of the LINKLINK has been updated. The nbconfig server extension will now be installed too, making activating deactivating extensions much easier. I hope this will help you getting the extensions to work. juhasch You are awesome! Thanks for sharing. rabernat Thanks to the work by juhasch I was able to get the extensions to work. Here's what I did: Cloned IPython notebook extensions From the directory that contains IPython notebook extensions directory, CODESCODES CODESCODES I couldn't get CODESCODES to work properly. May have been a path issue. I did get working with CODESCODES. Navigated to CODESCODES and was able to activate extensions and use them. Good luck. Thanks again juhasch: smile: Thanks a lot willingc and juhasch! I can see things are moving fast with this project. I also filed an issue over at the extensions repo ipython contrib IPython notebook extensions 282 and got some help from juhasch there. With those instructions, I was able to get codefolding working. I just tried the steps described by willingc above, and it worked perfectly. IMO the nbextensions tool is awesome and should be the recommended way to install extensions. I will leave it to the developers to decide whether this should be closed now or whether it should stay open until the LINKLINK are updated. Many thanks to everyone for these amazing tools. Pointer to a non conda set of instructions? or advice? If you are using Jupyter IPython 4: Clone the repo Call CODESCODES Enjoy: I got that far and now this works: CODELCODEL. But this does not: CODELCODEL.​. Jupyter. load extensions 'IPython notebook extensions usability codefolding main' ;. Javascript error adding output! TypeError: Jupyter. load extensions is not a function. See your browser Javascript console for more details. The only thing I see ind the JS console is: TypeError: Jupyter. load extensions is not a function …. Use something like. CODESCODES to. activate extension, rather than relying on directly calling the methods. with a hack. Tom Brander. wrote: Have you tried the nbconfig extension by calling CODESCODES? adjust the hostname and port if you use another configuration. Carreau: If I Use Jupyter. prefix I get Jupyter not defined. Did not know Javascript was a hack it is all over the older docs. CODELCODEL. juhasch when I access 127.8888 nbextensions I just get the Jupyter header saying notebook extension configuration, no body to configure with. Sorry I should have been more clear: Open the browser javascript console, and use CODESCODES from the JS console. That's what juhasch should mostly do under the hood. Carreau Seems to work, would it work with javascript from in notebook? it does not. bad typo sorry deleted. You are bad at copy pasting. Juypter Jupyter invert CODESCODES and CODESCODES. And when typed correctly this works. javascript. Jupyter. notebook. config. update load extensions: codefolding: true. now if you reload, the extension should hopefully work and you should see a message like CODESCODES in the JS console. so a big takeaway for me is the new syntax for loading from within notebook no more of this Jupyter. load extensions which is lot of places? Ah yes so it get permanently added to the config. how does one now only add when wanted? and deactivate? The nbconfig extension should do that for you: LINKLINK. Can you post the pages source from the Browser when going to CODESCODES? Page source. LINKLINK. I'm also not getting any function with codeFolding no gutter although I'm getting no error on loading it. Do I need to somehow install configure code mirror separately? I don't see any obvious direction for that? There is no need to install anything beyond the extensions. They should work out of the box. It looks like you have installed the extensions now twice, in. CODESCODES and CODESCODES. You can check your configuration like this in a notebook: CODELCODEL. For each notebook extension that is loaded, there will be an entry. You might need to change CODESCODES to notebook. json', depending on the version of the notebook you use if the list is empty. My main config appears to be;. home tom. local share jupyter. so I have one in the Jupyter directory which is the old one home tom. local share jupyter nbextensions copied there during the Ipython to Jupyter process, I Imagine I should delete rename it? so that only the one under home recently cloned from Github directory remains? but of course the new one does not contain all that I'm using eg live reveal, which is working now. using your suggested commands shows: cl JSONFileConfigLoader fname. Out: u'load extensions': u'codefolding': True, u'livereveal main': True. I'm out of my depth clearly on cleaning this mess up? and hopefully getting the new nbcofig page extension to work? Appreciate the help very much. I'd guess on renaming the nbextensions in the main Juypyter install directory? It looks like you now have mixed versions of the notebook extensions installed. The page source you sent me was from x. The easy way would be to simply delete the CODESCODES, CODESCODES, and CODESCODES directories you have in CODESCODES, and then doing the CODESCODES thing again. Damn. I renamed extensions, nbextensions and templates in home tom. local share jupyter I restarted the entire Jupyter session and reran all of the above stuff checked home tom. local share jupyter and the directories were all back. I guess due to the setup install but still no configuration page accessible nor any codefolding gutter. The js console on the config page shows all the extensions as found but the body content of the page is blank. wondering if my attempt to install Anaconda messed things up as I see that in the Jupyter path, which bothers me since I'm running my system python, Then you should remove or rename the configuration files found in CODESCODES. See: CODELCODEL. Rerunning CODESCODES will recreate the configuration. Just look in all the directories you get from CODESCODES and CODESCODES and remove the old extensions and configuration files or move them away. where do I re run the setup py from? Just go where you have downloaded the current master version of this repository and type CODESCODES. Well still no joy. Removed all config files. reran install from the nbextensions dir. still just get the header on the config page and no gutter for folding. I even went ahead and ran the anaconda install since my notebook is showing it is being run by the anaconda interpeter and my python command line seems to be invoking the Anaconda interpreter as well. no change. Completely flummoxed. Should I just uninstall all Jupyter and start over? How to best make sure I kill all the stuff? So a ghost config file does not mess me up. I'm getting this: tom tom sam: which jupyter. home tom anaconda bin jupyter. So I'm guessing this is messing stuff up? For the record, on the off chance anyone else has similar issues: I removed the Anaconda reference in. bashrc, I then pip uninstalled all ipython and jupyter packages and manually deleted any other jupyter and Ipython config files, have been using this stuff for a few years there were numerous instances. Reinstalled via pip requires sudo and restarted the jupyter nb server and I have a extension config page and extensions work when enabled. whew. Now I'll have just a few add ins to chase down. but at least starting on what I hope is a firm base. I really appreciate the patience here, you all helped point me into finally understanding just how screwed my config had gotten. As far as I'm concerned ready to close! dartdog I'm glad that you got your configuration sorted out. minrk Carreau juhasch Let's go ahead and close this issue. Thanks. willingc thanks! dartdog sorry for the confusion. ilanschnell csoja groutr: is there something we can do on the Anaconda or conda side to help avoid this situation in the future? ijstokes, for me, it would be awesome to simply: CODELCODEL. and voilà, dependencies are resolved and installed. Then, upon launching Jupyter notebook, a new tab appears in the across the top of launch page for example, LINKLINK for managing all. If I had more knowledge of conda. cry: One day. nehalecky, there is a conda package in the ipython contrib repo that could help you to package your extension. and also some UI to manage the extensions as well: LINKLINK. damianavila, thanks for the reply. Are you referring to LINKLINK? If so, I've followed them and, alongside a few others, hit some bumps along the way see LINKLINK. That's why I think it would be nice to have an existing conda package that is available so one can simply install nbextensions from the command line like CODESCODES, with an added tab on the notebook launch so we don't have to remember the url to get to the nbextension management UI. Let me know if that make sense? thumbs up. We are working on making installation easier. We will most likely have conda packages and try a pip installable package. See LINKLINK. Just want to share my journey here in detail too, which may help in follow the steps. Windows 10 Anaconda 2.0 Python2.7 64bit all of Jupyter, IPython should be updated to the latest and greatest. Summary. git cloned IPython notebook extensions. To: CODESCODES. CODESCODES. Run from here: CODESCODES. CODESCODES. Don't be irritated about all the The following NEW packages will be INSTALLED: it creates a new environment named CODESCODES with all dependencies to build the extension! Since from here on I wasn't able to follow willingc steps 6. I had figured out this route, based on juhasch repeated pointers to CODESCODES thumbs up. Activated the build environment: CODESCODES. CODESCODES. Cannot install while the Jupyter notebook server is running. Stopped the jupyter notebook. CODESCODES. CODELCODEL. CODESCODES. Restarted the jupyter notebook. Access: LINKLINK. And here was all the glory and awesome simple access to nbextensions! Thanks so much for working on this so hard, because some of this extensions are just brilliant for working all day long with Jupyter Notebooks! SOLVED! Looking forward for a simpler install procedure, for sharing this with my peers in the near future. I know that installing nbextensions is horrifically painful today. We are. currently working to create a new system that is based on npm packages. This work is being done in collaboration with Continuum and will include a. solution that works well with Conda. However, the new system will have a. completely different API and put assets in completely different locations. on disk. The underlying JavaScript APIs in the notebook will change. entirely as well. We are hoping to have initial releases of that in the. next few months, and hae things stable in 6 months more details to follow. I have great regrets in releasing the existing nbextension system given how. difficult it is to work with and manage packaging and installation. I think. it is worth trying to do small things to improve the existing system, but I. wouldn't invest major work in that direction. I know this is a completely. PITA, but we are confident the new system will be nice enough that people. will want to use it and ditch the old system. Cheers, Brian. spex66 wrote: Brian Granger. Associate Professor of Physics and Data Science. Cal Poly State University, San Luis Obispo. ellisonbg on Twitter and GitHub. and. ellisonbg sounds interesting, is there anywhere I can read about that effort? Not yet, but soon. right now it is spread across many conversations on. gitter, in person and work in many repos. We are working on a roadmap that. will provide a centralize outline of this and other work. jcb91 wrote: Brian Granger. Associate Professor of Physics and Data Science. Cal Poly State University, San Luis Obispo. ellisonbg on Twitter and GitHub. and. Hi there, I attempted to build Ipython notebook extensions as willingc, however, I was not able to get through to step And the result were generate below. I have checked and have Pyyaml version 3.11 installed. Processing dependencies for Python contrib nbextensions alpha. Searching for pyyaml. Traceback most recent call last: File setup. py, line 92, in. install requires, self. run command cmd. RuntimeError: Setuptools downloading is disabled in conda build. Be sure to add all dependencies in the meta. yaml url LINKLINK. I have installed in my Windows Anaconda installation: CODELCODEL. Feel free to open up an issue at LINKLINK as it is an issue with the installer from there. This thread is almost two years old, and yet I'm seeing some of the same error messages mentioned here. I'm only having troubles on Ubuntu. I did the following: conda install c conda forge jupyter contrib nbextensions n py36. conda install nb conda kernels n py36. Then when the NB Extensions tab failed to appear, I ran the first of these two commands in the following manner: python m pip install user jupyter contrib nbextensions. With that sequence, nbextensions works in Windows but not in Ubuntu. I continue to get 404 GET errors of the sort described in this thread on Ubuntu, so I tried modifying the. json file adding codefolding main: true: CODELCODEL. So far nbextensions is still refusing to load on Ubuntu.